(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./js/d3.js":
/*!******************!*\
  !*** ./js/d3.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//Copyright (c) 2010-2014, Michael Bostock\n//All rights reserved.\n//\n//Redistribution and use in source and binary forms, with or without\n//modification, are permitted provided that the following conditions are met:\n//\n//* Redistributions of source code must retain the above copyright notice, this\n//  list of conditions and the following disclaimer.\n//\n//* Redistributions in binary form must reproduce the above copyright notice,\n//  this list of conditions and the following disclaimer in the documentation\n//  and/or other materials provided with the distribution.\n//\n//* The name Michael Bostock may not be used to endorse or promote products\n//  derived from this software without specific prior written permission.\n//\n//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n//DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\n//INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n//BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n//DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n//OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n//NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n//EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n!function () {\n  var d3 = {\n    version: \"3.4.8\"\n  };\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = document,\n      d3_documentElement = d3_document.documentElement,\n      d3_window = window;\n\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function d3_array(list) {\n      var i = list.length,\n          array = new Array(i);\n\n      while (i--) {\n        array[i] = list[i];\n      }\n\n      return array;\n    };\n  }\n\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype,\n        d3_element_setAttribute = d3_element_prototype.setAttribute,\n        d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n        d3_style_prototype = d3_window.CSSStyleDeclaration.prototype,\n        d3_style_setProperty = d3_style_prototype.setProperty;\n\n    d3_element_prototype.setAttribute = function (name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n\n    d3_element_prototype.setAttributeNS = function (space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n\n    d3_style_prototype.setProperty = function (name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) {\n        a = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) {\n        a = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) {\n        a = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) {\n        a = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) {\n        a = c = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) {\n        a = undefined;\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (!isNaN(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_number(a = array[i])) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_number(a = f.call(array, array[i], i))) s += a;else --j;\n      }\n    }\n\n    return j ? s / j : undefined;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3_ascending), .5) : undefined;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array) {\n    var m = array.length,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.zip = function () {\n    if (!(n = arguments.length)) return [];\n\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m;) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n;) {\n        zip[j] = arguments[j][i];\n      }\n    }\n\n    return zips;\n  };\n\n  function d3_zipLength(d) {\n    return d.length;\n  }\n\n  d3.transpose = function (matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n\n  d3.map = function (object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function (key, value) {\n      map.set(key, value);\n    });else for (var key in object) {\n      map.set(key, object[key]);\n    }\n    return map;\n  };\n\n  function d3_Map() {}\n\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function set(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n      this.forEach(function (key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n      this.forEach(function (key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);\n      }\n    }\n  });\n  var d3_map_prefix = \"\\x00\",\n      d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\n  function d3_map_has(key) {\n    return d3_map_prefix + key in this;\n  }\n\n  function d3_map_remove(key) {\n    key = d3_map_prefix + key;\n    return key in this && delete this[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n    this.forEach(function (key) {\n      keys.push(key);\n    });\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this) {\n      if (key.charCodeAt(0) === d3_map_prefixCode) ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this) {\n      if (key.charCodeAt(0) === d3_map_prefixCode) return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {}\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function remove(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")],\n      d3_selectMatches = function d3_selectMatches(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3_selectionRoot;\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return name.trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function () {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function () {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(function () {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            dataByKeyValue = new d3_Map(),\n            keyValues = [],\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n\n          keyValues.push(keyValue);\n        }\n\n        for (i = -1; ++i < m;) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    this.each(function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3_selectionPrototype.transition = function () {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, id);\n  };\n\n  d3_selectionPrototype.interrupt = function () {\n    return this.each(d3_selection_interrupt);\n  };\n\n  function d3_selection_interrupt() {\n    var lock = this.__transition__;\n    if (lock) ++lock.active;\n  }\n\n  d3.select = function (node) {\n    var group = [typeof node === \"string\" ? d3_select(node, d3_document) : node];\n    group.parentNode = d3_documentElement;\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([group]);\n  };\n\n  var d3_selectionRoot = d3.select(d3_documentElement);\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function (k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"),\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  function d3_behavior_dragTouchSubject() {\n    return d3.event.target;\n  }\n\n  function d3_behavior_dragMouseSubject() {\n    return d3_window;\n  }\n\n  var π = Math.PI,\n      τ = 2 * π,\n      halfπ = π / 2,\n      ε = 1e-6,\n      ε2 = ε * ε,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2];\n    var dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1),\n        dr = r1 - r0,\n        S = (dr || Math.log(w1 / w0)) / ρ;\n\n    function interpolate(t) {\n      var s = t * S;\n\n      if (dr) {\n        var coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      }\n\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s)];\n    }\n\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = dx / 2,\n                cy = dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      dispatch({\n        type: \"zoomend\"\n      });\n    }\n\n    function mousedowned() {\n      var that = this,\n          target = d3.event.target,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, d3_window === that ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that).on(mousedown, null).on(touchstart, started),\n          dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      started();\n      zoomstarted(dispatch);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0],\n                l = locations0[p.identifier];\n            scaleTo(view.k * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            zoomed(dispatch);\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      var point = center || d3.mouse(this);\n      if (!translate0) translate0 = location(point);\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(point, translate0);\n      zoomed(dispatch);\n    }\n\n    function mousewheelreset() {\n      translate0 = null;\n    }\n\n    function dblclicked() {\n      var dispatch = event.of(this, arguments),\n          p = d3.mouse(this),\n          l = location(p),\n          k = Math.log(view.k) / Math.LN2;\n      zoomstarted(dispatch);\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      zoomed(dispatch);\n      zoomended(dispatch);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity];\n  var d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n\n  function d3_Color() {}\n\n  d3_Color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = function (h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = function (h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = function (l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n\n  d3_labPrototype.brighter = function (k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = function (r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.substring(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n\n        return text.substring(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_active,\n      d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function (callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping ? function (value) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0];\n\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n        if (comma) width -= Math.floor((width - 1) / 4);\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before = i < 0 ? value : value.substring(0, i),\n            after = i < 0 ? \"\" : locale_decimal + value.substring(i + 1);\n        if (!zfill && comma) before = formatGroup(before);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.substring(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.substring(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.substring(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.substring(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = ~~(abs(z) / 60),\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [-_[1], _[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return projection.rotate([0, 0]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5,\n            sy = (y1 + y2) * .5,\n            right = x >= sx,\n            bottom = y >= sy,\n            i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx;else x2 = sx;\n        if (bottom) y1 = sy;else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function (t) {\n      return a + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.substring(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.substring(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = _typeof(b);\n\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.substring(0, i) : name,\n        m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [],\n        n,\n        A = d3.transform(a),\n        B = d3.transform(b),\n        ta = A.translate,\n        tb = B.translate,\n        ra = A.rotate,\n        rb = B.rotate,\n        wa = A.skew,\n        wb = B.skew,\n        ka = A.scale,\n        kb = B.scale;\n\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n\n    n = q.length;\n    return function (t) {\n      var i = -1,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function (x) {\n      return (x - a) * b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) alpha = x;else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            m = candidates.length,\n            x;\n\n        while (++j < m) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ;\n\n    function pie(data) {\n      var values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function (i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n\n    pie.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n\n    pie.startAngle = function (x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n\n    pie.endAngle = function (x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length,\n          m = series[0].length,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = _typeof(x)) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length),\n          f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, Math.floor),\n          e;\n      return function (d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)),\n          error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(d3_number).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments),\n          r1 = outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset,\n          a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset,\n          da = (a1 < a0 && (da = a0, a0 = a1, a1 = da), a1 - a0),\n          df = da < π ? \"0\" : \"1\",\n          c0 = Math.cos(a0),\n          s0 = Math.sin(a0),\n          c1 = Math.cos(a1),\n          s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2,\n          a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcOffset = -halfπ,\n      d3_svg_arcMax = τ - ε;\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset,\n          a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] + d3_svg_arcOffset;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node.__transition__[id].tween.remove(name);\n    } : function (node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function (node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, id1);\n  };\n\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id];\n\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function (elapsed) {\n        var d = node.__data__,\n            ease = transition.ease,\n            delay = transition.delay,\n            duration = transition.duration,\n            timer = d3_timer_active,\n            tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function (key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          d3.timer(function () {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = elapsed / duration,\n              e = ease(t),\n              n = tweened.length;\n\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, d, i);\n            return stop();\n          }\n        }\n\n        function stop() {\n          if (--lock.count) delete lock[id];else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\");\n\n        switch (orient) {\n          case \"bottom\":\n            {\n              tickTransform = d3_svg_axisX;\n              lineEnter.attr(\"y2\", innerTickSize);\n              textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n              lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n              textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n              text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n              pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n              break;\n            }\n\n          case \"top\":\n            {\n              tickTransform = d3_svg_axisX;\n              lineEnter.attr(\"y2\", -innerTickSize);\n              textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n              lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n              textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n              text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n              pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n              break;\n            }\n\n          case \"left\":\n            {\n              tickTransform = d3_svg_axisY;\n              lineEnter.attr(\"x2\", -innerTickSize);\n              textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n              lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n              textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n              text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n              pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n              break;\n            }\n\n          case \"right\":\n            {\n              tickTransform = d3_svg_axisY;\n              lineEnter.attr(\"x2\", innerTickSize);\n              textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n              lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n              textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n              text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n              pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n              break;\n            }\n        }\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1);\n        }\n\n        tickEnter.call(tickTransform, scale0);\n        tickUpdate.call(tickTransform, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function (d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function (d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}();\n\n//# sourceURL=webpack:///./js/d3.js?");

/***/ }),

/***/ "./js/rune.js":
/*!********************!*\
  !*** ./js/rune.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (f) {\n  if (( false ? undefined : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (f),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var g; }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return require(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (require, module, exports) {}, {}],\n    2: [function (require, module, exports) {\n      /* MIT license */\n      module.exports = {\n        rgb2hsl: rgb2hsl,\n        rgb2hsv: rgb2hsv,\n        rgb2hwb: rgb2hwb,\n        rgb2cmyk: rgb2cmyk,\n        rgb2keyword: rgb2keyword,\n        rgb2xyz: rgb2xyz,\n        rgb2lab: rgb2lab,\n        rgb2lch: rgb2lch,\n        hsl2rgb: hsl2rgb,\n        hsl2hsv: hsl2hsv,\n        hsl2hwb: hsl2hwb,\n        hsl2cmyk: hsl2cmyk,\n        hsl2keyword: hsl2keyword,\n        hsv2rgb: hsv2rgb,\n        hsv2hsl: hsv2hsl,\n        hsv2hwb: hsv2hwb,\n        hsv2cmyk: hsv2cmyk,\n        hsv2keyword: hsv2keyword,\n        hwb2rgb: hwb2rgb,\n        hwb2hsl: hwb2hsl,\n        hwb2hsv: hwb2hsv,\n        hwb2cmyk: hwb2cmyk,\n        hwb2keyword: hwb2keyword,\n        cmyk2rgb: cmyk2rgb,\n        cmyk2hsl: cmyk2hsl,\n        cmyk2hsv: cmyk2hsv,\n        cmyk2hwb: cmyk2hwb,\n        cmyk2keyword: cmyk2keyword,\n        keyword2rgb: keyword2rgb,\n        keyword2hsl: keyword2hsl,\n        keyword2hsv: keyword2hsv,\n        keyword2hwb: keyword2hwb,\n        keyword2cmyk: keyword2cmyk,\n        keyword2lab: keyword2lab,\n        keyword2xyz: keyword2xyz,\n        xyz2rgb: xyz2rgb,\n        xyz2lab: xyz2lab,\n        xyz2lch: xyz2lch,\n        lab2xyz: lab2xyz,\n        lab2rgb: lab2rgb,\n        lab2lch: lab2lch,\n        lch2lab: lch2lab,\n        lch2xyz: lch2xyz,\n        lch2rgb: lch2rgb\n      };\n\n      function rgb2hsl(rgb) {\n        var r = rgb[0] / 255,\n            g = rgb[1] / 255,\n            b = rgb[2] / 255,\n            min = Math.min(r, g, b),\n            max = Math.max(r, g, b),\n            delta = max - min,\n            h,\n            s,\n            l;\n        if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n        h = Math.min(h * 60, 360);\n        if (h < 0) h += 360;\n        l = (min + max) / 2;\n        if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n        return [h, s * 100, l * 100];\n      }\n\n      function rgb2hsv(rgb) {\n        var r = rgb[0],\n            g = rgb[1],\n            b = rgb[2],\n            min = Math.min(r, g, b),\n            max = Math.max(r, g, b),\n            delta = max - min,\n            h,\n            s,\n            v;\n        if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n        if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n        h = Math.min(h * 60, 360);\n        if (h < 0) h += 360;\n        v = max / 255 * 1000 / 10;\n        return [h, s, v];\n      }\n\n      function rgb2hwb(rgb) {\n        var r = rgb[0],\n            g = rgb[1],\n            b = rgb[2],\n            h = rgb2hsl(rgb)[0],\n            w = 1 / 255 * Math.min(r, Math.min(g, b)),\n            b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n        return [h, w * 100, b * 100];\n      }\n\n      function rgb2cmyk(rgb) {\n        var r = rgb[0] / 255,\n            g = rgb[1] / 255,\n            b = rgb[2] / 255,\n            c,\n            m,\n            y,\n            k;\n        k = Math.min(1 - r, 1 - g, 1 - b);\n        c = (1 - r - k) / (1 - k) || 0;\n        m = (1 - g - k) / (1 - k) || 0;\n        y = (1 - b - k) / (1 - k) || 0;\n        return [c * 100, m * 100, y * 100, k * 100];\n      }\n\n      function rgb2keyword(rgb) {\n        return reverseKeywords[JSON.stringify(rgb)];\n      }\n\n      function rgb2xyz(rgb) {\n        var r = rgb[0] / 255,\n            g = rgb[1] / 255,\n            b = rgb[2] / 255; // assume sRGB\n\n        r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n        g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n        b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n        var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n        var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n        var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n        return [x * 100, y * 100, z * 100];\n      }\n\n      function rgb2lab(rgb) {\n        var xyz = rgb2xyz(rgb),\n            x = xyz[0],\n            y = xyz[1],\n            z = xyz[2],\n            l,\n            a,\n            b;\n        x /= 95.047;\n        y /= 100;\n        z /= 108.883;\n        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n        l = 116 * y - 16;\n        a = 500 * (x - y);\n        b = 200 * (y - z);\n        return [l, a, b];\n      }\n\n      function rgb2lch(args) {\n        return lab2lch(rgb2lab(args));\n      }\n\n      function hsl2rgb(hsl) {\n        var h = hsl[0] / 360,\n            s = hsl[1] / 100,\n            l = hsl[2] / 100,\n            t1,\n            t2,\n            t3,\n            rgb,\n            val;\n\n        if (s == 0) {\n          val = l * 255;\n          return [val, val, val];\n        }\n\n        if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n        t1 = 2 * l - t2;\n        rgb = [0, 0, 0];\n\n        for (var i = 0; i < 3; i++) {\n          t3 = h + 1 / 3 * -(i - 1);\n          t3 < 0 && t3++;\n          t3 > 1 && t3--;\n          if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n          rgb[i] = val * 255;\n        }\n\n        return rgb;\n      }\n\n      function hsl2hsv(hsl) {\n        var h = hsl[0],\n            s = hsl[1] / 100,\n            l = hsl[2] / 100,\n            sv,\n            v;\n\n        if (l === 0) {\n          // no need to do calc on black\n          // also avoids divide by 0 error\n          return [0, 0, 0];\n        }\n\n        l *= 2;\n        s *= l <= 1 ? l : 2 - l;\n        v = (l + s) / 2;\n        sv = 2 * s / (l + s);\n        return [h, sv * 100, v * 100];\n      }\n\n      function hsl2hwb(args) {\n        return rgb2hwb(hsl2rgb(args));\n      }\n\n      function hsl2cmyk(args) {\n        return rgb2cmyk(hsl2rgb(args));\n      }\n\n      function hsl2keyword(args) {\n        return rgb2keyword(hsl2rgb(args));\n      }\n\n      function hsv2rgb(hsv) {\n        var h = hsv[0] / 60,\n            s = hsv[1] / 100,\n            v = hsv[2] / 100,\n            hi = Math.floor(h) % 6;\n        var f = h - Math.floor(h),\n            p = 255 * v * (1 - s),\n            q = 255 * v * (1 - s * f),\n            t = 255 * v * (1 - s * (1 - f)),\n            v = 255 * v;\n\n        switch (hi) {\n          case 0:\n            return [v, t, p];\n\n          case 1:\n            return [q, v, p];\n\n          case 2:\n            return [p, v, t];\n\n          case 3:\n            return [p, q, v];\n\n          case 4:\n            return [t, p, v];\n\n          case 5:\n            return [v, p, q];\n        }\n      }\n\n      function hsv2hsl(hsv) {\n        var h = hsv[0],\n            s = hsv[1] / 100,\n            v = hsv[2] / 100,\n            sl,\n            l;\n        l = (2 - s) * v;\n        sl = s * v;\n        sl /= l <= 1 ? l : 2 - l;\n        sl = sl || 0;\n        l /= 2;\n        return [h, sl * 100, l * 100];\n      }\n\n      function hsv2hwb(args) {\n        return rgb2hwb(hsv2rgb(args));\n      }\n\n      function hsv2cmyk(args) {\n        return rgb2cmyk(hsv2rgb(args));\n      }\n\n      function hsv2keyword(args) {\n        return rgb2keyword(hsv2rgb(args));\n      } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n      function hwb2rgb(hwb) {\n        var h = hwb[0] / 360,\n            wh = hwb[1] / 100,\n            bl = hwb[2] / 100,\n            ratio = wh + bl,\n            i,\n            v,\n            f,\n            n; // wh + bl cant be > 1\n\n        if (ratio > 1) {\n          wh /= ratio;\n          bl /= ratio;\n        }\n\n        i = Math.floor(6 * h);\n        v = 1 - bl;\n        f = 6 * h - i;\n\n        if ((i & 0x01) != 0) {\n          f = 1 - f;\n        }\n\n        n = wh + f * (v - wh); // linear interpolation\n\n        switch (i) {\n          default:\n          case 6:\n          case 0:\n            r = v;\n            g = n;\n            b = wh;\n            break;\n\n          case 1:\n            r = n;\n            g = v;\n            b = wh;\n            break;\n\n          case 2:\n            r = wh;\n            g = v;\n            b = n;\n            break;\n\n          case 3:\n            r = wh;\n            g = n;\n            b = v;\n            break;\n\n          case 4:\n            r = n;\n            g = wh;\n            b = v;\n            break;\n\n          case 5:\n            r = v;\n            g = wh;\n            b = n;\n            break;\n        }\n\n        return [r * 255, g * 255, b * 255];\n      }\n\n      function hwb2hsl(args) {\n        return rgb2hsl(hwb2rgb(args));\n      }\n\n      function hwb2hsv(args) {\n        return rgb2hsv(hwb2rgb(args));\n      }\n\n      function hwb2cmyk(args) {\n        return rgb2cmyk(hwb2rgb(args));\n      }\n\n      function hwb2keyword(args) {\n        return rgb2keyword(hwb2rgb(args));\n      }\n\n      function cmyk2rgb(cmyk) {\n        var c = cmyk[0] / 100,\n            m = cmyk[1] / 100,\n            y = cmyk[2] / 100,\n            k = cmyk[3] / 100,\n            r,\n            g,\n            b;\n        r = 1 - Math.min(1, c * (1 - k) + k);\n        g = 1 - Math.min(1, m * (1 - k) + k);\n        b = 1 - Math.min(1, y * (1 - k) + k);\n        return [r * 255, g * 255, b * 255];\n      }\n\n      function cmyk2hsl(args) {\n        return rgb2hsl(cmyk2rgb(args));\n      }\n\n      function cmyk2hsv(args) {\n        return rgb2hsv(cmyk2rgb(args));\n      }\n\n      function cmyk2hwb(args) {\n        return rgb2hwb(cmyk2rgb(args));\n      }\n\n      function cmyk2keyword(args) {\n        return rgb2keyword(cmyk2rgb(args));\n      }\n\n      function xyz2rgb(xyz) {\n        var x = xyz[0] / 100,\n            y = xyz[1] / 100,\n            z = xyz[2] / 100,\n            r,\n            g,\n            b;\n        r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n        g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n        b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n        r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n        g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n        b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n        r = Math.min(Math.max(0, r), 1);\n        g = Math.min(Math.max(0, g), 1);\n        b = Math.min(Math.max(0, b), 1);\n        return [r * 255, g * 255, b * 255];\n      }\n\n      function xyz2lab(xyz) {\n        var x = xyz[0],\n            y = xyz[1],\n            z = xyz[2],\n            l,\n            a,\n            b;\n        x /= 95.047;\n        y /= 100;\n        z /= 108.883;\n        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n        l = 116 * y - 16;\n        a = 500 * (x - y);\n        b = 200 * (y - z);\n        return [l, a, b];\n      }\n\n      function xyz2lch(args) {\n        return lab2lch(xyz2lab(args));\n      }\n\n      function lab2xyz(lab) {\n        var l = lab[0],\n            a = lab[1],\n            b = lab[2],\n            x,\n            y,\n            z,\n            y2;\n\n        if (l <= 8) {\n          y = l * 100 / 903.3;\n          y2 = 7.787 * (y / 100) + 16 / 116;\n        } else {\n          y = 100 * Math.pow((l + 16) / 116, 3);\n          y2 = Math.pow(y / 100, 1 / 3);\n        }\n\n        x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n        z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n        return [x, y, z];\n      }\n\n      function lab2lch(lab) {\n        var l = lab[0],\n            a = lab[1],\n            b = lab[2],\n            hr,\n            h,\n            c;\n        hr = Math.atan2(b, a);\n        h = hr * 360 / 2 / Math.PI;\n\n        if (h < 0) {\n          h += 360;\n        }\n\n        c = Math.sqrt(a * a + b * b);\n        return [l, c, h];\n      }\n\n      function lab2rgb(args) {\n        return xyz2rgb(lab2xyz(args));\n      }\n\n      function lch2lab(lch) {\n        var l = lch[0],\n            c = lch[1],\n            h = lch[2],\n            a,\n            b,\n            hr;\n        hr = h / 360 * 2 * Math.PI;\n        a = c * Math.cos(hr);\n        b = c * Math.sin(hr);\n        return [l, a, b];\n      }\n\n      function lch2xyz(args) {\n        return lab2xyz(lch2lab(args));\n      }\n\n      function lch2rgb(args) {\n        return lab2rgb(lch2lab(args));\n      }\n\n      function keyword2rgb(keyword) {\n        return cssKeywords[keyword];\n      }\n\n      function keyword2hsl(args) {\n        return rgb2hsl(keyword2rgb(args));\n      }\n\n      function keyword2hsv(args) {\n        return rgb2hsv(keyword2rgb(args));\n      }\n\n      function keyword2hwb(args) {\n        return rgb2hwb(keyword2rgb(args));\n      }\n\n      function keyword2cmyk(args) {\n        return rgb2cmyk(keyword2rgb(args));\n      }\n\n      function keyword2lab(args) {\n        return rgb2lab(keyword2rgb(args));\n      }\n\n      function keyword2xyz(args) {\n        return rgb2xyz(keyword2rgb(args));\n      }\n\n      var cssKeywords = {\n        aliceblue: [240, 248, 255],\n        antiquewhite: [250, 235, 215],\n        aqua: [0, 255, 255],\n        aquamarine: [127, 255, 212],\n        azure: [240, 255, 255],\n        beige: [245, 245, 220],\n        bisque: [255, 228, 196],\n        black: [0, 0, 0],\n        blanchedalmond: [255, 235, 205],\n        blue: [0, 0, 255],\n        blueviolet: [138, 43, 226],\n        brown: [165, 42, 42],\n        burlywood: [222, 184, 135],\n        cadetblue: [95, 158, 160],\n        chartreuse: [127, 255, 0],\n        chocolate: [210, 105, 30],\n        coral: [255, 127, 80],\n        cornflowerblue: [100, 149, 237],\n        cornsilk: [255, 248, 220],\n        crimson: [220, 20, 60],\n        cyan: [0, 255, 255],\n        darkblue: [0, 0, 139],\n        darkcyan: [0, 139, 139],\n        darkgoldenrod: [184, 134, 11],\n        darkgray: [169, 169, 169],\n        darkgreen: [0, 100, 0],\n        darkgrey: [169, 169, 169],\n        darkkhaki: [189, 183, 107],\n        darkmagenta: [139, 0, 139],\n        darkolivegreen: [85, 107, 47],\n        darkorange: [255, 140, 0],\n        darkorchid: [153, 50, 204],\n        darkred: [139, 0, 0],\n        darksalmon: [233, 150, 122],\n        darkseagreen: [143, 188, 143],\n        darkslateblue: [72, 61, 139],\n        darkslategray: [47, 79, 79],\n        darkslategrey: [47, 79, 79],\n        darkturquoise: [0, 206, 209],\n        darkviolet: [148, 0, 211],\n        deeppink: [255, 20, 147],\n        deepskyblue: [0, 191, 255],\n        dimgray: [105, 105, 105],\n        dimgrey: [105, 105, 105],\n        dodgerblue: [30, 144, 255],\n        firebrick: [178, 34, 34],\n        floralwhite: [255, 250, 240],\n        forestgreen: [34, 139, 34],\n        fuchsia: [255, 0, 255],\n        gainsboro: [220, 220, 220],\n        ghostwhite: [248, 248, 255],\n        gold: [255, 215, 0],\n        goldenrod: [218, 165, 32],\n        gray: [128, 128, 128],\n        green: [0, 128, 0],\n        greenyellow: [173, 255, 47],\n        grey: [128, 128, 128],\n        honeydew: [240, 255, 240],\n        hotpink: [255, 105, 180],\n        indianred: [205, 92, 92],\n        indigo: [75, 0, 130],\n        ivory: [255, 255, 240],\n        khaki: [240, 230, 140],\n        lavender: [230, 230, 250],\n        lavenderblush: [255, 240, 245],\n        lawngreen: [124, 252, 0],\n        lemonchiffon: [255, 250, 205],\n        lightblue: [173, 216, 230],\n        lightcoral: [240, 128, 128],\n        lightcyan: [224, 255, 255],\n        lightgoldenrodyellow: [250, 250, 210],\n        lightgray: [211, 211, 211],\n        lightgreen: [144, 238, 144],\n        lightgrey: [211, 211, 211],\n        lightpink: [255, 182, 193],\n        lightsalmon: [255, 160, 122],\n        lightseagreen: [32, 178, 170],\n        lightskyblue: [135, 206, 250],\n        lightslategray: [119, 136, 153],\n        lightslategrey: [119, 136, 153],\n        lightsteelblue: [176, 196, 222],\n        lightyellow: [255, 255, 224],\n        lime: [0, 255, 0],\n        limegreen: [50, 205, 50],\n        linen: [250, 240, 230],\n        magenta: [255, 0, 255],\n        maroon: [128, 0, 0],\n        mediumaquamarine: [102, 205, 170],\n        mediumblue: [0, 0, 205],\n        mediumorchid: [186, 85, 211],\n        mediumpurple: [147, 112, 219],\n        mediumseagreen: [60, 179, 113],\n        mediumslateblue: [123, 104, 238],\n        mediumspringgreen: [0, 250, 154],\n        mediumturquoise: [72, 209, 204],\n        mediumvioletred: [199, 21, 133],\n        midnightblue: [25, 25, 112],\n        mintcream: [245, 255, 250],\n        mistyrose: [255, 228, 225],\n        moccasin: [255, 228, 181],\n        navajowhite: [255, 222, 173],\n        navy: [0, 0, 128],\n        oldlace: [253, 245, 230],\n        olive: [128, 128, 0],\n        olivedrab: [107, 142, 35],\n        orange: [255, 165, 0],\n        orangered: [255, 69, 0],\n        orchid: [218, 112, 214],\n        palegoldenrod: [238, 232, 170],\n        palegreen: [152, 251, 152],\n        paleturquoise: [175, 238, 238],\n        palevioletred: [219, 112, 147],\n        papayawhip: [255, 239, 213],\n        peachpuff: [255, 218, 185],\n        peru: [205, 133, 63],\n        pink: [255, 192, 203],\n        plum: [221, 160, 221],\n        powderblue: [176, 224, 230],\n        purple: [128, 0, 128],\n        rebeccapurple: [102, 51, 153],\n        red: [255, 0, 0],\n        rosybrown: [188, 143, 143],\n        royalblue: [65, 105, 225],\n        saddlebrown: [139, 69, 19],\n        salmon: [250, 128, 114],\n        sandybrown: [244, 164, 96],\n        seagreen: [46, 139, 87],\n        seashell: [255, 245, 238],\n        sienna: [160, 82, 45],\n        silver: [192, 192, 192],\n        skyblue: [135, 206, 235],\n        slateblue: [106, 90, 205],\n        slategray: [112, 128, 144],\n        slategrey: [112, 128, 144],\n        snow: [255, 250, 250],\n        springgreen: [0, 255, 127],\n        steelblue: [70, 130, 180],\n        tan: [210, 180, 140],\n        teal: [0, 128, 128],\n        thistle: [216, 191, 216],\n        tomato: [255, 99, 71],\n        turquoise: [64, 224, 208],\n        violet: [238, 130, 238],\n        wheat: [245, 222, 179],\n        white: [255, 255, 255],\n        whitesmoke: [245, 245, 245],\n        yellow: [255, 255, 0],\n        yellowgreen: [154, 205, 50]\n      };\n      var reverseKeywords = {};\n\n      for (var key in cssKeywords) {\n        reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n      }\n    }, {}],\n    3: [function (require, module, exports) {\n      var conversions = require(\"./conversions\");\n\n      var convert = function convert() {\n        return new Converter();\n      };\n\n      for (var func in conversions) {\n        // export Raw versions\n        convert[func + \"Raw\"] = function (func) {\n          // accept array or plain args\n          return function (arg) {\n            if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n            return conversions[func](arg);\n          };\n        }(func);\n\n        var pair = /(\\w+)2(\\w+)/.exec(func),\n            from = pair[1],\n            to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n        convert[from] = convert[from] || {};\n\n        convert[from][to] = convert[func] = function (func) {\n          return function (arg) {\n            if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n            var val = conversions[func](arg);\n            if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n            for (var i = 0; i < val.length; i++) {\n              val[i] = Math.round(val[i]);\n            }\n\n            return val;\n          };\n        }(func);\n      }\n      /* Converter does lazy conversion and caching */\n\n\n      var Converter = function Converter() {\n        this.convs = {};\n      };\n      /* Either get the values for a space or\n        set the values for a space, depending on args */\n\n\n      Converter.prototype.routeSpace = function (space, args) {\n        var values = args[0];\n\n        if (values === undefined) {\n          // color.rgb()\n          return this.getValues(space);\n        } // color.rgb(10, 10, 10)\n\n\n        if (typeof values == \"number\") {\n          values = Array.prototype.slice.call(args);\n        }\n\n        return this.setValues(space, values);\n      };\n      /* Set the values for a space, invalidating cache */\n\n\n      Converter.prototype.setValues = function (space, values) {\n        this.space = space;\n        this.convs = {};\n        this.convs[space] = values;\n        return this;\n      };\n      /* Get the values for a space. If there's already\n        a conversion for the space, fetch it, otherwise\n        compute it */\n\n\n      Converter.prototype.getValues = function (space) {\n        var vals = this.convs[space];\n\n        if (!vals) {\n          var fspace = this.space,\n              from = this.convs[fspace];\n          vals = convert[fspace][space](from);\n          this.convs[space] = vals;\n        }\n\n        return vals;\n      };\n\n      [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n        Converter.prototype[space] = function (vals) {\n          return this.routeSpace(space, arguments);\n        };\n      });\n      module.exports = convert;\n    }, {\n      \"./conversions\": 2\n    }],\n    4: [function (require, module, exports) {\n      var baseFlatten = require('../internal/baseFlatten'),\n          isIterateeCall = require('../internal/isIterateeCall');\n      /**\n       * Flattens a nested array. If `isDeep` is `true` the array is recursively\n       * flattened, otherwise it's only flattened a single level.\n       *\n       * @static\n       * @memberOf _\n       * @category Array\n       * @param {Array} array The array to flatten.\n       * @param {boolean} [isDeep] Specify a deep flatten.\n       * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n       * @returns {Array} Returns the new flattened array.\n       * @example\n       *\n       * _.flatten([1, [2, 3, [4]]]);\n       * // => [1, 2, 3, [4]]\n       *\n       * // using `isDeep`\n       * _.flatten([1, [2, 3, [4]]], true);\n       * // => [1, 2, 3, 4]\n       */\n\n\n      function flatten(array, isDeep, guard) {\n        var length = array ? array.length : 0;\n\n        if (guard && isIterateeCall(array, isDeep, guard)) {\n          isDeep = false;\n        }\n\n        return length ? baseFlatten(array, isDeep) : [];\n      }\n\n      module.exports = flatten;\n    }, {\n      \"../internal/baseFlatten\": 23,\n      \"../internal/isIterateeCall\": 56\n    }],\n    5: [function (require, module, exports) {\n      /**\n       * Gets the last element of `array`.\n       *\n       * @static\n       * @memberOf _\n       * @category Array\n       * @param {Array} array The array to query.\n       * @returns {*} Returns the last element of `array`.\n       * @example\n       *\n       * _.last([1, 2, 3]);\n       * // => 3\n       */\n      function last(array) {\n        var length = array ? array.length : 0;\n        return length ? array[length - 1] : undefined;\n      }\n\n      module.exports = last;\n    }, {}],\n    6: [function (require, module, exports) {\n      var baseDifference = require('../internal/baseDifference'),\n          isArrayLike = require('../internal/isArrayLike'),\n          restParam = require('../function/restParam');\n      /**\n       * Creates an array excluding all provided values using\n       * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n       * for equality comparisons.\n       *\n       * @static\n       * @memberOf _\n       * @category Array\n       * @param {Array} array The array to filter.\n       * @param {...*} [values] The values to exclude.\n       * @returns {Array} Returns the new array of filtered values.\n       * @example\n       *\n       * _.without([1, 2, 1, 3], 1, 2);\n       * // => [3]\n       */\n\n\n      var without = restParam(function (array, values) {\n        return isArrayLike(array) ? baseDifference(array, values) : [];\n      });\n      module.exports = without;\n    }, {\n      \"../function/restParam\": 10,\n      \"../internal/baseDifference\": 21,\n      \"../internal/isArrayLike\": 54\n    }],\n    7: [function (require, module, exports) {\n      module.exports = require('./forEach');\n    }, {\n      \"./forEach\": 8\n    }],\n    8: [function (require, module, exports) {\n      var arrayEach = require('../internal/arrayEach'),\n          baseEach = require('../internal/baseEach'),\n          createForEach = require('../internal/createForEach');\n      /**\n       * Iterates over elements of `collection` invoking `iteratee` for each element.\n       * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n       * (value, index|key, collection). Iteratee functions may exit iteration early\n       * by explicitly returning `false`.\n       *\n       * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n       * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n       * may be used for object iteration.\n       *\n       * @static\n       * @memberOf _\n       * @alias each\n       * @category Collection\n       * @param {Array|Object|string} collection The collection to iterate over.\n       * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n       * @param {*} [thisArg] The `this` binding of `iteratee`.\n       * @returns {Array|Object|string} Returns `collection`.\n       * @example\n       *\n       * _([1, 2]).forEach(function(n) {\n       *   console.log(n);\n       * }).value();\n       * // => logs each value from left to right and returns the array\n       *\n       * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n       *   console.log(n, key);\n       * });\n       * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n       */\n\n\n      var forEach = createForEach(arrayEach, baseEach);\n      module.exports = forEach;\n    }, {\n      \"../internal/arrayEach\": 12,\n      \"../internal/baseEach\": 22,\n      \"../internal/createForEach\": 46\n    }],\n    9: [function (require, module, exports) {\n      var arrayMap = require('../internal/arrayMap'),\n          baseCallback = require('../internal/baseCallback'),\n          baseMap = require('../internal/baseMap'),\n          isArray = require('../lang/isArray');\n      /**\n       * Creates an array of values by running each element in `collection` through\n       * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n       * arguments: (value, index|key, collection).\n       *\n       * If a property name is provided for `iteratee` the created `_.property`\n       * style callback returns the property value of the given element.\n       *\n       * If a value is also provided for `thisArg` the created `_.matchesProperty`\n       * style callback returns `true` for elements that have a matching property\n       * value, else `false`.\n       *\n       * If an object is provided for `iteratee` the created `_.matches` style\n       * callback returns `true` for elements that have the properties of the given\n       * object, else `false`.\n       *\n       * Many lodash methods are guarded to work as iteratees for methods like\n       * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n       *\n       * The guarded methods are:\n       * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n       * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n       * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n       * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n       * `sum`, `uniq`, and `words`\n       *\n       * @static\n       * @memberOf _\n       * @alias collect\n       * @category Collection\n       * @param {Array|Object|string} collection The collection to iterate over.\n       * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n       *  per iteration.\n       * @param {*} [thisArg] The `this` binding of `iteratee`.\n       * @returns {Array} Returns the new mapped array.\n       * @example\n       *\n       * function timesThree(n) {\n       *   return n * 3;\n       * }\n       *\n       * _.map([1, 2], timesThree);\n       * // => [3, 6]\n       *\n       * _.map({ 'a': 1, 'b': 2 }, timesThree);\n       * // => [3, 6] (iteration order is not guaranteed)\n       *\n       * var users = [\n       *   { 'user': 'barney' },\n       *   { 'user': 'fred' }\n       * ];\n       *\n       * // using the `_.property` callback shorthand\n       * _.map(users, 'user');\n       * // => ['barney', 'fred']\n       */\n\n\n      function map(collection, iteratee, thisArg) {\n        var func = isArray(collection) ? arrayMap : baseMap;\n        iteratee = baseCallback(iteratee, thisArg, 3);\n        return func(collection, iteratee);\n      }\n\n      module.exports = map;\n    }, {\n      \"../internal/arrayMap\": 13,\n      \"../internal/baseCallback\": 19,\n      \"../internal/baseMap\": 31,\n      \"../lang/isArray\": 65\n    }],\n    10: [function (require, module, exports) {\n      /** Used as the `TypeError` message for \"Functions\" methods. */\n      var FUNC_ERROR_TEXT = 'Expected a function';\n      /* Native method references for those with the same name as other `lodash` methods. */\n\n      var nativeMax = Math.max;\n      /**\n       * Creates a function that invokes `func` with the `this` binding of the\n       * created function and arguments from `start` and beyond provided as an array.\n       *\n       * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n       *\n       * @static\n       * @memberOf _\n       * @category Function\n       * @param {Function} func The function to apply a rest parameter to.\n       * @param {number} [start=func.length-1] The start position of the rest parameter.\n       * @returns {Function} Returns the new function.\n       * @example\n       *\n       * var say = _.restParam(function(what, names) {\n       *   return what + ' ' + _.initial(names).join(', ') +\n       *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n       * });\n       *\n       * say('hello', 'fred', 'barney', 'pebbles');\n       * // => 'hello fred, barney, & pebbles'\n       */\n\n      function restParam(func, start) {\n        if (typeof func != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n\n        start = nativeMax(start === undefined ? func.length - 1 : +start || 0, 0);\n        return function () {\n          var args = arguments,\n              index = -1,\n              length = nativeMax(args.length - start, 0),\n              rest = Array(length);\n\n          while (++index < length) {\n            rest[index] = args[start + index];\n          }\n\n          switch (start) {\n            case 0:\n              return func.call(this, rest);\n\n            case 1:\n              return func.call(this, args[0], rest);\n\n            case 2:\n              return func.call(this, args[0], args[1], rest);\n          }\n\n          var otherArgs = Array(start + 1);\n          index = -1;\n\n          while (++index < start) {\n            otherArgs[index] = args[index];\n          }\n\n          otherArgs[start] = rest;\n          return func.apply(this, otherArgs);\n        };\n      }\n\n      module.exports = restParam;\n    }, {}],\n    11: [function (require, module, exports) {\n      (function (global) {\n        var cachePush = require('./cachePush'),\n            getNative = require('./getNative');\n        /** Native method references. */\n\n\n        var Set = getNative(global, 'Set');\n        /* Native method references for those with the same name as other `lodash` methods. */\n\n        var nativeCreate = getNative(Object, 'create');\n        /**\n         *\n         * Creates a cache object to store unique values.\n         *\n         * @private\n         * @param {Array} [values] The values to cache.\n         */\n\n        function SetCache(values) {\n          var length = values ? values.length : 0;\n          this.data = {\n            'hash': nativeCreate(null),\n            'set': new Set()\n          };\n\n          while (length--) {\n            this.push(values[length]);\n          }\n        } // Add functions to the `Set` cache.\n\n\n        SetCache.prototype.push = cachePush;\n        module.exports = SetCache;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"./cachePush\": 40,\n      \"./getNative\": 52\n    }],\n    12: [function (require, module, exports) {\n      /**\n       * A specialized version of `_.forEach` for arrays without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Array} array The array to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @returns {Array} Returns `array`.\n       */\n      function arrayEach(array, iteratee) {\n        var index = -1,\n            length = array.length;\n\n        while (++index < length) {\n          if (iteratee(array[index], index, array) === false) {\n            break;\n          }\n        }\n\n        return array;\n      }\n\n      module.exports = arrayEach;\n    }, {}],\n    13: [function (require, module, exports) {\n      /**\n       * A specialized version of `_.map` for arrays without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Array} array The array to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @returns {Array} Returns the new mapped array.\n       */\n      function arrayMap(array, iteratee) {\n        var index = -1,\n            length = array.length,\n            result = Array(length);\n\n        while (++index < length) {\n          result[index] = iteratee(array[index], index, array);\n        }\n\n        return result;\n      }\n\n      module.exports = arrayMap;\n    }, {}],\n    14: [function (require, module, exports) {\n      /**\n       * Appends the elements of `values` to `array`.\n       *\n       * @private\n       * @param {Array} array The array to modify.\n       * @param {Array} values The values to append.\n       * @returns {Array} Returns `array`.\n       */\n      function arrayPush(array, values) {\n        var index = -1,\n            length = values.length,\n            offset = array.length;\n\n        while (++index < length) {\n          array[offset + index] = values[index];\n        }\n\n        return array;\n      }\n\n      module.exports = arrayPush;\n    }, {}],\n    15: [function (require, module, exports) {\n      /**\n       * A specialized version of `_.some` for arrays without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Array} array The array to iterate over.\n       * @param {Function} predicate The function invoked per iteration.\n       * @returns {boolean} Returns `true` if any element passes the predicate check,\n       *  else `false`.\n       */\n      function arraySome(array, predicate) {\n        var index = -1,\n            length = array.length;\n\n        while (++index < length) {\n          if (predicate(array[index], index, array)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      module.exports = arraySome;\n    }, {}],\n    16: [function (require, module, exports) {\n      /**\n       * Used by `_.defaults` to customize its `_.assign` use.\n       *\n       * @private\n       * @param {*} objectValue The destination object property value.\n       * @param {*} sourceValue The source object property value.\n       * @returns {*} Returns the value to assign to the destination object.\n       */\n      function assignDefaults(objectValue, sourceValue) {\n        return objectValue === undefined ? sourceValue : objectValue;\n      }\n\n      module.exports = assignDefaults;\n    }, {}],\n    17: [function (require, module, exports) {\n      var keys = require('../object/keys');\n      /**\n       * A specialized version of `_.assign` for customizing assigned values without\n       * support for argument juggling, multiple sources, and `this` binding `customizer`\n       * functions.\n       *\n       * @private\n       * @param {Object} object The destination object.\n       * @param {Object} source The source object.\n       * @param {Function} customizer The function to customize assigned values.\n       * @returns {Object} Returns `object`.\n       */\n\n\n      function assignWith(object, source, customizer) {\n        var index = -1,\n            props = keys(source),\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index],\n              value = object[key],\n              result = customizer(value, source[key], key, object, source);\n\n          if ((result === result ? result !== value : value === value) || value === undefined && !(key in object)) {\n            object[key] = result;\n          }\n        }\n\n        return object;\n      }\n\n      module.exports = assignWith;\n    }, {\n      \"../object/keys\": 72\n    }],\n    18: [function (require, module, exports) {\n      var baseCopy = require('./baseCopy'),\n          keys = require('../object/keys');\n      /**\n       * The base implementation of `_.assign` without support for argument juggling,\n       * multiple sources, and `customizer` functions.\n       *\n       * @private\n       * @param {Object} object The destination object.\n       * @param {Object} source The source object.\n       * @returns {Object} Returns `object`.\n       */\n\n\n      function baseAssign(object, source) {\n        return source == null ? object : baseCopy(source, keys(source), object);\n      }\n\n      module.exports = baseAssign;\n    }, {\n      \"../object/keys\": 72,\n      \"./baseCopy\": 20\n    }],\n    19: [function (require, module, exports) {\n      var baseMatches = require('./baseMatches'),\n          baseMatchesProperty = require('./baseMatchesProperty'),\n          bindCallback = require('./bindCallback'),\n          identity = require('../utility/identity'),\n          property = require('../utility/property');\n      /**\n       * The base implementation of `_.callback` which supports specifying the\n       * number of arguments to provide to `func`.\n       *\n       * @private\n       * @param {*} [func=_.identity] The value to convert to a callback.\n       * @param {*} [thisArg] The `this` binding of `func`.\n       * @param {number} [argCount] The number of arguments to provide to `func`.\n       * @returns {Function} Returns the callback.\n       */\n\n\n      function baseCallback(func, thisArg, argCount) {\n        var type = _typeof(func);\n\n        if (type == 'function') {\n          return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);\n        }\n\n        if (func == null) {\n          return identity;\n        }\n\n        if (type == 'object') {\n          return baseMatches(func);\n        }\n\n        return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);\n      }\n\n      module.exports = baseCallback;\n    }, {\n      \"../utility/identity\": 75,\n      \"../utility/property\": 76,\n      \"./baseMatches\": 32,\n      \"./baseMatchesProperty\": 33,\n      \"./bindCallback\": 38\n    }],\n    20: [function (require, module, exports) {\n      /**\n       * Copies properties of `source` to `object`.\n       *\n       * @private\n       * @param {Object} source The object to copy properties from.\n       * @param {Array} props The property names to copy.\n       * @param {Object} [object={}] The object to copy properties to.\n       * @returns {Object} Returns `object`.\n       */\n      function baseCopy(source, props, object) {\n        object || (object = {});\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          object[key] = source[key];\n        }\n\n        return object;\n      }\n\n      module.exports = baseCopy;\n    }, {}],\n    21: [function (require, module, exports) {\n      var baseIndexOf = require('./baseIndexOf'),\n          cacheIndexOf = require('./cacheIndexOf'),\n          createCache = require('./createCache');\n      /** Used as the size to enable large array optimizations. */\n\n\n      var LARGE_ARRAY_SIZE = 200;\n      /**\n       * The base implementation of `_.difference` which accepts a single array\n       * of values to exclude.\n       *\n       * @private\n       * @param {Array} array The array to inspect.\n       * @param {Array} values The values to exclude.\n       * @returns {Array} Returns the new array of filtered values.\n       */\n\n      function baseDifference(array, values) {\n        var length = array ? array.length : 0,\n            result = [];\n\n        if (!length) {\n          return result;\n        }\n\n        var index = -1,\n            indexOf = baseIndexOf,\n            isCommon = true,\n            cache = isCommon && values.length >= LARGE_ARRAY_SIZE ? createCache(values) : null,\n            valuesLength = values.length;\n\n        if (cache) {\n          indexOf = cacheIndexOf;\n          isCommon = false;\n          values = cache;\n        }\n\n        outer: while (++index < length) {\n          var value = array[index];\n\n          if (isCommon && value === value) {\n            var valuesIndex = valuesLength;\n\n            while (valuesIndex--) {\n              if (values[valuesIndex] === value) {\n                continue outer;\n              }\n            }\n\n            result.push(value);\n          } else if (indexOf(values, value, 0) < 0) {\n            result.push(value);\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = baseDifference;\n    }, {\n      \"./baseIndexOf\": 27,\n      \"./cacheIndexOf\": 39,\n      \"./createCache\": 44\n    }],\n    22: [function (require, module, exports) {\n      var baseForOwn = require('./baseForOwn'),\n          createBaseEach = require('./createBaseEach');\n      /**\n       * The base implementation of `_.forEach` without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Array|Object|string} collection The collection to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @returns {Array|Object|string} Returns `collection`.\n       */\n\n\n      var baseEach = createBaseEach(baseForOwn);\n      module.exports = baseEach;\n    }, {\n      \"./baseForOwn\": 25,\n      \"./createBaseEach\": 42\n    }],\n    23: [function (require, module, exports) {\n      var arrayPush = require('./arrayPush'),\n          isArguments = require('../lang/isArguments'),\n          isArray = require('../lang/isArray'),\n          isArrayLike = require('./isArrayLike'),\n          isObjectLike = require('./isObjectLike');\n      /**\n       * The base implementation of `_.flatten` with added support for restricting\n       * flattening and specifying the start index.\n       *\n       * @private\n       * @param {Array} array The array to flatten.\n       * @param {boolean} [isDeep] Specify a deep flatten.\n       * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n       * @param {Array} [result=[]] The initial result value.\n       * @returns {Array} Returns the new flattened array.\n       */\n\n\n      function baseFlatten(array, isDeep, isStrict, result) {\n        result || (result = []);\n        var index = -1,\n            length = array.length;\n\n        while (++index < length) {\n          var value = array[index];\n\n          if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {\n            if (isDeep) {\n              // Recursively flatten arrays (susceptible to call stack limits).\n              baseFlatten(value, isDeep, isStrict, result);\n            } else {\n              arrayPush(result, value);\n            }\n          } else if (!isStrict) {\n            result[result.length] = value;\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = baseFlatten;\n    }, {\n      \"../lang/isArguments\": 64,\n      \"../lang/isArray\": 65,\n      \"./arrayPush\": 14,\n      \"./isArrayLike\": 54,\n      \"./isObjectLike\": 59\n    }],\n    24: [function (require, module, exports) {\n      var createBaseFor = require('./createBaseFor');\n      /**\n       * The base implementation of `baseForIn` and `baseForOwn` which iterates\n       * over `object` properties returned by `keysFunc` invoking `iteratee` for\n       * each property. Iteratee functions may exit iteration early by explicitly\n       * returning `false`.\n       *\n       * @private\n       * @param {Object} object The object to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @param {Function} keysFunc The function to get the keys of `object`.\n       * @returns {Object} Returns `object`.\n       */\n\n\n      var baseFor = createBaseFor();\n      module.exports = baseFor;\n    }, {\n      \"./createBaseFor\": 43\n    }],\n    25: [function (require, module, exports) {\n      var baseFor = require('./baseFor'),\n          keys = require('../object/keys');\n      /**\n       * The base implementation of `_.forOwn` without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Object} object The object to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @returns {Object} Returns `object`.\n       */\n\n\n      function baseForOwn(object, iteratee) {\n        return baseFor(object, iteratee, keys);\n      }\n\n      module.exports = baseForOwn;\n    }, {\n      \"../object/keys\": 72,\n      \"./baseFor\": 24\n    }],\n    26: [function (require, module, exports) {\n      var toObject = require('./toObject');\n      /**\n       * The base implementation of `get` without support for string paths\n       * and default values.\n       *\n       * @private\n       * @param {Object} object The object to query.\n       * @param {Array} path The path of the property to get.\n       * @param {string} [pathKey] The key representation of path.\n       * @returns {*} Returns the resolved value.\n       */\n\n\n      function baseGet(object, path, pathKey) {\n        if (object == null) {\n          return;\n        }\n\n        if (pathKey !== undefined && pathKey in toObject(object)) {\n          path = [pathKey];\n        }\n\n        var index = 0,\n            length = path.length;\n\n        while (object != null && index < length) {\n          object = object[path[index++]];\n        }\n\n        return index && index == length ? object : undefined;\n      }\n\n      module.exports = baseGet;\n    }, {\n      \"./toObject\": 62\n    }],\n    27: [function (require, module, exports) {\n      var indexOfNaN = require('./indexOfNaN');\n      /**\n       * The base implementation of `_.indexOf` without support for binary searches.\n       *\n       * @private\n       * @param {Array} array The array to search.\n       * @param {*} value The value to search for.\n       * @param {number} fromIndex The index to search from.\n       * @returns {number} Returns the index of the matched value, else `-1`.\n       */\n\n\n      function baseIndexOf(array, value, fromIndex) {\n        if (value !== value) {\n          return indexOfNaN(array, fromIndex);\n        }\n\n        var index = fromIndex - 1,\n            length = array.length;\n\n        while (++index < length) {\n          if (array[index] === value) {\n            return index;\n          }\n        }\n\n        return -1;\n      }\n\n      module.exports = baseIndexOf;\n    }, {\n      \"./indexOfNaN\": 53\n    }],\n    28: [function (require, module, exports) {\n      var baseIsEqualDeep = require('./baseIsEqualDeep'),\n          isObject = require('../lang/isObject'),\n          isObjectLike = require('./isObjectLike');\n      /**\n       * The base implementation of `_.isEqual` without support for `this` binding\n       * `customizer` functions.\n       *\n       * @private\n       * @param {*} value The value to compare.\n       * @param {*} other The other value to compare.\n       * @param {Function} [customizer] The function to customize comparing values.\n       * @param {boolean} [isLoose] Specify performing partial comparisons.\n       * @param {Array} [stackA] Tracks traversed `value` objects.\n       * @param {Array} [stackB] Tracks traversed `other` objects.\n       * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n       */\n\n\n      function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n        if (value === other) {\n          return true;\n        }\n\n        if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {\n          return value !== value && other !== other;\n        }\n\n        return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n      }\n\n      module.exports = baseIsEqual;\n    }, {\n      \"../lang/isObject\": 68,\n      \"./baseIsEqualDeep\": 29,\n      \"./isObjectLike\": 59\n    }],\n    29: [function (require, module, exports) {\n      var equalArrays = require('./equalArrays'),\n          equalByTag = require('./equalByTag'),\n          equalObjects = require('./equalObjects'),\n          isArray = require('../lang/isArray'),\n          isTypedArray = require('../lang/isTypedArray');\n      /** `Object#toString` result references. */\n\n\n      var argsTag = '[object Arguments]',\n          arrayTag = '[object Array]',\n          objectTag = '[object Object]';\n      /** Used for native method references. */\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /**\n       * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var objToString = objectProto.toString;\n      /**\n       * A specialized version of `baseIsEqual` for arrays and objects which performs\n       * deep comparisons and tracks traversed objects enabling objects with circular\n       * references to be compared.\n       *\n       * @private\n       * @param {Object} object The object to compare.\n       * @param {Object} other The other object to compare.\n       * @param {Function} equalFunc The function to determine equivalents of values.\n       * @param {Function} [customizer] The function to customize comparing objects.\n       * @param {boolean} [isLoose] Specify performing partial comparisons.\n       * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n       * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n       * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n       */\n\n      function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n        var objIsArr = isArray(object),\n            othIsArr = isArray(other),\n            objTag = arrayTag,\n            othTag = arrayTag;\n\n        if (!objIsArr) {\n          objTag = objToString.call(object);\n\n          if (objTag == argsTag) {\n            objTag = objectTag;\n          } else if (objTag != objectTag) {\n            objIsArr = isTypedArray(object);\n          }\n        }\n\n        if (!othIsArr) {\n          othTag = objToString.call(other);\n\n          if (othTag == argsTag) {\n            othTag = objectTag;\n          } else if (othTag != objectTag) {\n            othIsArr = isTypedArray(other);\n          }\n        }\n\n        var objIsObj = objTag == objectTag,\n            othIsObj = othTag == objectTag,\n            isSameTag = objTag == othTag;\n\n        if (isSameTag && !(objIsArr || objIsObj)) {\n          return equalByTag(object, other, objTag);\n        }\n\n        if (!isLoose) {\n          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n              othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n          if (objIsWrapped || othIsWrapped) {\n            return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n          }\n        }\n\n        if (!isSameTag) {\n          return false;\n        } // Assume cyclic values are equal.\n        // For more information on detecting circular references see https://es5.github.io/#JO.\n\n\n        stackA || (stackA = []);\n        stackB || (stackB = []);\n        var length = stackA.length;\n\n        while (length--) {\n          if (stackA[length] == object) {\n            return stackB[length] == other;\n          }\n        } // Add `object` and `other` to the stack of traversed objects.\n\n\n        stackA.push(object);\n        stackB.push(other);\n        var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n        stackA.pop();\n        stackB.pop();\n        return result;\n      }\n\n      module.exports = baseIsEqualDeep;\n    }, {\n      \"../lang/isArray\": 65,\n      \"../lang/isTypedArray\": 69,\n      \"./equalArrays\": 47,\n      \"./equalByTag\": 48,\n      \"./equalObjects\": 49\n    }],\n    30: [function (require, module, exports) {\n      var baseIsEqual = require('./baseIsEqual'),\n          toObject = require('./toObject');\n      /**\n       * The base implementation of `_.isMatch` without support for callback\n       * shorthands and `this` binding.\n       *\n       * @private\n       * @param {Object} object The object to inspect.\n       * @param {Array} matchData The propery names, values, and compare flags to match.\n       * @param {Function} [customizer] The function to customize comparing objects.\n       * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n       */\n\n\n      function baseIsMatch(object, matchData, customizer) {\n        var index = matchData.length,\n            length = index,\n            noCustomizer = !customizer;\n\n        if (object == null) {\n          return !length;\n        }\n\n        object = toObject(object);\n\n        while (index--) {\n          var data = matchData[index];\n\n          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n            return false;\n          }\n        }\n\n        while (++index < length) {\n          data = matchData[index];\n          var key = data[0],\n              objValue = object[key],\n              srcValue = data[1];\n\n          if (noCustomizer && data[2]) {\n            if (objValue === undefined && !(key in object)) {\n              return false;\n            }\n          } else {\n            var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\n            if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      module.exports = baseIsMatch;\n    }, {\n      \"./baseIsEqual\": 28,\n      \"./toObject\": 62\n    }],\n    31: [function (require, module, exports) {\n      var baseEach = require('./baseEach'),\n          isArrayLike = require('./isArrayLike');\n      /**\n       * The base implementation of `_.map` without support for callback shorthands\n       * and `this` binding.\n       *\n       * @private\n       * @param {Array|Object|string} collection The collection to iterate over.\n       * @param {Function} iteratee The function invoked per iteration.\n       * @returns {Array} Returns the new mapped array.\n       */\n\n\n      function baseMap(collection, iteratee) {\n        var index = -1,\n            result = isArrayLike(collection) ? Array(collection.length) : [];\n        baseEach(collection, function (value, key, collection) {\n          result[++index] = iteratee(value, key, collection);\n        });\n        return result;\n      }\n\n      module.exports = baseMap;\n    }, {\n      \"./baseEach\": 22,\n      \"./isArrayLike\": 54\n    }],\n    32: [function (require, module, exports) {\n      var baseIsMatch = require('./baseIsMatch'),\n          getMatchData = require('./getMatchData'),\n          toObject = require('./toObject');\n      /**\n       * The base implementation of `_.matches` which does not clone `source`.\n       *\n       * @private\n       * @param {Object} source The object of property values to match.\n       * @returns {Function} Returns the new function.\n       */\n\n\n      function baseMatches(source) {\n        var matchData = getMatchData(source);\n\n        if (matchData.length == 1 && matchData[0][2]) {\n          var key = matchData[0][0],\n              value = matchData[0][1];\n          return function (object) {\n            if (object == null) {\n              return false;\n            }\n\n            return object[key] === value && (value !== undefined || key in toObject(object));\n          };\n        }\n\n        return function (object) {\n          return baseIsMatch(object, matchData);\n        };\n      }\n\n      module.exports = baseMatches;\n    }, {\n      \"./baseIsMatch\": 30,\n      \"./getMatchData\": 51,\n      \"./toObject\": 62\n    }],\n    33: [function (require, module, exports) {\n      var baseGet = require('./baseGet'),\n          baseIsEqual = require('./baseIsEqual'),\n          baseSlice = require('./baseSlice'),\n          isArray = require('../lang/isArray'),\n          isKey = require('./isKey'),\n          isStrictComparable = require('./isStrictComparable'),\n          last = require('../array/last'),\n          toObject = require('./toObject'),\n          toPath = require('./toPath');\n      /**\n       * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n       *\n       * @private\n       * @param {string} path The path of the property to get.\n       * @param {*} srcValue The value to compare.\n       * @returns {Function} Returns the new function.\n       */\n\n\n      function baseMatchesProperty(path, srcValue) {\n        var isArr = isArray(path),\n            isCommon = isKey(path) && isStrictComparable(srcValue),\n            pathKey = path + '';\n        path = toPath(path);\n        return function (object) {\n          if (object == null) {\n            return false;\n          }\n\n          var key = pathKey;\n          object = toObject(object);\n\n          if ((isArr || !isCommon) && !(key in object)) {\n            object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\n            if (object == null) {\n              return false;\n            }\n\n            key = last(path);\n            object = toObject(object);\n          }\n\n          return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, true);\n        };\n      }\n\n      module.exports = baseMatchesProperty;\n    }, {\n      \"../array/last\": 5,\n      \"../lang/isArray\": 65,\n      \"./baseGet\": 26,\n      \"./baseIsEqual\": 28,\n      \"./baseSlice\": 36,\n      \"./isKey\": 57,\n      \"./isStrictComparable\": 60,\n      \"./toObject\": 62,\n      \"./toPath\": 63\n    }],\n    34: [function (require, module, exports) {\n      /**\n       * The base implementation of `_.property` without support for deep paths.\n       *\n       * @private\n       * @param {string} key The key of the property to get.\n       * @returns {Function} Returns the new function.\n       */\n      function baseProperty(key) {\n        return function (object) {\n          return object == null ? undefined : object[key];\n        };\n      }\n\n      module.exports = baseProperty;\n    }, {}],\n    35: [function (require, module, exports) {\n      var baseGet = require('./baseGet'),\n          toPath = require('./toPath');\n      /**\n       * A specialized version of `baseProperty` which supports deep paths.\n       *\n       * @private\n       * @param {Array|string} path The path of the property to get.\n       * @returns {Function} Returns the new function.\n       */\n\n\n      function basePropertyDeep(path) {\n        var pathKey = path + '';\n        path = toPath(path);\n        return function (object) {\n          return baseGet(object, path, pathKey);\n        };\n      }\n\n      module.exports = basePropertyDeep;\n    }, {\n      \"./baseGet\": 26,\n      \"./toPath\": 63\n    }],\n    36: [function (require, module, exports) {\n      /**\n       * The base implementation of `_.slice` without an iteratee call guard.\n       *\n       * @private\n       * @param {Array} array The array to slice.\n       * @param {number} [start=0] The start position.\n       * @param {number} [end=array.length] The end position.\n       * @returns {Array} Returns the slice of `array`.\n       */\n      function baseSlice(array, start, end) {\n        var index = -1,\n            length = array.length;\n        start = start == null ? 0 : +start || 0;\n\n        if (start < 0) {\n          start = -start > length ? 0 : length + start;\n        }\n\n        end = end === undefined || end > length ? length : +end || 0;\n\n        if (end < 0) {\n          end += length;\n        }\n\n        length = start > end ? 0 : end - start >>> 0;\n        start >>>= 0;\n        var result = Array(length);\n\n        while (++index < length) {\n          result[index] = array[index + start];\n        }\n\n        return result;\n      }\n\n      module.exports = baseSlice;\n    }, {}],\n    37: [function (require, module, exports) {\n      /**\n       * Converts `value` to a string if it's not one. An empty string is returned\n       * for `null` or `undefined` values.\n       *\n       * @private\n       * @param {*} value The value to process.\n       * @returns {string} Returns the string.\n       */\n      function baseToString(value) {\n        return value == null ? '' : value + '';\n      }\n\n      module.exports = baseToString;\n    }, {}],\n    38: [function (require, module, exports) {\n      var identity = require('../utility/identity');\n      /**\n       * A specialized version of `baseCallback` which only supports `this` binding\n       * and specifying the number of arguments to provide to `func`.\n       *\n       * @private\n       * @param {Function} func The function to bind.\n       * @param {*} thisArg The `this` binding of `func`.\n       * @param {number} [argCount] The number of arguments to provide to `func`.\n       * @returns {Function} Returns the callback.\n       */\n\n\n      function bindCallback(func, thisArg, argCount) {\n        if (typeof func != 'function') {\n          return identity;\n        }\n\n        if (thisArg === undefined) {\n          return func;\n        }\n\n        switch (argCount) {\n          case 1:\n            return function (value) {\n              return func.call(thisArg, value);\n            };\n\n          case 3:\n            return function (value, index, collection) {\n              return func.call(thisArg, value, index, collection);\n            };\n\n          case 4:\n            return function (accumulator, value, index, collection) {\n              return func.call(thisArg, accumulator, value, index, collection);\n            };\n\n          case 5:\n            return function (value, other, key, object, source) {\n              return func.call(thisArg, value, other, key, object, source);\n            };\n        }\n\n        return function () {\n          return func.apply(thisArg, arguments);\n        };\n      }\n\n      module.exports = bindCallback;\n    }, {\n      \"../utility/identity\": 75\n    }],\n    39: [function (require, module, exports) {\n      var isObject = require('../lang/isObject');\n      /**\n       * Checks if `value` is in `cache` mimicking the return signature of\n       * `_.indexOf` by returning `0` if the value is found, else `-1`.\n       *\n       * @private\n       * @param {Object} cache The cache to search.\n       * @param {*} value The value to search for.\n       * @returns {number} Returns `0` if `value` is found, else `-1`.\n       */\n\n\n      function cacheIndexOf(cache, value) {\n        var data = cache.data,\n            result = typeof value == 'string' || isObject(value) ? data.set.has(value) : data.hash[value];\n        return result ? 0 : -1;\n      }\n\n      module.exports = cacheIndexOf;\n    }, {\n      \"../lang/isObject\": 68\n    }],\n    40: [function (require, module, exports) {\n      var isObject = require('../lang/isObject');\n      /**\n       * Adds `value` to the cache.\n       *\n       * @private\n       * @name push\n       * @memberOf SetCache\n       * @param {*} value The value to cache.\n       */\n\n\n      function cachePush(value) {\n        var data = this.data;\n\n        if (typeof value == 'string' || isObject(value)) {\n          data.set.add(value);\n        } else {\n          data.hash[value] = true;\n        }\n      }\n\n      module.exports = cachePush;\n    }, {\n      \"../lang/isObject\": 68\n    }],\n    41: [function (require, module, exports) {\n      var bindCallback = require('./bindCallback'),\n          isIterateeCall = require('./isIterateeCall'),\n          restParam = require('../function/restParam');\n      /**\n       * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n       *\n       * @private\n       * @param {Function} assigner The function to assign values.\n       * @returns {Function} Returns the new assigner function.\n       */\n\n\n      function createAssigner(assigner) {\n        return restParam(function (object, sources) {\n          var index = -1,\n              length = object == null ? 0 : sources.length,\n              customizer = length > 2 ? sources[length - 2] : undefined,\n              guard = length > 2 ? sources[2] : undefined,\n              thisArg = length > 1 ? sources[length - 1] : undefined;\n\n          if (typeof customizer == 'function') {\n            customizer = bindCallback(customizer, thisArg, 5);\n            length -= 2;\n          } else {\n            customizer = typeof thisArg == 'function' ? thisArg : undefined;\n            length -= customizer ? 1 : 0;\n          }\n\n          if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n            customizer = length < 3 ? undefined : customizer;\n            length = 1;\n          }\n\n          while (++index < length) {\n            var source = sources[index];\n\n            if (source) {\n              assigner(object, source, customizer);\n            }\n          }\n\n          return object;\n        });\n      }\n\n      module.exports = createAssigner;\n    }, {\n      \"../function/restParam\": 10,\n      \"./bindCallback\": 38,\n      \"./isIterateeCall\": 56\n    }],\n    42: [function (require, module, exports) {\n      var getLength = require('./getLength'),\n          isLength = require('./isLength'),\n          toObject = require('./toObject');\n      /**\n       * Creates a `baseEach` or `baseEachRight` function.\n       *\n       * @private\n       * @param {Function} eachFunc The function to iterate over a collection.\n       * @param {boolean} [fromRight] Specify iterating from right to left.\n       * @returns {Function} Returns the new base function.\n       */\n\n\n      function createBaseEach(eachFunc, fromRight) {\n        return function (collection, iteratee) {\n          var length = collection ? getLength(collection) : 0;\n\n          if (!isLength(length)) {\n            return eachFunc(collection, iteratee);\n          }\n\n          var index = fromRight ? length : -1,\n              iterable = toObject(collection);\n\n          while (fromRight ? index-- : ++index < length) {\n            if (iteratee(iterable[index], index, iterable) === false) {\n              break;\n            }\n          }\n\n          return collection;\n        };\n      }\n\n      module.exports = createBaseEach;\n    }, {\n      \"./getLength\": 50,\n      \"./isLength\": 58,\n      \"./toObject\": 62\n    }],\n    43: [function (require, module, exports) {\n      var toObject = require('./toObject');\n      /**\n       * Creates a base function for `_.forIn` or `_.forInRight`.\n       *\n       * @private\n       * @param {boolean} [fromRight] Specify iterating from right to left.\n       * @returns {Function} Returns the new base function.\n       */\n\n\n      function createBaseFor(fromRight) {\n        return function (object, iteratee, keysFunc) {\n          var iterable = toObject(object),\n              props = keysFunc(object),\n              length = props.length,\n              index = fromRight ? length : -1;\n\n          while (fromRight ? index-- : ++index < length) {\n            var key = props[index];\n\n            if (iteratee(iterable[key], key, iterable) === false) {\n              break;\n            }\n          }\n\n          return object;\n        };\n      }\n\n      module.exports = createBaseFor;\n    }, {\n      \"./toObject\": 62\n    }],\n    44: [function (require, module, exports) {\n      (function (global) {\n        var SetCache = require('./SetCache'),\n            getNative = require('./getNative');\n        /** Native method references. */\n\n\n        var Set = getNative(global, 'Set');\n        /* Native method references for those with the same name as other `lodash` methods. */\n\n        var nativeCreate = getNative(Object, 'create');\n        /**\n         * Creates a `Set` cache object to optimize linear searches of large arrays.\n         *\n         * @private\n         * @param {Array} [values] The values to cache.\n         * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n         */\n\n        function createCache(values) {\n          return nativeCreate && Set ? new SetCache(values) : null;\n        }\n\n        module.exports = createCache;\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"./SetCache\": 11,\n      \"./getNative\": 52\n    }],\n    45: [function (require, module, exports) {\n      var restParam = require('../function/restParam');\n      /**\n       * Creates a `_.defaults` or `_.defaultsDeep` function.\n       *\n       * @private\n       * @param {Function} assigner The function to assign values.\n       * @param {Function} customizer The function to customize assigned values.\n       * @returns {Function} Returns the new defaults function.\n       */\n\n\n      function createDefaults(assigner, customizer) {\n        return restParam(function (args) {\n          var object = args[0];\n\n          if (object == null) {\n            return object;\n          }\n\n          args.push(customizer);\n          return assigner.apply(undefined, args);\n        });\n      }\n\n      module.exports = createDefaults;\n    }, {\n      \"../function/restParam\": 10\n    }],\n    46: [function (require, module, exports) {\n      var bindCallback = require('./bindCallback'),\n          isArray = require('../lang/isArray');\n      /**\n       * Creates a function for `_.forEach` or `_.forEachRight`.\n       *\n       * @private\n       * @param {Function} arrayFunc The function to iterate over an array.\n       * @param {Function} eachFunc The function to iterate over a collection.\n       * @returns {Function} Returns the new each function.\n       */\n\n\n      function createForEach(arrayFunc, eachFunc) {\n        return function (collection, iteratee, thisArg) {\n          return typeof iteratee == 'function' && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n        };\n      }\n\n      module.exports = createForEach;\n    }, {\n      \"../lang/isArray\": 65,\n      \"./bindCallback\": 38\n    }],\n    47: [function (require, module, exports) {\n      var arraySome = require('./arraySome');\n      /**\n       * A specialized version of `baseIsEqualDeep` for arrays with support for\n       * partial deep comparisons.\n       *\n       * @private\n       * @param {Array} array The array to compare.\n       * @param {Array} other The other array to compare.\n       * @param {Function} equalFunc The function to determine equivalents of values.\n       * @param {Function} [customizer] The function to customize comparing arrays.\n       * @param {boolean} [isLoose] Specify performing partial comparisons.\n       * @param {Array} [stackA] Tracks traversed `value` objects.\n       * @param {Array} [stackB] Tracks traversed `other` objects.\n       * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n       */\n\n\n      function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n        var index = -1,\n            arrLength = array.length,\n            othLength = other.length;\n\n        if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n          return false;\n        } // Ignore non-index properties.\n\n\n        while (++index < arrLength) {\n          var arrValue = array[index],\n              othValue = other[index],\n              result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n          if (result !== undefined) {\n            if (result) {\n              continue;\n            }\n\n            return false;\n          } // Recursively compare arrays (susceptible to call stack limits).\n\n\n          if (isLoose) {\n            if (!arraySome(other, function (othValue) {\n              return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n            })) {\n              return false;\n            }\n          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      module.exports = equalArrays;\n    }, {\n      \"./arraySome\": 15\n    }],\n    48: [function (require, module, exports) {\n      /** `Object#toString` result references. */\n      var boolTag = '[object Boolean]',\n          dateTag = '[object Date]',\n          errorTag = '[object Error]',\n          numberTag = '[object Number]',\n          regexpTag = '[object RegExp]',\n          stringTag = '[object String]';\n      /**\n       * A specialized version of `baseIsEqualDeep` for comparing objects of\n       * the same `toStringTag`.\n       *\n       * **Note:** This function only supports comparing values with tags of\n       * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n       *\n       * @private\n       * @param {Object} object The object to compare.\n       * @param {Object} other The other object to compare.\n       * @param {string} tag The `toStringTag` of the objects to compare.\n       * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n       */\n\n      function equalByTag(object, other, tag) {\n        switch (tag) {\n          case boolTag:\n          case dateTag:\n            // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n            // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n            return +object == +other;\n\n          case errorTag:\n            return object.name == other.name && object.message == other.message;\n\n          case numberTag:\n            // Treat `NaN` vs. `NaN` as equal.\n            return object != +object ? other != +other : object == +other;\n\n          case regexpTag:\n          case stringTag:\n            // Coerce regexes to strings and treat strings primitives and string\n            // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n            return object == other + '';\n        }\n\n        return false;\n      }\n\n      module.exports = equalByTag;\n    }, {}],\n    49: [function (require, module, exports) {\n      var keys = require('../object/keys');\n      /** Used for native method references. */\n\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /**\n       * A specialized version of `baseIsEqualDeep` for objects with support for\n       * partial deep comparisons.\n       *\n       * @private\n       * @param {Object} object The object to compare.\n       * @param {Object} other The other object to compare.\n       * @param {Function} equalFunc The function to determine equivalents of values.\n       * @param {Function} [customizer] The function to customize comparing values.\n       * @param {boolean} [isLoose] Specify performing partial comparisons.\n       * @param {Array} [stackA] Tracks traversed `value` objects.\n       * @param {Array} [stackB] Tracks traversed `other` objects.\n       * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n       */\n\n      function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n        var objProps = keys(object),\n            objLength = objProps.length,\n            othProps = keys(other),\n            othLength = othProps.length;\n\n        if (objLength != othLength && !isLoose) {\n          return false;\n        }\n\n        var index = objLength;\n\n        while (index--) {\n          var key = objProps[index];\n\n          if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n            return false;\n          }\n        }\n\n        var skipCtor = isLoose;\n\n        while (++index < objLength) {\n          key = objProps[index];\n          var objValue = object[key],\n              othValue = other[key],\n              result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined; // Recursively compare objects (susceptible to call stack limits).\n\n          if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n            return false;\n          }\n\n          skipCtor || (skipCtor = key == 'constructor');\n        }\n\n        if (!skipCtor) {\n          var objCtor = object.constructor,\n              othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      module.exports = equalObjects;\n    }, {\n      \"../object/keys\": 72\n    }],\n    50: [function (require, module, exports) {\n      var baseProperty = require('./baseProperty');\n      /**\n       * Gets the \"length\" property value of `object`.\n       *\n       * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n       * that affects Safari on at least iOS 8.1-8.3 ARM64.\n       *\n       * @private\n       * @param {Object} object The object to query.\n       * @returns {*} Returns the \"length\" value.\n       */\n\n\n      var getLength = baseProperty('length');\n      module.exports = getLength;\n    }, {\n      \"./baseProperty\": 34\n    }],\n    51: [function (require, module, exports) {\n      var isStrictComparable = require('./isStrictComparable'),\n          pairs = require('../object/pairs');\n      /**\n       * Gets the propery names, values, and compare flags of `object`.\n       *\n       * @private\n       * @param {Object} object The object to query.\n       * @returns {Array} Returns the match data of `object`.\n       */\n\n\n      function getMatchData(object) {\n        var result = pairs(object),\n            length = result.length;\n\n        while (length--) {\n          result[length][2] = isStrictComparable(result[length][1]);\n        }\n\n        return result;\n      }\n\n      module.exports = getMatchData;\n    }, {\n      \"../object/pairs\": 74,\n      \"./isStrictComparable\": 60\n    }],\n    52: [function (require, module, exports) {\n      var isNative = require('../lang/isNative');\n      /**\n       * Gets the native function at `key` of `object`.\n       *\n       * @private\n       * @param {Object} object The object to query.\n       * @param {string} key The key of the method to get.\n       * @returns {*} Returns the function if it's native, else `undefined`.\n       */\n\n\n      function getNative(object, key) {\n        var value = object == null ? undefined : object[key];\n        return isNative(value) ? value : undefined;\n      }\n\n      module.exports = getNative;\n    }, {\n      \"../lang/isNative\": 67\n    }],\n    53: [function (require, module, exports) {\n      /**\n       * Gets the index at which the first occurrence of `NaN` is found in `array`.\n       *\n       * @private\n       * @param {Array} array The array to search.\n       * @param {number} fromIndex The index to search from.\n       * @param {boolean} [fromRight] Specify iterating from right to left.\n       * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n       */\n      function indexOfNaN(array, fromIndex, fromRight) {\n        var length = array.length,\n            index = fromIndex + (fromRight ? 0 : -1);\n\n        while (fromRight ? index-- : ++index < length) {\n          var other = array[index];\n\n          if (other !== other) {\n            return index;\n          }\n        }\n\n        return -1;\n      }\n\n      module.exports = indexOfNaN;\n    }, {}],\n    54: [function (require, module, exports) {\n      var getLength = require('./getLength'),\n          isLength = require('./isLength');\n      /**\n       * Checks if `value` is array-like.\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n       */\n\n\n      function isArrayLike(value) {\n        return value != null && isLength(getLength(value));\n      }\n\n      module.exports = isArrayLike;\n    }, {\n      \"./getLength\": 50,\n      \"./isLength\": 58\n    }],\n    55: [function (require, module, exports) {\n      /** Used to detect unsigned integer values. */\n      var reIsUint = /^\\d+$/;\n      /**\n       * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n       * of an array-like value.\n       */\n\n      var MAX_SAFE_INTEGER = 9007199254740991;\n      /**\n       * Checks if `value` is a valid array-like index.\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n       * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n       */\n\n      function isIndex(value, length) {\n        value = typeof value == 'number' || reIsUint.test(value) ? +value : -1;\n        length = length == null ? MAX_SAFE_INTEGER : length;\n        return value > -1 && value % 1 == 0 && value < length;\n      }\n\n      module.exports = isIndex;\n    }, {}],\n    56: [function (require, module, exports) {\n      var isArrayLike = require('./isArrayLike'),\n          isIndex = require('./isIndex'),\n          isObject = require('../lang/isObject');\n      /**\n       * Checks if the provided arguments are from an iteratee call.\n       *\n       * @private\n       * @param {*} value The potential iteratee value argument.\n       * @param {*} index The potential iteratee index or key argument.\n       * @param {*} object The potential iteratee object argument.\n       * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n       */\n\n\n      function isIterateeCall(value, index, object) {\n        if (!isObject(object)) {\n          return false;\n        }\n\n        var type = _typeof(index);\n\n        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n          var other = object[index];\n          return value === value ? value === other : other !== other;\n        }\n\n        return false;\n      }\n\n      module.exports = isIterateeCall;\n    }, {\n      \"../lang/isObject\": 68,\n      \"./isArrayLike\": 54,\n      \"./isIndex\": 55\n    }],\n    57: [function (require, module, exports) {\n      var isArray = require('../lang/isArray'),\n          toObject = require('./toObject');\n      /** Used to match property names within property paths. */\n\n\n      var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n          reIsPlainProp = /^\\w*$/;\n      /**\n       * Checks if `value` is a property name and not a property path.\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @param {Object} [object] The object to query keys on.\n       * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n       */\n\n      function isKey(value, object) {\n        var type = _typeof(value);\n\n        if (type == 'string' && reIsPlainProp.test(value) || type == 'number') {\n          return true;\n        }\n\n        if (isArray(value)) {\n          return false;\n        }\n\n        var result = !reIsDeepProp.test(value);\n        return result || object != null && value in toObject(object);\n      }\n\n      module.exports = isKey;\n    }, {\n      \"../lang/isArray\": 65,\n      \"./toObject\": 62\n    }],\n    58: [function (require, module, exports) {\n      /**\n       * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n       * of an array-like value.\n       */\n      var MAX_SAFE_INTEGER = 9007199254740991;\n      /**\n       * Checks if `value` is a valid array-like length.\n       *\n       * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n       */\n\n      function isLength(value) {\n        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n      }\n\n      module.exports = isLength;\n    }, {}],\n    59: [function (require, module, exports) {\n      /**\n       * Checks if `value` is object-like.\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n       */\n      function isObjectLike(value) {\n        return !!value && _typeof(value) == 'object';\n      }\n\n      module.exports = isObjectLike;\n    }, {}],\n    60: [function (require, module, exports) {\n      var isObject = require('../lang/isObject');\n      /**\n       * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n       *\n       * @private\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` if suitable for strict\n       *  equality comparisons, else `false`.\n       */\n\n\n      function isStrictComparable(value) {\n        return value === value && !isObject(value);\n      }\n\n      module.exports = isStrictComparable;\n    }, {\n      \"../lang/isObject\": 68\n    }],\n    61: [function (require, module, exports) {\n      var isArguments = require('../lang/isArguments'),\n          isArray = require('../lang/isArray'),\n          isIndex = require('./isIndex'),\n          isLength = require('./isLength'),\n          keysIn = require('../object/keysIn');\n      /** Used for native method references. */\n\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /**\n       * A fallback implementation of `Object.keys` which creates an array of the\n       * own enumerable property names of `object`.\n       *\n       * @private\n       * @param {Object} object The object to query.\n       * @returns {Array} Returns the array of property names.\n       */\n\n      function shimKeys(object) {\n        var props = keysIn(object),\n            propsLength = props.length,\n            length = propsLength && object.length;\n        var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));\n        var index = -1,\n            result = [];\n\n        while (++index < propsLength) {\n          var key = props[index];\n\n          if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n            result.push(key);\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = shimKeys;\n    }, {\n      \"../lang/isArguments\": 64,\n      \"../lang/isArray\": 65,\n      \"../object/keysIn\": 73,\n      \"./isIndex\": 55,\n      \"./isLength\": 58\n    }],\n    62: [function (require, module, exports) {\n      var isObject = require('../lang/isObject');\n      /**\n       * Converts `value` to an object if it's not one.\n       *\n       * @private\n       * @param {*} value The value to process.\n       * @returns {Object} Returns the object.\n       */\n\n\n      function toObject(value) {\n        return isObject(value) ? value : Object(value);\n      }\n\n      module.exports = toObject;\n    }, {\n      \"../lang/isObject\": 68\n    }],\n    63: [function (require, module, exports) {\n      var baseToString = require('./baseToString'),\n          isArray = require('../lang/isArray');\n      /** Used to match property names within property paths. */\n\n\n      var rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n      /** Used to match backslashes in property paths. */\n\n      var reEscapeChar = /\\\\(\\\\)?/g;\n      /**\n       * Converts `value` to property path array if it's not one.\n       *\n       * @private\n       * @param {*} value The value to process.\n       * @returns {Array} Returns the property path array.\n       */\n\n      function toPath(value) {\n        if (isArray(value)) {\n          return value;\n        }\n\n        var result = [];\n        baseToString(value).replace(rePropName, function (match, number, quote, string) {\n          result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n        });\n        return result;\n      }\n\n      module.exports = toPath;\n    }, {\n      \"../lang/isArray\": 65,\n      \"./baseToString\": 37\n    }],\n    64: [function (require, module, exports) {\n      var isArrayLike = require('../internal/isArrayLike'),\n          isObjectLike = require('../internal/isObjectLike');\n      /** Used for native method references. */\n\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /** Native method references. */\n\n      var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n      /**\n       * Checks if `value` is classified as an `arguments` object.\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n       * @example\n       *\n       * _.isArguments(function() { return arguments; }());\n       * // => true\n       *\n       * _.isArguments([1, 2, 3]);\n       * // => false\n       */\n\n      function isArguments(value) {\n        return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n      }\n\n      module.exports = isArguments;\n    }, {\n      \"../internal/isArrayLike\": 54,\n      \"../internal/isObjectLike\": 59\n    }],\n    65: [function (require, module, exports) {\n      var getNative = require('../internal/getNative'),\n          isLength = require('../internal/isLength'),\n          isObjectLike = require('../internal/isObjectLike');\n      /** `Object#toString` result references. */\n\n\n      var arrayTag = '[object Array]';\n      /** Used for native method references. */\n\n      var objectProto = Object.prototype;\n      /**\n       * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var objToString = objectProto.toString;\n      /* Native method references for those with the same name as other `lodash` methods. */\n\n      var nativeIsArray = getNative(Array, 'isArray');\n      /**\n       * Checks if `value` is classified as an `Array` object.\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n       * @example\n       *\n       * _.isArray([1, 2, 3]);\n       * // => true\n       *\n       * _.isArray(function() { return arguments; }());\n       * // => false\n       */\n\n      var isArray = nativeIsArray || function (value) {\n        return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n      };\n\n      module.exports = isArray;\n    }, {\n      \"../internal/getNative\": 52,\n      \"../internal/isLength\": 58,\n      \"../internal/isObjectLike\": 59\n    }],\n    66: [function (require, module, exports) {\n      var isObject = require('./isObject');\n      /** `Object#toString` result references. */\n\n\n      var funcTag = '[object Function]';\n      /** Used for native method references. */\n\n      var objectProto = Object.prototype;\n      /**\n       * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var objToString = objectProto.toString;\n      /**\n       * Checks if `value` is classified as a `Function` object.\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n       * @example\n       *\n       * _.isFunction(_);\n       * // => true\n       *\n       * _.isFunction(/abc/);\n       * // => false\n       */\n\n      function isFunction(value) {\n        // The use of `Object#toString` avoids issues with the `typeof` operator\n        // in older versions of Chrome and Safari which return 'function' for regexes\n        // and Safari 8 which returns 'object' for typed array constructors.\n        return isObject(value) && objToString.call(value) == funcTag;\n      }\n\n      module.exports = isFunction;\n    }, {\n      \"./isObject\": 68\n    }],\n    67: [function (require, module, exports) {\n      var isFunction = require('./isFunction'),\n          isObjectLike = require('../internal/isObjectLike');\n      /** Used to detect host constructors (Safari > 5). */\n\n\n      var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n      /** Used for native method references. */\n\n      var objectProto = Object.prototype;\n      /** Used to resolve the decompiled source of functions. */\n\n      var fnToString = Function.prototype.toString;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /** Used to detect if a method is native. */\n\n      var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n      /**\n       * Checks if `value` is a native function.\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n       * @example\n       *\n       * _.isNative(Array.prototype.push);\n       * // => true\n       *\n       * _.isNative(_);\n       * // => false\n       */\n\n      function isNative(value) {\n        if (value == null) {\n          return false;\n        }\n\n        if (isFunction(value)) {\n          return reIsNative.test(fnToString.call(value));\n        }\n\n        return isObjectLike(value) && reIsHostCtor.test(value);\n      }\n\n      module.exports = isNative;\n    }, {\n      \"../internal/isObjectLike\": 59,\n      \"./isFunction\": 66\n    }],\n    68: [function (require, module, exports) {\n      /**\n       * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n       * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n       * @example\n       *\n       * _.isObject({});\n       * // => true\n       *\n       * _.isObject([1, 2, 3]);\n       * // => true\n       *\n       * _.isObject(1);\n       * // => false\n       */\n      function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = _typeof(value);\n\n        return !!value && (type == 'object' || type == 'function');\n      }\n\n      module.exports = isObject;\n    }, {}],\n    69: [function (require, module, exports) {\n      var isLength = require('../internal/isLength'),\n          isObjectLike = require('../internal/isObjectLike');\n      /** `Object#toString` result references. */\n\n\n      var argsTag = '[object Arguments]',\n          arrayTag = '[object Array]',\n          boolTag = '[object Boolean]',\n          dateTag = '[object Date]',\n          errorTag = '[object Error]',\n          funcTag = '[object Function]',\n          mapTag = '[object Map]',\n          numberTag = '[object Number]',\n          objectTag = '[object Object]',\n          regexpTag = '[object RegExp]',\n          setTag = '[object Set]',\n          stringTag = '[object String]',\n          weakMapTag = '[object WeakMap]';\n      var arrayBufferTag = '[object ArrayBuffer]',\n          float32Tag = '[object Float32Array]',\n          float64Tag = '[object Float64Array]',\n          int8Tag = '[object Int8Array]',\n          int16Tag = '[object Int16Array]',\n          int32Tag = '[object Int32Array]',\n          uint8Tag = '[object Uint8Array]',\n          uint8ClampedTag = '[object Uint8ClampedArray]',\n          uint16Tag = '[object Uint16Array]',\n          uint32Tag = '[object Uint32Array]';\n      /** Used to identify `toStringTag` values of typed arrays. */\n\n      var typedArrayTags = {};\n      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n      /** Used for native method references. */\n\n      var objectProto = Object.prototype;\n      /**\n       * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n       * of values.\n       */\n\n      var objToString = objectProto.toString;\n      /**\n       * Checks if `value` is classified as a typed array.\n       *\n       * @static\n       * @memberOf _\n       * @category Lang\n       * @param {*} value The value to check.\n       * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n       * @example\n       *\n       * _.isTypedArray(new Uint8Array);\n       * // => true\n       *\n       * _.isTypedArray([]);\n       * // => false\n       */\n\n      function isTypedArray(value) {\n        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n      }\n\n      module.exports = isTypedArray;\n    }, {\n      \"../internal/isLength\": 58,\n      \"../internal/isObjectLike\": 59\n    }],\n    70: [function (require, module, exports) {\n      var assignWith = require('../internal/assignWith'),\n          baseAssign = require('../internal/baseAssign'),\n          createAssigner = require('../internal/createAssigner');\n      /**\n       * Assigns own enumerable properties of source object(s) to the destination\n       * object. Subsequent sources overwrite property assignments of previous sources.\n       * If `customizer` is provided it's invoked to produce the assigned values.\n       * The `customizer` is bound to `thisArg` and invoked with five arguments:\n       * (objectValue, sourceValue, key, object, source).\n       *\n       * **Note:** This method mutates `object` and is based on\n       * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n       *\n       * @static\n       * @memberOf _\n       * @alias extend\n       * @category Object\n       * @param {Object} object The destination object.\n       * @param {...Object} [sources] The source objects.\n       * @param {Function} [customizer] The function to customize assigned values.\n       * @param {*} [thisArg] The `this` binding of `customizer`.\n       * @returns {Object} Returns `object`.\n       * @example\n       *\n       * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n       * // => { 'user': 'fred', 'age': 40 }\n       *\n       * // using a customizer callback\n       * var defaults = _.partialRight(_.assign, function(value, other) {\n       *   return _.isUndefined(value) ? other : value;\n       * });\n       *\n       * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n       * // => { 'user': 'barney', 'age': 36 }\n       */\n\n\n      var assign = createAssigner(function (object, source, customizer) {\n        return customizer ? assignWith(object, source, customizer) : baseAssign(object, source);\n      });\n      module.exports = assign;\n    }, {\n      \"../internal/assignWith\": 17,\n      \"../internal/baseAssign\": 18,\n      \"../internal/createAssigner\": 41\n    }],\n    71: [function (require, module, exports) {\n      var assign = require('./assign'),\n          assignDefaults = require('../internal/assignDefaults'),\n          createDefaults = require('../internal/createDefaults');\n      /**\n       * Assigns own enumerable properties of source object(s) to the destination\n       * object for all destination properties that resolve to `undefined`. Once a\n       * property is set, additional values of the same property are ignored.\n       *\n       * **Note:** This method mutates `object`.\n       *\n       * @static\n       * @memberOf _\n       * @category Object\n       * @param {Object} object The destination object.\n       * @param {...Object} [sources] The source objects.\n       * @returns {Object} Returns `object`.\n       * @example\n       *\n       * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n       * // => { 'user': 'barney', 'age': 36 }\n       */\n\n\n      var defaults = createDefaults(assign, assignDefaults);\n      module.exports = defaults;\n    }, {\n      \"../internal/assignDefaults\": 16,\n      \"../internal/createDefaults\": 45,\n      \"./assign\": 70\n    }],\n    72: [function (require, module, exports) {\n      var getNative = require('../internal/getNative'),\n          isArrayLike = require('../internal/isArrayLike'),\n          isObject = require('../lang/isObject'),\n          shimKeys = require('../internal/shimKeys');\n      /* Native method references for those with the same name as other `lodash` methods. */\n\n\n      var nativeKeys = getNative(Object, 'keys');\n      /**\n       * Creates an array of the own enumerable property names of `object`.\n       *\n       * **Note:** Non-object values are coerced to objects. See the\n       * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n       * for more details.\n       *\n       * @static\n       * @memberOf _\n       * @category Object\n       * @param {Object} object The object to query.\n       * @returns {Array} Returns the array of property names.\n       * @example\n       *\n       * function Foo() {\n       *   this.a = 1;\n       *   this.b = 2;\n       * }\n       *\n       * Foo.prototype.c = 3;\n       *\n       * _.keys(new Foo);\n       * // => ['a', 'b'] (iteration order is not guaranteed)\n       *\n       * _.keys('hi');\n       * // => ['0', '1']\n       */\n\n      var keys = !nativeKeys ? shimKeys : function (object) {\n        var Ctor = object == null ? undefined : object.constructor;\n\n        if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && isArrayLike(object)) {\n          return shimKeys(object);\n        }\n\n        return isObject(object) ? nativeKeys(object) : [];\n      };\n      module.exports = keys;\n    }, {\n      \"../internal/getNative\": 52,\n      \"../internal/isArrayLike\": 54,\n      \"../internal/shimKeys\": 61,\n      \"../lang/isObject\": 68\n    }],\n    73: [function (require, module, exports) {\n      var isArguments = require('../lang/isArguments'),\n          isArray = require('../lang/isArray'),\n          isIndex = require('../internal/isIndex'),\n          isLength = require('../internal/isLength'),\n          isObject = require('../lang/isObject');\n      /** Used for native method references. */\n\n\n      var objectProto = Object.prototype;\n      /** Used to check objects for own properties. */\n\n      var hasOwnProperty = objectProto.hasOwnProperty;\n      /**\n       * Creates an array of the own and inherited enumerable property names of `object`.\n       *\n       * **Note:** Non-object values are coerced to objects.\n       *\n       * @static\n       * @memberOf _\n       * @category Object\n       * @param {Object} object The object to query.\n       * @returns {Array} Returns the array of property names.\n       * @example\n       *\n       * function Foo() {\n       *   this.a = 1;\n       *   this.b = 2;\n       * }\n       *\n       * Foo.prototype.c = 3;\n       *\n       * _.keysIn(new Foo);\n       * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n       */\n\n      function keysIn(object) {\n        if (object == null) {\n          return [];\n        }\n\n        if (!isObject(object)) {\n          object = Object(object);\n        }\n\n        var length = object.length;\n        length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;\n        var Ctor = object.constructor,\n            index = -1,\n            isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n            result = Array(length),\n            skipIndexes = length > 0;\n\n        while (++index < length) {\n          result[index] = index + '';\n        }\n\n        for (var key in object) {\n          if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n            result.push(key);\n          }\n        }\n\n        return result;\n      }\n\n      module.exports = keysIn;\n    }, {\n      \"../internal/isIndex\": 55,\n      \"../internal/isLength\": 58,\n      \"../lang/isArguments\": 64,\n      \"../lang/isArray\": 65,\n      \"../lang/isObject\": 68\n    }],\n    74: [function (require, module, exports) {\n      var keys = require('./keys'),\n          toObject = require('../internal/toObject');\n      /**\n       * Creates a two dimensional array of the key-value pairs for `object`,\n       * e.g. `[[key1, value1], [key2, value2]]`.\n       *\n       * @static\n       * @memberOf _\n       * @category Object\n       * @param {Object} object The object to query.\n       * @returns {Array} Returns the new array of key-value pairs.\n       * @example\n       *\n       * _.pairs({ 'barney': 36, 'fred': 40 });\n       * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n       */\n\n\n      function pairs(object) {\n        object = toObject(object);\n        var index = -1,\n            props = keys(object),\n            length = props.length,\n            result = Array(length);\n\n        while (++index < length) {\n          var key = props[index];\n          result[index] = [key, object[key]];\n        }\n\n        return result;\n      }\n\n      module.exports = pairs;\n    }, {\n      \"../internal/toObject\": 62,\n      \"./keys\": 72\n    }],\n    75: [function (require, module, exports) {\n      /**\n       * This method returns the first argument provided to it.\n       *\n       * @static\n       * @memberOf _\n       * @category Utility\n       * @param {*} value Any value.\n       * @returns {*} Returns `value`.\n       * @example\n       *\n       * var object = { 'user': 'fred' };\n       *\n       * _.identity(object) === object;\n       * // => true\n       */\n      function identity(value) {\n        return value;\n      }\n\n      module.exports = identity;\n    }, {}],\n    76: [function (require, module, exports) {\n      var baseProperty = require('../internal/baseProperty'),\n          basePropertyDeep = require('../internal/basePropertyDeep'),\n          isKey = require('../internal/isKey');\n      /**\n       * Creates a function that returns the property value at `path` on a\n       * given object.\n       *\n       * @static\n       * @memberOf _\n       * @category Utility\n       * @param {Array|string} path The path of the property to get.\n       * @returns {Function} Returns the new function.\n       * @example\n       *\n       * var objects = [\n       *   { 'a': { 'b': { 'c': 2 } } },\n       *   { 'a': { 'b': { 'c': 1 } } }\n       * ];\n       *\n       * _.map(objects, _.property('a.b.c'));\n       * // => [2, 1]\n       *\n       * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n       * // => [1, 2]\n       */\n\n\n      function property(path) {\n        return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n      }\n\n      module.exports = property;\n    }, {\n      \"../internal/baseProperty\": 34,\n      \"../internal/basePropertyDeep\": 35,\n      \"../internal/isKey\": 57\n    }],\n    77: [function (require, module, exports) {\n      var createElement = require(\"./vdom/create-element.js\");\n\n      module.exports = createElement;\n    }, {\n      \"./vdom/create-element.js\": 89\n    }],\n    78: [function (require, module, exports) {\n      var diff = require(\"./vtree/diff.js\");\n\n      module.exports = diff;\n    }, {\n      \"./vtree/diff.js\": 112\n    }],\n    79: [function (require, module, exports) {\n      var h = require(\"./virtual-hyperscript/index.js\");\n\n      module.exports = h;\n    }, {\n      \"./virtual-hyperscript/index.js\": 97\n    }],\n    80: [function (require, module, exports) {\n      /*!\n       * Cross-Browser Split 1.1.1\n       * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n       * Available under the MIT License\n       * ECMAScript compliant, uniform cross-browser split method\n       */\n\n      /**\n       * Splits a string into an array of strings using a regex or string separator. Matches of the\n       * separator are not included in the result array. However, if `separator` is a regex that contains\n       * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n       * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n       * cross-browser.\n       * @param {String} str String to split.\n       * @param {RegExp|String} separator Regex or string to use for separating the string.\n       * @param {Number} [limit] Maximum number of items to include in the result array.\n       * @returns {Array} Array of substrings.\n       * @example\n       *\n       * // Basic use\n       * split('a b c d', ' ');\n       * // -> ['a', 'b', 'c', 'd']\n       *\n       * // With limit\n       * split('a b c d', ' ', 2);\n       * // -> ['a', 'b']\n       *\n       * // Backreferences in result array\n       * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n       * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n       */\n      module.exports = function split(undef) {\n        var nativeSplit = String.prototype.split,\n            compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n            // NPCG: nonparticipating capturing group\n        self;\n\n        self = function self(str, separator, limit) {\n          // If `separator` is not a regex, use `nativeSplit`\n          if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n            return nativeSplit.call(str, separator, limit);\n          }\n\n          var output = [],\n              flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + ( // Proposed for ES6\n          separator.sticky ? \"y\" : \"\"),\n              // Firefox 3+\n          lastLastIndex = 0,\n              // Make `global` and avoid `lastIndex` issues by working with a copy\n          separator = new RegExp(separator.source, flags + \"g\"),\n              separator2,\n              match,\n              lastIndex,\n              lastLength;\n          str += \"\"; // Type-convert\n\n          if (!compliantExecNpcg) {\n            // Doesn't need flags gy, but they don't hurt\n            separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n          }\n          /* Values for `limit`, per the spec:\n           * If undefined: 4294967295 // Math.pow(2, 32) - 1\n           * If 0, Infinity, or NaN: 0\n           * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n           * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n           * If other: Type-convert, then use the above rules\n           */\n\n\n          limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n          limit >>> 0; // ToUint32(limit)\n\n          while (match = separator.exec(str)) {\n            // `separator.lastIndex` is not reliable cross-browser\n            lastIndex = match.index + match[0].length;\n\n            if (lastIndex > lastLastIndex) {\n              output.push(str.slice(lastLastIndex, match.index)); // Fix browsers whose `exec` methods don't consistently return `undefined` for\n              // nonparticipating capturing groups\n\n              if (!compliantExecNpcg && match.length > 1) {\n                match[0].replace(separator2, function () {\n                  for (var i = 1; i < arguments.length - 2; i++) {\n                    if (arguments[i] === undef) {\n                      match[i] = undef;\n                    }\n                  }\n                });\n              }\n\n              if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n              }\n\n              lastLength = match[0].length;\n              lastLastIndex = lastIndex;\n\n              if (output.length >= limit) {\n                break;\n              }\n            }\n\n            if (separator.lastIndex === match.index) {\n              separator.lastIndex++; // Avoid an infinite loop\n            }\n          }\n\n          if (lastLastIndex === str.length) {\n            if (lastLength || !separator.test(\"\")) {\n              output.push(\"\");\n            }\n          } else {\n            output.push(str.slice(lastLastIndex));\n          }\n\n          return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        return self;\n      }();\n    }, {}],\n    81: [function (require, module, exports) {\n      'use strict';\n\n      var OneVersionConstraint = require('individual/one-version');\n\n      var MY_VERSION = '7';\n      OneVersionConstraint('ev-store', MY_VERSION);\n      var hashKey = '__EV_STORE_KEY@' + MY_VERSION;\n      module.exports = EvStore;\n\n      function EvStore(elem) {\n        var hash = elem[hashKey];\n\n        if (!hash) {\n          hash = elem[hashKey] = {};\n        }\n\n        return hash;\n      }\n    }, {\n      \"individual/one-version\": 83\n    }],\n    82: [function (require, module, exports) {\n      (function (global) {\n        'use strict';\n        /*global window, global*/\n\n        var root = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n        module.exports = Individual;\n\n        function Individual(key, value) {\n          if (key in root) {\n            return root[key];\n          }\n\n          root[key] = value;\n          return value;\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    83: [function (require, module, exports) {\n      'use strict';\n\n      var Individual = require('./index.js');\n\n      module.exports = OneVersion;\n\n      function OneVersion(moduleName, version, defaultValue) {\n        var key = '__INDIVIDUAL_ONE_VERSION_' + moduleName;\n        var enforceKey = key + '_ENFORCE_SINGLETON';\n        var versionValue = Individual(enforceKey, version);\n\n        if (versionValue !== version) {\n          throw new Error('Can only have one copy of ' + moduleName + '.\\n' + 'You already have version ' + versionValue + ' installed.\\n' + 'This means you cannot install version ' + version);\n        }\n\n        return Individual(key, defaultValue);\n      }\n    }, {\n      \"./index.js\": 82\n    }],\n    84: [function (require, module, exports) {\n      (function (global) {\n        var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\n        var minDoc = require('min-document');\n\n        if (typeof document !== 'undefined') {\n          module.exports = document;\n        } else {\n          var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n          if (!doccy) {\n            doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n          }\n\n          module.exports = doccy;\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"min-document\": 1\n    }],\n    85: [function (require, module, exports) {\n      \"use strict\";\n\n      module.exports = function isObject(x) {\n        return _typeof(x) === \"object\" && x !== null;\n      };\n    }, {}],\n    86: [function (require, module, exports) {\n      var nativeIsArray = Array.isArray;\n      var toString = Object.prototype.toString;\n      module.exports = nativeIsArray || isArray;\n\n      function isArray(obj) {\n        return toString.call(obj) === \"[object Array]\";\n      }\n    }, {}],\n    87: [function (require, module, exports) {\n      var patch = require(\"./vdom/patch.js\");\n\n      module.exports = patch;\n    }, {\n      \"./vdom/patch.js\": 92\n    }],\n    88: [function (require, module, exports) {\n      var isObject = require(\"is-object\");\n\n      var isHook = require(\"../vnode/is-vhook.js\");\n\n      module.exports = applyProperties;\n\n      function applyProperties(node, props, previous) {\n        for (var propName in props) {\n          var propValue = props[propName];\n\n          if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n          } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous);\n\n            if (propValue.hook) {\n              propValue.hook(node, propName, previous ? previous[propName] : undefined);\n            }\n          } else {\n            if (isObject(propValue)) {\n              patchObject(node, props, previous, propName, propValue);\n            } else {\n              node[propName] = propValue;\n            }\n          }\n        }\n      }\n\n      function removeProperty(node, propName, propValue, previous) {\n        if (previous) {\n          var previousValue = previous[propName];\n\n          if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n              for (var attrName in previousValue) {\n                node.removeAttribute(attrName);\n              }\n            } else if (propName === \"style\") {\n              for (var i in previousValue) {\n                node.style[i] = \"\";\n              }\n            } else if (typeof previousValue === \"string\") {\n              node[propName] = \"\";\n            } else {\n              node[propName] = null;\n            }\n          } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue);\n          }\n        }\n      }\n\n      function patchObject(node, props, previous, propName, propValue) {\n        var previousValue = previous ? previous[propName] : undefined; // Set attributes\n\n        if (propName === \"attributes\") {\n          for (var attrName in propValue) {\n            var attrValue = propValue[attrName];\n\n            if (attrValue === undefined) {\n              node.removeAttribute(attrName);\n            } else {\n              node.setAttribute(attrName, attrValue);\n            }\n          }\n\n          return;\n        }\n\n        if (previousValue && isObject(previousValue) && getPrototype(previousValue) !== getPrototype(propValue)) {\n          node[propName] = propValue;\n          return;\n        }\n\n        if (!isObject(node[propName])) {\n          node[propName] = {};\n        }\n\n        var replacer = propName === \"style\" ? \"\" : undefined;\n\n        for (var k in propValue) {\n          var value = propValue[k];\n          node[propName][k] = value === undefined ? replacer : value;\n        }\n      }\n\n      function getPrototype(value) {\n        if (Object.getPrototypeOf) {\n          return Object.getPrototypeOf(value);\n        } else if (value.__proto__) {\n          return value.__proto__;\n        } else if (value.constructor) {\n          return value.constructor.prototype;\n        }\n      }\n    }, {\n      \"../vnode/is-vhook.js\": 103,\n      \"is-object\": 85\n    }],\n    89: [function (require, module, exports) {\n      var document = require(\"global/document\");\n\n      var applyProperties = require(\"./apply-properties\");\n\n      var isVNode = require(\"../vnode/is-vnode.js\");\n\n      var isVText = require(\"../vnode/is-vtext.js\");\n\n      var isWidget = require(\"../vnode/is-widget.js\");\n\n      var handleThunk = require(\"../vnode/handle-thunk.js\");\n\n      module.exports = createElement;\n\n      function createElement(vnode, opts) {\n        var doc = opts ? opts.document || document : document;\n        var warn = opts ? opts.warn : null;\n        vnode = handleThunk(vnode).a;\n\n        if (isWidget(vnode)) {\n          return vnode.init();\n        } else if (isVText(vnode)) {\n          return doc.createTextNode(vnode.text);\n        } else if (!isVNode(vnode)) {\n          if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode);\n          }\n\n          return null;\n        }\n\n        var node = vnode.namespace === null ? doc.createElement(vnode.tagName) : doc.createElementNS(vnode.namespace, vnode.tagName);\n        var props = vnode.properties;\n        applyProperties(node, props);\n        var children = vnode.children;\n\n        for (var i = 0; i < children.length; i++) {\n          var childNode = createElement(children[i], opts);\n\n          if (childNode) {\n            node.appendChild(childNode);\n          }\n        }\n\n        return node;\n      }\n    }, {\n      \"../vnode/handle-thunk.js\": 101,\n      \"../vnode/is-vnode.js\": 104,\n      \"../vnode/is-vtext.js\": 105,\n      \"../vnode/is-widget.js\": 106,\n      \"./apply-properties\": 88,\n      \"global/document\": 84\n    }],\n    90: [function (require, module, exports) {\n      // Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n      // We don't want to read all of the DOM nodes in the tree so we use\n      // the in-order tree indexing to eliminate recursion down certain branches.\n      // We only recurse into a DOM node if we know that it contains a child of\n      // interest.\n      var noChild = {};\n      module.exports = domIndex;\n\n      function domIndex(rootNode, tree, indices, nodes) {\n        if (!indices || indices.length === 0) {\n          return {};\n        } else {\n          indices.sort(ascending);\n          return recurse(rootNode, tree, indices, nodes, 0);\n        }\n      }\n\n      function recurse(rootNode, tree, indices, nodes, rootIndex) {\n        nodes = nodes || {};\n\n        if (rootNode) {\n          if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode;\n          }\n\n          var vChildren = tree.children;\n\n          if (vChildren) {\n            var childNodes = rootNode.childNodes;\n\n            for (var i = 0; i < tree.children.length; i++) {\n              rootIndex += 1;\n              var vChild = vChildren[i] || noChild;\n              var nextIndex = rootIndex + (vChild.count || 0); // skip recursion down the tree if there are no nodes down here\n\n              if (indexInRange(indices, rootIndex, nextIndex)) {\n                recurse(childNodes[i], vChild, indices, nodes, rootIndex);\n              }\n\n              rootIndex = nextIndex;\n            }\n          }\n        }\n\n        return nodes;\n      } // Binary search for an index in the interval [left, right]\n\n\n      function indexInRange(indices, left, right) {\n        if (indices.length === 0) {\n          return false;\n        }\n\n        var minIndex = 0;\n        var maxIndex = indices.length - 1;\n        var currentIndex;\n        var currentItem;\n\n        while (minIndex <= maxIndex) {\n          currentIndex = (maxIndex + minIndex) / 2 >> 0;\n          currentItem = indices[currentIndex];\n\n          if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right;\n          } else if (currentItem < left) {\n            minIndex = currentIndex + 1;\n          } else if (currentItem > right) {\n            maxIndex = currentIndex - 1;\n          } else {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      function ascending(a, b) {\n        return a > b ? 1 : -1;\n      }\n    }, {}],\n    91: [function (require, module, exports) {\n      var applyProperties = require(\"./apply-properties\");\n\n      var isWidget = require(\"../vnode/is-widget.js\");\n\n      var VPatch = require(\"../vnode/vpatch.js\");\n\n      var updateWidget = require(\"./update-widget\");\n\n      module.exports = applyPatch;\n\n      function applyPatch(vpatch, domNode, renderOptions) {\n        var type = vpatch.type;\n        var vNode = vpatch.vNode;\n        var patch = vpatch.patch;\n\n        switch (type) {\n          case VPatch.REMOVE:\n            return removeNode(domNode, vNode);\n\n          case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions);\n\n          case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions);\n\n          case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions);\n\n          case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions);\n\n          case VPatch.ORDER:\n            reorderChildren(domNode, patch);\n            return domNode;\n\n          case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties);\n            return domNode;\n\n          case VPatch.THUNK:\n            return replaceRoot(domNode, renderOptions.patch(domNode, patch, renderOptions));\n\n          default:\n            return domNode;\n        }\n      }\n\n      function removeNode(domNode, vNode) {\n        var parentNode = domNode.parentNode;\n\n        if (parentNode) {\n          parentNode.removeChild(domNode);\n        }\n\n        destroyWidget(domNode, vNode);\n        return null;\n      }\n\n      function insertNode(parentNode, vNode, renderOptions) {\n        var newNode = renderOptions.render(vNode, renderOptions);\n\n        if (parentNode) {\n          parentNode.appendChild(newNode);\n        }\n\n        return parentNode;\n      }\n\n      function stringPatch(domNode, leftVNode, vText, renderOptions) {\n        var newNode;\n\n        if (domNode.nodeType === 3) {\n          domNode.replaceData(0, domNode.length, vText.text);\n          newNode = domNode;\n        } else {\n          var parentNode = domNode.parentNode;\n          newNode = renderOptions.render(vText, renderOptions);\n\n          if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode);\n          }\n        }\n\n        return newNode;\n      }\n\n      function widgetPatch(domNode, leftVNode, widget, renderOptions) {\n        var updating = updateWidget(leftVNode, widget);\n        var newNode;\n\n        if (updating) {\n          newNode = widget.update(leftVNode, domNode) || domNode;\n        } else {\n          newNode = renderOptions.render(widget, renderOptions);\n        }\n\n        var parentNode = domNode.parentNode;\n\n        if (parentNode && newNode !== domNode) {\n          parentNode.replaceChild(newNode, domNode);\n        }\n\n        if (!updating) {\n          destroyWidget(domNode, leftVNode);\n        }\n\n        return newNode;\n      }\n\n      function vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n        var parentNode = domNode.parentNode;\n        var newNode = renderOptions.render(vNode, renderOptions);\n\n        if (parentNode && newNode !== domNode) {\n          parentNode.replaceChild(newNode, domNode);\n        }\n\n        return newNode;\n      }\n\n      function destroyWidget(domNode, w) {\n        if (typeof w.destroy === \"function\" && isWidget(w)) {\n          w.destroy(domNode);\n        }\n      }\n\n      function reorderChildren(domNode, moves) {\n        var childNodes = domNode.childNodes;\n        var keyMap = {};\n        var node;\n        var remove;\n        var insert;\n\n        for (var i = 0; i < moves.removes.length; i++) {\n          remove = moves.removes[i];\n          node = childNodes[remove.from];\n\n          if (remove.key) {\n            keyMap[remove.key] = node;\n          }\n\n          domNode.removeChild(node);\n        }\n\n        var length = childNodes.length;\n\n        for (var j = 0; j < moves.inserts.length; j++) {\n          insert = moves.inserts[j];\n          node = keyMap[insert.key]; // this is the weirdest bug i've ever seen in webkit\n\n          domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to]);\n        }\n      }\n\n      function replaceRoot(oldRoot, newRoot) {\n        if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n          oldRoot.parentNode.replaceChild(newRoot, oldRoot);\n        }\n\n        return newRoot;\n      }\n    }, {\n      \"../vnode/is-widget.js\": 106,\n      \"../vnode/vpatch.js\": 109,\n      \"./apply-properties\": 88,\n      \"./update-widget\": 93\n    }],\n    92: [function (require, module, exports) {\n      var document = require(\"global/document\");\n\n      var isArray = require(\"x-is-array\");\n\n      var render = require(\"./create-element\");\n\n      var domIndex = require(\"./dom-index\");\n\n      var patchOp = require(\"./patch-op\");\n\n      module.exports = patch;\n\n      function patch(rootNode, patches, renderOptions) {\n        renderOptions = renderOptions || {};\n        renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch ? renderOptions.patch : patchRecursive;\n        renderOptions.render = renderOptions.render || render;\n        return renderOptions.patch(rootNode, patches, renderOptions);\n      }\n\n      function patchRecursive(rootNode, patches, renderOptions) {\n        var indices = patchIndices(patches);\n\n        if (indices.length === 0) {\n          return rootNode;\n        }\n\n        var index = domIndex(rootNode, patches.a, indices);\n        var ownerDocument = rootNode.ownerDocument;\n\n        if (!renderOptions.document && ownerDocument !== document) {\n          renderOptions.document = ownerDocument;\n        }\n\n        for (var i = 0; i < indices.length; i++) {\n          var nodeIndex = indices[i];\n          rootNode = applyPatch(rootNode, index[nodeIndex], patches[nodeIndex], renderOptions);\n        }\n\n        return rootNode;\n      }\n\n      function applyPatch(rootNode, domNode, patchList, renderOptions) {\n        if (!domNode) {\n          return rootNode;\n        }\n\n        var newNode;\n\n        if (isArray(patchList)) {\n          for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions);\n\n            if (domNode === rootNode) {\n              rootNode = newNode;\n            }\n          }\n        } else {\n          newNode = patchOp(patchList, domNode, renderOptions);\n\n          if (domNode === rootNode) {\n            rootNode = newNode;\n          }\n        }\n\n        return rootNode;\n      }\n\n      function patchIndices(patches) {\n        var indices = [];\n\n        for (var key in patches) {\n          if (key !== \"a\") {\n            indices.push(Number(key));\n          }\n        }\n\n        return indices;\n      }\n    }, {\n      \"./create-element\": 89,\n      \"./dom-index\": 90,\n      \"./patch-op\": 91,\n      \"global/document\": 84,\n      \"x-is-array\": 86\n    }],\n    93: [function (require, module, exports) {\n      var isWidget = require(\"../vnode/is-widget.js\");\n\n      module.exports = updateWidget;\n\n      function updateWidget(a, b) {\n        if (isWidget(a) && isWidget(b)) {\n          if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id;\n          } else {\n            return a.init === b.init;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      \"../vnode/is-widget.js\": 106\n    }],\n    94: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = AttributeHook;\n\n      function AttributeHook(namespace, value) {\n        if (!(this instanceof AttributeHook)) {\n          return new AttributeHook(namespace, value);\n        }\n\n        this.namespace = namespace;\n        this.value = value;\n      }\n\n      AttributeHook.prototype.hook = function (node, prop, prev) {\n        if (prev && prev.type === 'AttributeHook' && prev.value === this.value && prev.namespace === this.namespace) {\n          return;\n        }\n\n        node.setAttributeNS(this.namespace, prop, this.value);\n      };\n\n      AttributeHook.prototype.unhook = function (node, prop, next) {\n        if (next && next.type === 'AttributeHook' && next.namespace === this.namespace) {\n          return;\n        }\n\n        var colonPosition = prop.indexOf(':');\n        var localName = colonPosition > -1 ? prop.substr(colonPosition + 1) : prop;\n        node.removeAttributeNS(this.namespace, localName);\n      };\n\n      AttributeHook.prototype.type = 'AttributeHook';\n    }, {}],\n    95: [function (require, module, exports) {\n      'use strict';\n\n      var EvStore = require('ev-store');\n\n      module.exports = EvHook;\n\n      function EvHook(value) {\n        if (!(this instanceof EvHook)) {\n          return new EvHook(value);\n        }\n\n        this.value = value;\n      }\n\n      EvHook.prototype.hook = function (node, propertyName) {\n        var es = EvStore(node);\n        var propName = propertyName.substr(3);\n        es[propName] = this.value;\n      };\n\n      EvHook.prototype.unhook = function (node, propertyName) {\n        var es = EvStore(node);\n        var propName = propertyName.substr(3);\n        es[propName] = undefined;\n      };\n    }, {\n      \"ev-store\": 81\n    }],\n    96: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = SoftSetHook;\n\n      function SoftSetHook(value) {\n        if (!(this instanceof SoftSetHook)) {\n          return new SoftSetHook(value);\n        }\n\n        this.value = value;\n      }\n\n      SoftSetHook.prototype.hook = function (node, propertyName) {\n        if (node[propertyName] !== this.value) {\n          node[propertyName] = this.value;\n        }\n      };\n    }, {}],\n    97: [function (require, module, exports) {\n      'use strict';\n\n      var isArray = require('x-is-array');\n\n      var VNode = require('../vnode/vnode.js');\n\n      var VText = require('../vnode/vtext.js');\n\n      var isVNode = require('../vnode/is-vnode');\n\n      var isVText = require('../vnode/is-vtext');\n\n      var isWidget = require('../vnode/is-widget');\n\n      var isHook = require('../vnode/is-vhook');\n\n      var isVThunk = require('../vnode/is-thunk');\n\n      var parseTag = require('./parse-tag.js');\n\n      var softSetHook = require('./hooks/soft-set-hook.js');\n\n      var evHook = require('./hooks/ev-hook.js');\n\n      module.exports = h;\n\n      function h(tagName, properties, children) {\n        var childNodes = [];\n        var tag, props, key, namespace;\n\n        if (!children && isChildren(properties)) {\n          children = properties;\n          props = {};\n        }\n\n        props = props || properties || {};\n        tag = parseTag(tagName, props); // support keys\n\n        if (props.hasOwnProperty('key')) {\n          key = props.key;\n          props.key = undefined;\n        } // support namespace\n\n\n        if (props.hasOwnProperty('namespace')) {\n          namespace = props.namespace;\n          props.namespace = undefined;\n        } // fix cursor bug\n\n\n        if (tag === 'INPUT' && !namespace && props.hasOwnProperty('value') && props.value !== undefined && !isHook(props.value)) {\n          props.value = softSetHook(props.value);\n        }\n\n        transformProperties(props);\n\n        if (children !== undefined && children !== null) {\n          addChild(children, childNodes, tag, props);\n        }\n\n        return new VNode(tag, props, childNodes, key, namespace);\n      }\n\n      function addChild(c, childNodes, tag, props) {\n        if (typeof c === 'string') {\n          childNodes.push(new VText(c));\n        } else if (typeof c === 'number') {\n          childNodes.push(new VText(String(c)));\n        } else if (isChild(c)) {\n          childNodes.push(c);\n        } else if (isArray(c)) {\n          for (var i = 0; i < c.length; i++) {\n            addChild(c[i], childNodes, tag, props);\n          }\n        } else if (c === null || c === undefined) {\n          return;\n        } else {\n          throw UnexpectedVirtualElement({\n            foreignObject: c,\n            parentVnode: {\n              tagName: tag,\n              properties: props\n            }\n          });\n        }\n      }\n\n      function transformProperties(props) {\n        for (var propName in props) {\n          if (props.hasOwnProperty(propName)) {\n            var value = props[propName];\n\n            if (isHook(value)) {\n              continue;\n            }\n\n            if (propName.substr(0, 3) === 'ev-') {\n              // add ev-foo support\n              props[propName] = evHook(value);\n            }\n          }\n        }\n      }\n\n      function isChild(x) {\n        return isVNode(x) || isVText(x) || isWidget(x) || isVThunk(x);\n      }\n\n      function isChildren(x) {\n        return typeof x === 'string' || isArray(x) || isChild(x);\n      }\n\n      function UnexpectedVirtualElement(data) {\n        var err = new Error();\n        err.type = 'virtual-hyperscript.unexpected.virtual-element';\n        err.message = 'Unexpected virtual child passed to h().\\n' + 'Expected a VNode / Vthunk / VWidget / string but:\\n' + 'got:\\n' + errorString(data.foreignObject) + '.\\n' + 'The parent vnode is:\\n' + errorString(data.parentVnode);\n        '\\n' + 'Suggested fix: change your `h(..., [ ... ])` callsite.';\n        err.foreignObject = data.foreignObject;\n        err.parentVnode = data.parentVnode;\n        return err;\n      }\n\n      function errorString(obj) {\n        try {\n          return JSON.stringify(obj, null, '    ');\n        } catch (e) {\n          return String(obj);\n        }\n      }\n    }, {\n      \"../vnode/is-thunk\": 102,\n      \"../vnode/is-vhook\": 103,\n      \"../vnode/is-vnode\": 104,\n      \"../vnode/is-vtext\": 105,\n      \"../vnode/is-widget\": 106,\n      \"../vnode/vnode.js\": 108,\n      \"../vnode/vtext.js\": 110,\n      \"./hooks/ev-hook.js\": 95,\n      \"./hooks/soft-set-hook.js\": 96,\n      \"./parse-tag.js\": 98,\n      \"x-is-array\": 86\n    }],\n    98: [function (require, module, exports) {\n      'use strict';\n\n      var split = require('browser-split');\n\n      var classIdSplit = /([\\.#]?[a-zA-Z0-9\\u007F-\\uFFFF_:-]+)/;\n      var notClassId = /^\\.|#/;\n      module.exports = parseTag;\n\n      function parseTag(tag, props) {\n        if (!tag) {\n          return 'DIV';\n        }\n\n        var noId = !props.hasOwnProperty('id');\n        var tagParts = split(tag, classIdSplit);\n        var tagName = null;\n\n        if (notClassId.test(tagParts[1])) {\n          tagName = 'DIV';\n        }\n\n        var classes, part, type, i;\n\n        for (i = 0; i < tagParts.length; i++) {\n          part = tagParts[i];\n\n          if (!part) {\n            continue;\n          }\n\n          type = part.charAt(0);\n\n          if (!tagName) {\n            tagName = part;\n          } else if (type === '.') {\n            classes = classes || [];\n            classes.push(part.substring(1, part.length));\n          } else if (type === '#' && noId) {\n            props.id = part.substring(1, part.length);\n          }\n        }\n\n        if (classes) {\n          if (props.className) {\n            classes.push(props.className);\n          }\n\n          props.className = classes.join(' ');\n        }\n\n        return props.namespace ? tagName : tagName.toUpperCase();\n      }\n    }, {\n      \"browser-split\": 80\n    }],\n    99: [function (require, module, exports) {\n      'use strict';\n\n      var DEFAULT_NAMESPACE = null;\n      var EV_NAMESPACE = 'http://www.w3.org/2001/xml-events';\n      var XLINK_NAMESPACE = 'http://www.w3.org/1999/xlink';\n      var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'; // http://www.w3.org/TR/SVGTiny12/attributeTable.html\n      // http://www.w3.org/TR/SVG/attindex.html\n\n      var SVG_PROPERTIES = {\n        'about': DEFAULT_NAMESPACE,\n        'accent-height': DEFAULT_NAMESPACE,\n        'accumulate': DEFAULT_NAMESPACE,\n        'additive': DEFAULT_NAMESPACE,\n        'alignment-baseline': DEFAULT_NAMESPACE,\n        'alphabetic': DEFAULT_NAMESPACE,\n        'amplitude': DEFAULT_NAMESPACE,\n        'arabic-form': DEFAULT_NAMESPACE,\n        'ascent': DEFAULT_NAMESPACE,\n        'attributeName': DEFAULT_NAMESPACE,\n        'attributeType': DEFAULT_NAMESPACE,\n        'azimuth': DEFAULT_NAMESPACE,\n        'bandwidth': DEFAULT_NAMESPACE,\n        'baseFrequency': DEFAULT_NAMESPACE,\n        'baseProfile': DEFAULT_NAMESPACE,\n        'baseline-shift': DEFAULT_NAMESPACE,\n        'bbox': DEFAULT_NAMESPACE,\n        'begin': DEFAULT_NAMESPACE,\n        'bias': DEFAULT_NAMESPACE,\n        'by': DEFAULT_NAMESPACE,\n        'calcMode': DEFAULT_NAMESPACE,\n        'cap-height': DEFAULT_NAMESPACE,\n        'class': DEFAULT_NAMESPACE,\n        'clip': DEFAULT_NAMESPACE,\n        'clip-path': DEFAULT_NAMESPACE,\n        'clip-rule': DEFAULT_NAMESPACE,\n        'clipPathUnits': DEFAULT_NAMESPACE,\n        'color': DEFAULT_NAMESPACE,\n        'color-interpolation': DEFAULT_NAMESPACE,\n        'color-interpolation-filters': DEFAULT_NAMESPACE,\n        'color-profile': DEFAULT_NAMESPACE,\n        'color-rendering': DEFAULT_NAMESPACE,\n        'content': DEFAULT_NAMESPACE,\n        'contentScriptType': DEFAULT_NAMESPACE,\n        'contentStyleType': DEFAULT_NAMESPACE,\n        'cursor': DEFAULT_NAMESPACE,\n        'cx': DEFAULT_NAMESPACE,\n        'cy': DEFAULT_NAMESPACE,\n        'd': DEFAULT_NAMESPACE,\n        'datatype': DEFAULT_NAMESPACE,\n        'defaultAction': DEFAULT_NAMESPACE,\n        'descent': DEFAULT_NAMESPACE,\n        'diffuseConstant': DEFAULT_NAMESPACE,\n        'direction': DEFAULT_NAMESPACE,\n        'display': DEFAULT_NAMESPACE,\n        'divisor': DEFAULT_NAMESPACE,\n        'dominant-baseline': DEFAULT_NAMESPACE,\n        'dur': DEFAULT_NAMESPACE,\n        'dx': DEFAULT_NAMESPACE,\n        'dy': DEFAULT_NAMESPACE,\n        'edgeMode': DEFAULT_NAMESPACE,\n        'editable': DEFAULT_NAMESPACE,\n        'elevation': DEFAULT_NAMESPACE,\n        'enable-background': DEFAULT_NAMESPACE,\n        'end': DEFAULT_NAMESPACE,\n        'ev:event': EV_NAMESPACE,\n        'event': DEFAULT_NAMESPACE,\n        'exponent': DEFAULT_NAMESPACE,\n        'externalResourcesRequired': DEFAULT_NAMESPACE,\n        'fill': DEFAULT_NAMESPACE,\n        'fill-opacity': DEFAULT_NAMESPACE,\n        'fill-rule': DEFAULT_NAMESPACE,\n        'filter': DEFAULT_NAMESPACE,\n        'filterRes': DEFAULT_NAMESPACE,\n        'filterUnits': DEFAULT_NAMESPACE,\n        'flood-color': DEFAULT_NAMESPACE,\n        'flood-opacity': DEFAULT_NAMESPACE,\n        'focusHighlight': DEFAULT_NAMESPACE,\n        'focusable': DEFAULT_NAMESPACE,\n        'font-family': DEFAULT_NAMESPACE,\n        'font-size': DEFAULT_NAMESPACE,\n        'font-size-adjust': DEFAULT_NAMESPACE,\n        'font-stretch': DEFAULT_NAMESPACE,\n        'font-style': DEFAULT_NAMESPACE,\n        'font-variant': DEFAULT_NAMESPACE,\n        'font-weight': DEFAULT_NAMESPACE,\n        'format': DEFAULT_NAMESPACE,\n        'from': DEFAULT_NAMESPACE,\n        'fx': DEFAULT_NAMESPACE,\n        'fy': DEFAULT_NAMESPACE,\n        'g1': DEFAULT_NAMESPACE,\n        'g2': DEFAULT_NAMESPACE,\n        'glyph-name': DEFAULT_NAMESPACE,\n        'glyph-orientation-horizontal': DEFAULT_NAMESPACE,\n        'glyph-orientation-vertical': DEFAULT_NAMESPACE,\n        'glyphRef': DEFAULT_NAMESPACE,\n        'gradientTransform': DEFAULT_NAMESPACE,\n        'gradientUnits': DEFAULT_NAMESPACE,\n        'handler': DEFAULT_NAMESPACE,\n        'hanging': DEFAULT_NAMESPACE,\n        'height': DEFAULT_NAMESPACE,\n        'horiz-adv-x': DEFAULT_NAMESPACE,\n        'horiz-origin-x': DEFAULT_NAMESPACE,\n        'horiz-origin-y': DEFAULT_NAMESPACE,\n        'id': DEFAULT_NAMESPACE,\n        'ideographic': DEFAULT_NAMESPACE,\n        'image-rendering': DEFAULT_NAMESPACE,\n        'in': DEFAULT_NAMESPACE,\n        'in2': DEFAULT_NAMESPACE,\n        'initialVisibility': DEFAULT_NAMESPACE,\n        'intercept': DEFAULT_NAMESPACE,\n        'k': DEFAULT_NAMESPACE,\n        'k1': DEFAULT_NAMESPACE,\n        'k2': DEFAULT_NAMESPACE,\n        'k3': DEFAULT_NAMESPACE,\n        'k4': DEFAULT_NAMESPACE,\n        'kernelMatrix': DEFAULT_NAMESPACE,\n        'kernelUnitLength': DEFAULT_NAMESPACE,\n        'kerning': DEFAULT_NAMESPACE,\n        'keyPoints': DEFAULT_NAMESPACE,\n        'keySplines': DEFAULT_NAMESPACE,\n        'keyTimes': DEFAULT_NAMESPACE,\n        'lang': DEFAULT_NAMESPACE,\n        'lengthAdjust': DEFAULT_NAMESPACE,\n        'letter-spacing': DEFAULT_NAMESPACE,\n        'lighting-color': DEFAULT_NAMESPACE,\n        'limitingConeAngle': DEFAULT_NAMESPACE,\n        'local': DEFAULT_NAMESPACE,\n        'marker-end': DEFAULT_NAMESPACE,\n        'marker-mid': DEFAULT_NAMESPACE,\n        'marker-start': DEFAULT_NAMESPACE,\n        'markerHeight': DEFAULT_NAMESPACE,\n        'markerUnits': DEFAULT_NAMESPACE,\n        'markerWidth': DEFAULT_NAMESPACE,\n        'mask': DEFAULT_NAMESPACE,\n        'maskContentUnits': DEFAULT_NAMESPACE,\n        'maskUnits': DEFAULT_NAMESPACE,\n        'mathematical': DEFAULT_NAMESPACE,\n        'max': DEFAULT_NAMESPACE,\n        'media': DEFAULT_NAMESPACE,\n        'mediaCharacterEncoding': DEFAULT_NAMESPACE,\n        'mediaContentEncodings': DEFAULT_NAMESPACE,\n        'mediaSize': DEFAULT_NAMESPACE,\n        'mediaTime': DEFAULT_NAMESPACE,\n        'method': DEFAULT_NAMESPACE,\n        'min': DEFAULT_NAMESPACE,\n        'mode': DEFAULT_NAMESPACE,\n        'name': DEFAULT_NAMESPACE,\n        'nav-down': DEFAULT_NAMESPACE,\n        'nav-down-left': DEFAULT_NAMESPACE,\n        'nav-down-right': DEFAULT_NAMESPACE,\n        'nav-left': DEFAULT_NAMESPACE,\n        'nav-next': DEFAULT_NAMESPACE,\n        'nav-prev': DEFAULT_NAMESPACE,\n        'nav-right': DEFAULT_NAMESPACE,\n        'nav-up': DEFAULT_NAMESPACE,\n        'nav-up-left': DEFAULT_NAMESPACE,\n        'nav-up-right': DEFAULT_NAMESPACE,\n        'numOctaves': DEFAULT_NAMESPACE,\n        'observer': DEFAULT_NAMESPACE,\n        'offset': DEFAULT_NAMESPACE,\n        'opacity': DEFAULT_NAMESPACE,\n        'operator': DEFAULT_NAMESPACE,\n        'order': DEFAULT_NAMESPACE,\n        'orient': DEFAULT_NAMESPACE,\n        'orientation': DEFAULT_NAMESPACE,\n        'origin': DEFAULT_NAMESPACE,\n        'overflow': DEFAULT_NAMESPACE,\n        'overlay': DEFAULT_NAMESPACE,\n        'overline-position': DEFAULT_NAMESPACE,\n        'overline-thickness': DEFAULT_NAMESPACE,\n        'panose-1': DEFAULT_NAMESPACE,\n        'path': DEFAULT_NAMESPACE,\n        'pathLength': DEFAULT_NAMESPACE,\n        'patternContentUnits': DEFAULT_NAMESPACE,\n        'patternTransform': DEFAULT_NAMESPACE,\n        'patternUnits': DEFAULT_NAMESPACE,\n        'phase': DEFAULT_NAMESPACE,\n        'playbackOrder': DEFAULT_NAMESPACE,\n        'pointer-events': DEFAULT_NAMESPACE,\n        'points': DEFAULT_NAMESPACE,\n        'pointsAtX': DEFAULT_NAMESPACE,\n        'pointsAtY': DEFAULT_NAMESPACE,\n        'pointsAtZ': DEFAULT_NAMESPACE,\n        'preserveAlpha': DEFAULT_NAMESPACE,\n        'preserveAspectRatio': DEFAULT_NAMESPACE,\n        'primitiveUnits': DEFAULT_NAMESPACE,\n        'propagate': DEFAULT_NAMESPACE,\n        'property': DEFAULT_NAMESPACE,\n        'r': DEFAULT_NAMESPACE,\n        'radius': DEFAULT_NAMESPACE,\n        'refX': DEFAULT_NAMESPACE,\n        'refY': DEFAULT_NAMESPACE,\n        'rel': DEFAULT_NAMESPACE,\n        'rendering-intent': DEFAULT_NAMESPACE,\n        'repeatCount': DEFAULT_NAMESPACE,\n        'repeatDur': DEFAULT_NAMESPACE,\n        'requiredExtensions': DEFAULT_NAMESPACE,\n        'requiredFeatures': DEFAULT_NAMESPACE,\n        'requiredFonts': DEFAULT_NAMESPACE,\n        'requiredFormats': DEFAULT_NAMESPACE,\n        'resource': DEFAULT_NAMESPACE,\n        'restart': DEFAULT_NAMESPACE,\n        'result': DEFAULT_NAMESPACE,\n        'rev': DEFAULT_NAMESPACE,\n        'role': DEFAULT_NAMESPACE,\n        'rotate': DEFAULT_NAMESPACE,\n        'rx': DEFAULT_NAMESPACE,\n        'ry': DEFAULT_NAMESPACE,\n        'scale': DEFAULT_NAMESPACE,\n        'seed': DEFAULT_NAMESPACE,\n        'shape-rendering': DEFAULT_NAMESPACE,\n        'slope': DEFAULT_NAMESPACE,\n        'snapshotTime': DEFAULT_NAMESPACE,\n        'spacing': DEFAULT_NAMESPACE,\n        'specularConstant': DEFAULT_NAMESPACE,\n        'specularExponent': DEFAULT_NAMESPACE,\n        'spreadMethod': DEFAULT_NAMESPACE,\n        'startOffset': DEFAULT_NAMESPACE,\n        'stdDeviation': DEFAULT_NAMESPACE,\n        'stemh': DEFAULT_NAMESPACE,\n        'stemv': DEFAULT_NAMESPACE,\n        'stitchTiles': DEFAULT_NAMESPACE,\n        'stop-color': DEFAULT_NAMESPACE,\n        'stop-opacity': DEFAULT_NAMESPACE,\n        'strikethrough-position': DEFAULT_NAMESPACE,\n        'strikethrough-thickness': DEFAULT_NAMESPACE,\n        'string': DEFAULT_NAMESPACE,\n        'stroke': DEFAULT_NAMESPACE,\n        'stroke-dasharray': DEFAULT_NAMESPACE,\n        'stroke-dashoffset': DEFAULT_NAMESPACE,\n        'stroke-linecap': DEFAULT_NAMESPACE,\n        'stroke-linejoin': DEFAULT_NAMESPACE,\n        'stroke-miterlimit': DEFAULT_NAMESPACE,\n        'stroke-opacity': DEFAULT_NAMESPACE,\n        'stroke-width': DEFAULT_NAMESPACE,\n        'surfaceScale': DEFAULT_NAMESPACE,\n        'syncBehavior': DEFAULT_NAMESPACE,\n        'syncBehaviorDefault': DEFAULT_NAMESPACE,\n        'syncMaster': DEFAULT_NAMESPACE,\n        'syncTolerance': DEFAULT_NAMESPACE,\n        'syncToleranceDefault': DEFAULT_NAMESPACE,\n        'systemLanguage': DEFAULT_NAMESPACE,\n        'tableValues': DEFAULT_NAMESPACE,\n        'target': DEFAULT_NAMESPACE,\n        'targetX': DEFAULT_NAMESPACE,\n        'targetY': DEFAULT_NAMESPACE,\n        'text-anchor': DEFAULT_NAMESPACE,\n        'text-decoration': DEFAULT_NAMESPACE,\n        'text-rendering': DEFAULT_NAMESPACE,\n        'textLength': DEFAULT_NAMESPACE,\n        'timelineBegin': DEFAULT_NAMESPACE,\n        'title': DEFAULT_NAMESPACE,\n        'to': DEFAULT_NAMESPACE,\n        'transform': DEFAULT_NAMESPACE,\n        'transformBehavior': DEFAULT_NAMESPACE,\n        'type': DEFAULT_NAMESPACE,\n        'typeof': DEFAULT_NAMESPACE,\n        'u1': DEFAULT_NAMESPACE,\n        'u2': DEFAULT_NAMESPACE,\n        'underline-position': DEFAULT_NAMESPACE,\n        'underline-thickness': DEFAULT_NAMESPACE,\n        'unicode': DEFAULT_NAMESPACE,\n        'unicode-bidi': DEFAULT_NAMESPACE,\n        'unicode-range': DEFAULT_NAMESPACE,\n        'units-per-em': DEFAULT_NAMESPACE,\n        'v-alphabetic': DEFAULT_NAMESPACE,\n        'v-hanging': DEFAULT_NAMESPACE,\n        'v-ideographic': DEFAULT_NAMESPACE,\n        'v-mathematical': DEFAULT_NAMESPACE,\n        'values': DEFAULT_NAMESPACE,\n        'version': DEFAULT_NAMESPACE,\n        'vert-adv-y': DEFAULT_NAMESPACE,\n        'vert-origin-x': DEFAULT_NAMESPACE,\n        'vert-origin-y': DEFAULT_NAMESPACE,\n        'viewBox': DEFAULT_NAMESPACE,\n        'viewTarget': DEFAULT_NAMESPACE,\n        'visibility': DEFAULT_NAMESPACE,\n        'width': DEFAULT_NAMESPACE,\n        'widths': DEFAULT_NAMESPACE,\n        'word-spacing': DEFAULT_NAMESPACE,\n        'writing-mode': DEFAULT_NAMESPACE,\n        'x': DEFAULT_NAMESPACE,\n        'x-height': DEFAULT_NAMESPACE,\n        'x1': DEFAULT_NAMESPACE,\n        'x2': DEFAULT_NAMESPACE,\n        'xChannelSelector': DEFAULT_NAMESPACE,\n        'xlink:actuate': XLINK_NAMESPACE,\n        'xlink:arcrole': XLINK_NAMESPACE,\n        'xlink:href': XLINK_NAMESPACE,\n        'xlink:role': XLINK_NAMESPACE,\n        'xlink:show': XLINK_NAMESPACE,\n        'xlink:title': XLINK_NAMESPACE,\n        'xlink:type': XLINK_NAMESPACE,\n        'xml:base': XML_NAMESPACE,\n        'xml:id': XML_NAMESPACE,\n        'xml:lang': XML_NAMESPACE,\n        'xml:space': XML_NAMESPACE,\n        'y': DEFAULT_NAMESPACE,\n        'y1': DEFAULT_NAMESPACE,\n        'y2': DEFAULT_NAMESPACE,\n        'yChannelSelector': DEFAULT_NAMESPACE,\n        'z': DEFAULT_NAMESPACE,\n        'zoomAndPan': DEFAULT_NAMESPACE\n      };\n      module.exports = SVGAttributeNamespace;\n\n      function SVGAttributeNamespace(value) {\n        if (SVG_PROPERTIES.hasOwnProperty(value)) {\n          return SVG_PROPERTIES[value];\n        }\n      }\n    }, {}],\n    100: [function (require, module, exports) {\n      'use strict';\n\n      var isArray = require('x-is-array');\n\n      var h = require('./index.js');\n\n      var SVGAttributeNamespace = require('./svg-attribute-namespace');\n\n      var attributeHook = require('./hooks/attribute-hook');\n\n      var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n      module.exports = svg;\n\n      function svg(tagName, properties, children) {\n        if (!children && isChildren(properties)) {\n          children = properties;\n          properties = {};\n        }\n\n        properties = properties || {}; // set namespace for svg\n\n        properties.namespace = SVG_NAMESPACE;\n        var attributes = properties.attributes || (properties.attributes = {});\n\n        for (var key in properties) {\n          if (!properties.hasOwnProperty(key)) {\n            continue;\n          }\n\n          var namespace = SVGAttributeNamespace(key);\n\n          if (namespace === undefined) {\n            // not a svg attribute\n            continue;\n          }\n\n          var value = properties[key];\n\n          if (typeof value !== 'string' && typeof value !== 'number' && typeof value !== 'boolean') {\n            continue;\n          }\n\n          if (namespace !== null) {\n            // namespaced attribute\n            properties[key] = attributeHook(namespace, value);\n            continue;\n          }\n\n          attributes[key] = value;\n          properties[key] = undefined;\n        }\n\n        return h(tagName, properties, children);\n      }\n\n      function isChildren(x) {\n        return typeof x === 'string' || isArray(x);\n      }\n    }, {\n      \"./hooks/attribute-hook\": 94,\n      \"./index.js\": 97,\n      \"./svg-attribute-namespace\": 99,\n      \"x-is-array\": 86\n    }],\n    101: [function (require, module, exports) {\n      var isVNode = require(\"./is-vnode\");\n\n      var isVText = require(\"./is-vtext\");\n\n      var isWidget = require(\"./is-widget\");\n\n      var isThunk = require(\"./is-thunk\");\n\n      module.exports = handleThunk;\n\n      function handleThunk(a, b) {\n        var renderedA = a;\n        var renderedB = b;\n\n        if (isThunk(b)) {\n          renderedB = renderThunk(b, a);\n        }\n\n        if (isThunk(a)) {\n          renderedA = renderThunk(a, null);\n        }\n\n        return {\n          a: renderedA,\n          b: renderedB\n        };\n      }\n\n      function renderThunk(thunk, previous) {\n        var renderedThunk = thunk.vnode;\n\n        if (!renderedThunk) {\n          renderedThunk = thunk.vnode = thunk.render(previous);\n        }\n\n        if (!(isVNode(renderedThunk) || isVText(renderedThunk) || isWidget(renderedThunk))) {\n          throw new Error(\"thunk did not return a valid node\");\n        }\n\n        return renderedThunk;\n      }\n    }, {\n      \"./is-thunk\": 102,\n      \"./is-vnode\": 104,\n      \"./is-vtext\": 105,\n      \"./is-widget\": 106\n    }],\n    102: [function (require, module, exports) {\n      module.exports = isThunk;\n\n      function isThunk(t) {\n        return t && t.type === \"Thunk\";\n      }\n    }, {}],\n    103: [function (require, module, exports) {\n      module.exports = isHook;\n\n      function isHook(hook) {\n        return hook && (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") || typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"));\n      }\n    }, {}],\n    104: [function (require, module, exports) {\n      var version = require(\"./version\");\n\n      module.exports = isVirtualNode;\n\n      function isVirtualNode(x) {\n        return x && x.type === \"VirtualNode\" && x.version === version;\n      }\n    }, {\n      \"./version\": 107\n    }],\n    105: [function (require, module, exports) {\n      var version = require(\"./version\");\n\n      module.exports = isVirtualText;\n\n      function isVirtualText(x) {\n        return x && x.type === \"VirtualText\" && x.version === version;\n      }\n    }, {\n      \"./version\": 107\n    }],\n    106: [function (require, module, exports) {\n      module.exports = isWidget;\n\n      function isWidget(w) {\n        return w && w.type === \"Widget\";\n      }\n    }, {}],\n    107: [function (require, module, exports) {\n      module.exports = \"2\";\n    }, {}],\n    108: [function (require, module, exports) {\n      var version = require(\"./version\");\n\n      var isVNode = require(\"./is-vnode\");\n\n      var isWidget = require(\"./is-widget\");\n\n      var isThunk = require(\"./is-thunk\");\n\n      var isVHook = require(\"./is-vhook\");\n\n      module.exports = VirtualNode;\n      var noProperties = {};\n      var noChildren = [];\n\n      function VirtualNode(tagName, properties, children, key, namespace) {\n        this.tagName = tagName;\n        this.properties = properties || noProperties;\n        this.children = children || noChildren;\n        this.key = key != null ? String(key) : undefined;\n        this.namespace = typeof namespace === \"string\" ? namespace : null;\n        var count = children && children.length || 0;\n        var descendants = 0;\n        var hasWidgets = false;\n        var hasThunks = false;\n        var descendantHooks = false;\n        var hooks;\n\n        for (var propName in properties) {\n          if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName];\n\n            if (isVHook(property) && property.unhook) {\n              if (!hooks) {\n                hooks = {};\n              }\n\n              hooks[propName] = property;\n            }\n          }\n        }\n\n        for (var i = 0; i < count; i++) {\n          var child = children[i];\n\n          if (isVNode(child)) {\n            descendants += child.count || 0;\n\n            if (!hasWidgets && child.hasWidgets) {\n              hasWidgets = true;\n            }\n\n            if (!hasThunks && child.hasThunks) {\n              hasThunks = true;\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n              descendantHooks = true;\n            }\n          } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n              hasWidgets = true;\n            }\n          } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n          }\n        }\n\n        this.count = count + descendants;\n        this.hasWidgets = hasWidgets;\n        this.hasThunks = hasThunks;\n        this.hooks = hooks;\n        this.descendantHooks = descendantHooks;\n      }\n\n      VirtualNode.prototype.version = version;\n      VirtualNode.prototype.type = \"VirtualNode\";\n    }, {\n      \"./is-thunk\": 102,\n      \"./is-vhook\": 103,\n      \"./is-vnode\": 104,\n      \"./is-widget\": 106,\n      \"./version\": 107\n    }],\n    109: [function (require, module, exports) {\n      var version = require(\"./version\");\n\n      VirtualPatch.NONE = 0;\n      VirtualPatch.VTEXT = 1;\n      VirtualPatch.VNODE = 2;\n      VirtualPatch.WIDGET = 3;\n      VirtualPatch.PROPS = 4;\n      VirtualPatch.ORDER = 5;\n      VirtualPatch.INSERT = 6;\n      VirtualPatch.REMOVE = 7;\n      VirtualPatch.THUNK = 8;\n      module.exports = VirtualPatch;\n\n      function VirtualPatch(type, vNode, patch) {\n        this.type = Number(type);\n        this.vNode = vNode;\n        this.patch = patch;\n      }\n\n      VirtualPatch.prototype.version = version;\n      VirtualPatch.prototype.type = \"VirtualPatch\";\n    }, {\n      \"./version\": 107\n    }],\n    110: [function (require, module, exports) {\n      var version = require(\"./version\");\n\n      module.exports = VirtualText;\n\n      function VirtualText(text) {\n        this.text = String(text);\n      }\n\n      VirtualText.prototype.version = version;\n      VirtualText.prototype.type = \"VirtualText\";\n    }, {\n      \"./version\": 107\n    }],\n    111: [function (require, module, exports) {\n      var isObject = require(\"is-object\");\n\n      var isHook = require(\"../vnode/is-vhook\");\n\n      module.exports = diffProps;\n\n      function diffProps(a, b) {\n        var diff;\n\n        for (var aKey in a) {\n          if (!(aKey in b)) {\n            diff = diff || {};\n            diff[aKey] = undefined;\n          }\n\n          var aValue = a[aKey];\n          var bValue = b[aKey];\n\n          if (aValue === bValue) {\n            continue;\n          } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n              diff = diff || {};\n              diff[aKey] = bValue;\n            } else if (isHook(bValue)) {\n              diff = diff || {};\n              diff[aKey] = bValue;\n            } else {\n              var objectDiff = diffProps(aValue, bValue);\n\n              if (objectDiff) {\n                diff = diff || {};\n                diff[aKey] = objectDiff;\n              }\n            }\n          } else {\n            diff = diff || {};\n            diff[aKey] = bValue;\n          }\n        }\n\n        for (var bKey in b) {\n          if (!(bKey in a)) {\n            diff = diff || {};\n            diff[bKey] = b[bKey];\n          }\n        }\n\n        return diff;\n      }\n\n      function getPrototype(value) {\n        if (Object.getPrototypeOf) {\n          return Object.getPrototypeOf(value);\n        } else if (value.__proto__) {\n          return value.__proto__;\n        } else if (value.constructor) {\n          return value.constructor.prototype;\n        }\n      }\n    }, {\n      \"../vnode/is-vhook\": 103,\n      \"is-object\": 85\n    }],\n    112: [function (require, module, exports) {\n      var isArray = require(\"x-is-array\");\n\n      var VPatch = require(\"../vnode/vpatch\");\n\n      var isVNode = require(\"../vnode/is-vnode\");\n\n      var isVText = require(\"../vnode/is-vtext\");\n\n      var isWidget = require(\"../vnode/is-widget\");\n\n      var isThunk = require(\"../vnode/is-thunk\");\n\n      var handleThunk = require(\"../vnode/handle-thunk\");\n\n      var diffProps = require(\"./diff-props\");\n\n      module.exports = diff;\n\n      function diff(a, b) {\n        var patch = {\n          a: a\n        };\n        walk(a, b, patch, 0);\n        return patch;\n      }\n\n      function walk(a, b, patch, index) {\n        if (a === b) {\n          return;\n        }\n\n        var apply = patch[index];\n        var applyClear = false;\n\n        if (isThunk(a) || isThunk(b)) {\n          thunks(a, b, patch, index);\n        } else if (b == null) {\n          // If a is a widget we will add a remove patch for it\n          // Otherwise any child widgets/hooks must be destroyed.\n          // This prevents adding two remove patches for a widget.\n          if (!isWidget(a)) {\n            clearState(a, patch, index);\n            apply = patch[index];\n          }\n\n          apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b));\n        } else if (isVNode(b)) {\n          if (isVNode(a)) {\n            if (a.tagName === b.tagName && a.namespace === b.namespace && a.key === b.key) {\n              var propsPatch = diffProps(a.properties, b.properties);\n\n              if (propsPatch) {\n                apply = appendPatch(apply, new VPatch(VPatch.PROPS, a, propsPatch));\n              }\n\n              apply = diffChildren(a, b, patch, apply, index);\n            } else {\n              apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b));\n              applyClear = true;\n            }\n          } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b));\n            applyClear = true;\n          }\n        } else if (isVText(b)) {\n          if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b));\n            applyClear = true;\n          } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b));\n          }\n        } else if (isWidget(b)) {\n          if (!isWidget(a)) {\n            applyClear = true;\n          }\n\n          apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b));\n        }\n\n        if (apply) {\n          patch[index] = apply;\n        }\n\n        if (applyClear) {\n          clearState(a, patch, index);\n        }\n      }\n\n      function diffChildren(a, b, patch, apply, index) {\n        var aChildren = a.children;\n        var orderedSet = reorder(aChildren, b.children);\n        var bChildren = orderedSet.children;\n        var aLen = aChildren.length;\n        var bLen = bChildren.length;\n        var len = aLen > bLen ? aLen : bLen;\n\n        for (var i = 0; i < len; i++) {\n          var leftNode = aChildren[i];\n          var rightNode = bChildren[i];\n          index += 1;\n\n          if (!leftNode) {\n            if (rightNode) {\n              // Excess nodes in b need to be added\n              apply = appendPatch(apply, new VPatch(VPatch.INSERT, null, rightNode));\n            }\n          } else {\n            walk(leftNode, rightNode, patch, index);\n          }\n\n          if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count;\n          }\n        }\n\n        if (orderedSet.moves) {\n          // Reorder nodes last\n          apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, orderedSet.moves));\n        }\n\n        return apply;\n      }\n\n      function clearState(vNode, patch, index) {\n        // TODO: Make this a single walk, not two\n        unhook(vNode, patch, index);\n        destroyWidgets(vNode, patch, index);\n      } // Patch records for all destroyed widgets must be added because we need\n      // a DOM node reference for the destroy function\n\n\n      function destroyWidgets(vNode, patch, index) {\n        if (isWidget(vNode)) {\n          if (typeof vNode.destroy === \"function\") {\n            patch[index] = appendPatch(patch[index], new VPatch(VPatch.REMOVE, vNode, null));\n          }\n        } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n          var children = vNode.children;\n          var len = children.length;\n\n          for (var i = 0; i < len; i++) {\n            var child = children[i];\n            index += 1;\n            destroyWidgets(child, patch, index);\n\n            if (isVNode(child) && child.count) {\n              index += child.count;\n            }\n          }\n        } else if (isThunk(vNode)) {\n          thunks(vNode, null, patch, index);\n        }\n      } // Create a sub-patch for thunks\n\n\n      function thunks(a, b, patch, index) {\n        var nodes = handleThunk(a, b);\n        var thunkPatch = diff(nodes.a, nodes.b);\n\n        if (hasPatches(thunkPatch)) {\n          patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch);\n        }\n      }\n\n      function hasPatches(patch) {\n        for (var index in patch) {\n          if (index !== \"a\") {\n            return true;\n          }\n        }\n\n        return false;\n      } // Execute hooks when two nodes are identical\n\n\n      function unhook(vNode, patch, index) {\n        if (isVNode(vNode)) {\n          if (vNode.hooks) {\n            patch[index] = appendPatch(patch[index], new VPatch(VPatch.PROPS, vNode, undefinedKeys(vNode.hooks)));\n          }\n\n          if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children;\n            var len = children.length;\n\n            for (var i = 0; i < len; i++) {\n              var child = children[i];\n              index += 1;\n              unhook(child, patch, index);\n\n              if (isVNode(child) && child.count) {\n                index += child.count;\n              }\n            }\n          }\n        } else if (isThunk(vNode)) {\n          thunks(vNode, null, patch, index);\n        }\n      }\n\n      function undefinedKeys(obj) {\n        var result = {};\n\n        for (var key in obj) {\n          result[key] = undefined;\n        }\n\n        return result;\n      } // List diff, naive left to right reordering\n\n\n      function reorder(aChildren, bChildren) {\n        // O(M) time, O(M) memory\n        var bChildIndex = keyIndex(bChildren);\n        var bKeys = bChildIndex.keys;\n        var bFree = bChildIndex.free;\n\n        if (bFree.length === bChildren.length) {\n          return {\n            children: bChildren,\n            moves: null\n          };\n        } // O(N) time, O(N) memory\n\n\n        var aChildIndex = keyIndex(aChildren);\n        var aKeys = aChildIndex.keys;\n        var aFree = aChildIndex.free;\n\n        if (aFree.length === aChildren.length) {\n          return {\n            children: bChildren,\n            moves: null\n          };\n        } // O(MAX(N, M)) memory\n\n\n        var newChildren = [];\n        var freeIndex = 0;\n        var freeCount = bFree.length;\n        var deletedItems = 0; // Iterate through a and match a node in b\n        // O(N) time,\n\n        for (var i = 0; i < aChildren.length; i++) {\n          var aItem = aChildren[i];\n          var itemIndex;\n\n          if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n              // Match up the old keys\n              itemIndex = bKeys[aItem.key];\n              newChildren.push(bChildren[itemIndex]);\n            } else {\n              // Remove old keyed items\n              itemIndex = i - deletedItems++;\n              newChildren.push(null);\n            }\n          } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n              itemIndex = bFree[freeIndex++];\n              newChildren.push(bChildren[itemIndex]);\n            } else {\n              // There are no free items in b to match with\n              // the free items in a, so the extra free nodes\n              // are deleted.\n              itemIndex = i - deletedItems++;\n              newChildren.push(null);\n            }\n          }\n        }\n\n        var lastFreeIndex = freeIndex >= bFree.length ? bChildren.length : bFree[freeIndex]; // Iterate through b and append any new keys\n        // O(M) time\n\n        for (var j = 0; j < bChildren.length; j++) {\n          var newItem = bChildren[j];\n\n          if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n              // Add any new keyed items\n              // We are adding new items to the end and then sorting them\n              // in place. In future we should insert new items in place.\n              newChildren.push(newItem);\n            }\n          } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem);\n          }\n        }\n\n        var simulate = newChildren.slice();\n        var simulateIndex = 0;\n        var removes = [];\n        var inserts = [];\n        var simulateItem;\n\n        for (var k = 0; k < bChildren.length;) {\n          var wantedItem = bChildren[k];\n          simulateItem = simulate[simulateIndex]; // remove items\n\n          while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null));\n            simulateItem = simulate[simulateIndex];\n          }\n\n          if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n              if (simulateItem && simulateItem.key) {\n                // if an insert doesn't put this key in place, it needs to move\n                if (bKeys[simulateItem.key] !== k + 1) {\n                  removes.push(remove(simulate, simulateIndex, simulateItem.key));\n                  simulateItem = simulate[simulateIndex]; // if the remove didn't put the wanted item in place, we need to insert it\n\n                  if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                    inserts.push({\n                      key: wantedItem.key,\n                      to: k\n                    });\n                  } // items are matching, so skip ahead\n                  else {\n                      simulateIndex++;\n                    }\n                } else {\n                  inserts.push({\n                    key: wantedItem.key,\n                    to: k\n                  });\n                }\n              } else {\n                inserts.push({\n                  key: wantedItem.key,\n                  to: k\n                });\n              }\n\n              k++;\n            } // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key));\n              }\n          } else {\n            simulateIndex++;\n            k++;\n          }\n        } // remove all the remaining nodes from simulate\n\n\n        while (simulateIndex < simulate.length) {\n          simulateItem = simulate[simulateIndex];\n          removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key));\n        } // If the only moves we have are deletes then we can just\n        // let the delete patch remove these items.\n\n\n        if (removes.length === deletedItems && !inserts.length) {\n          return {\n            children: newChildren,\n            moves: null\n          };\n        }\n\n        return {\n          children: newChildren,\n          moves: {\n            removes: removes,\n            inserts: inserts\n          }\n        };\n      }\n\n      function remove(arr, index, key) {\n        arr.splice(index, 1);\n        return {\n          from: index,\n          key: key\n        };\n      }\n\n      function keyIndex(children) {\n        var keys = {};\n        var free = [];\n        var length = children.length;\n\n        for (var i = 0; i < length; i++) {\n          var child = children[i];\n\n          if (child.key) {\n            keys[child.key] = i;\n          } else {\n            free.push(i);\n          }\n        }\n\n        return {\n          keys: keys,\n          // A hash of key name to index\n          free: free // An array of unkeyed item indices\n\n        };\n      }\n\n      function appendPatch(apply, patch) {\n        if (apply) {\n          if (isArray(apply)) {\n            apply.push(patch);\n          } else {\n            apply = [apply, patch];\n          }\n\n          return apply;\n        } else {\n          return patch;\n        }\n      }\n    }, {\n      \"../vnode/handle-thunk\": 101,\n      \"../vnode/is-thunk\": 102,\n      \"../vnode/is-vnode\": 104,\n      \"../vnode/is-vtext\": 105,\n      \"../vnode/is-widget\": 106,\n      \"../vnode/vpatch\": 109,\n      \"./diff-props\": 111,\n      \"x-is-array\": 86\n    }],\n    113: [function (require, module, exports) {\n      var Bezier = require('./bezier');\n\n      var Vector = require('./vector');\n\n      var Utils = require('./utils');\n\n      var Anchor = function Anchor() {};\n\n      Anchor.prototype = {\n        type: \"anchor\",\n        add: function add(vec) {\n          var a = this.copy();\n          if (a.vec1) a.vec1 = a.vec1.add(vec);\n          if (a.vec2) a.vec2 = a.vec2.add(vec);\n          if (a.vec3) a.vec3 = a.vec3.add(vec);\n          return a;\n        },\n        sub: function sub(vec) {\n          var a = this.copy();\n          if (a.vec1) a.vec1 = a.vec1.sub(vec);\n          if (a.vec2) a.vec2 = a.vec2.sub(vec);\n          if (a.vec3) a.vec3 = a.vec3.sub(vec);\n          return a;\n        },\n        multiply: function multiply(scalar) {\n          var a = this.copy();\n          if (a.vec1) a.vec1 = a.vec1.multiply(scalar);\n          if (a.vec2) a.vec2 = a.vec2.multiply(scalar);\n          if (a.vec3) a.vec3 = a.vec3.multiply(scalar);\n          return a;\n        },\n        copy: function copy() {\n          var a = new Anchor();\n          a.command = this.command;\n          if (this.vec1) a.vec1 = this.vec1.copy();\n          if (this.vec2) a.vec2 = this.vec2.copy();\n          if (this.vec3) a.vec3 = this.vec3.copy();\n          return a;\n        },\n        setMove: function setMove(x, y) {\n          this.command = 'move';\n\n          if (x instanceof Vector) {\n            this.vec1 = x;\n          } else {\n            this.vec1 = new Vector(x, y);\n          }\n\n          return this;\n        },\n        setLine: function setLine(x, y) {\n          this.command = 'line';\n\n          if (x instanceof Vector) {\n            this.vec1 = x;\n          } else {\n            this.vec1 = new Vector(x, y);\n          }\n\n          return this;\n        },\n        setCurve: function setCurve(a, b, c, d, e, f) {\n          var args = Utils.expandVectorArguments(arguments);\n\n          this._setCurveImpl.apply(this, args);\n\n          return this;\n        },\n        _setCurveImpl: function _setCurveImpl(a, b, c, d, e, f) {\n          // cubic bezier with two control points\n          if (typeof f !== 'undefined') {\n            this.command = 'cubic';\n            this.vec1 = new Vector(a, b);\n            this.vec2 = new Vector(c, d);\n            this.vec3 = new Vector(e, f);\n          } // quad bezier with one control point\n          else {\n              this.command = 'quad';\n              this.vec1 = new Vector(a, b);\n              this.vec2 = new Vector(c, d);\n            }\n        },\n        setClose: function setClose() {\n          this.command = 'close';\n          return this;\n        },\n        length: function length() {\n          if (this.command == 'move') {\n            return 0;\n          } else if (this.command == 'line') {\n            return this.vec1.length();\n          } else if (this.command == 'quad') {\n            return new Bezier(0, 0, this.vec1.x, this.vec1.y, this.vec2.x, this.vec2.y).length();\n          } else if (this.command == 'cubic') {\n            return new Bezier(0, 0, this.vec1.x, this.vec1.y, this.vec2.x, this.vec2.y, this.vec3.x, this.vec3.y).length();\n          } else {\n            throw new Error(\"Cannot compute length for this type of anchor\");\n          }\n        },\n        vectorAt: function vectorAt(scalar) {\n          if (scalar > 1) scalar = 1;\n          if (scalar < 0) scalar = 0;\n          var ax, bx, cx;\n          var ay, by, cy;\n          var tSquared, tDoubled, tCubed;\n          var dx, dy;\n\n          if (this.command == 'line') {\n            return new Vector(this.vec1.x, this.vec1.y).multiply(scalar);\n          } else if (this.command == 'quad') {\n            return new Bezier(0, 0, this.vec1.x, this.vec1.y, this.vec2.x, this.vec2.y).get(scalar);\n          } else if (this.command == 'cubic') {\n            return new Bezier(0, 0, this.vec1.x, this.vec1.y, this.vec2.x, this.vec2.y, this.vec3.x, this.vec3.y).get(scalar);\n          } else {\n            throw new Error(\"Cannot compute vectorAt for this type of anchor\");\n          }\n        }\n      };\n      module.exports = Anchor;\n    }, {\n      \"./bezier\": 114,\n      \"./utils\": 134,\n      \"./vector\": 135\n    }],\n    114: [function (require, module, exports) {\n      // This code was extracted from Bezier.js\n      // A javascript Bezier curve library by Pomax.\n      // Based on http://pomax.github.io/bezierinfo\n      // http://pomax.github.io/bezierjs/\n      (function () {\n        \"use strict\"; // Math functions. I hate the Math namespace with a passion.\n\n        var abs = Math.abs,\n            min = Math.min,\n            max = Math.max,\n            cos = Math.cos,\n            sin = Math.sin,\n            acos = Math.acos,\n            asin = Math.asin,\n            atan2 = Math.atan2,\n            sqrt = Math.sqrt,\n            // cube root function yielding real roots\n        crt = function crt(v) {\n          if (v < 0) return -Math.pow(-v, 1 / 3);\n          return Math.pow(v, 1 / 3);\n        },\n            pi = Math.PI,\n            tau = 2 * pi,\n            quart = pi / 2; // a zero coordinate, which is surprisingly useful\n\n\n        var ZERO = {\n          x: 0,\n          y: 0,\n          z: 0\n        }; // Bezier utility functions\n\n        var utils = {\n          // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n          Tvalues: [-0.0640568928626056260850430826247450385909, 0.0640568928626056260850430826247450385909, -0.1911188674736163091586398207570696318404, 0.1911188674736163091586398207570696318404, -0.3150426796961633743867932913198102407864, 0.3150426796961633743867932913198102407864, -0.4337935076260451384870842319133497124524, 0.4337935076260451384870842319133497124524, -0.5454214713888395356583756172183723700107, 0.5454214713888395356583756172183723700107, -0.6480936519369755692524957869107476266696, 0.6480936519369755692524957869107476266696, -0.7401241915785543642438281030999784255232, 0.7401241915785543642438281030999784255232, -0.8200019859739029219539498726697452080761, 0.8200019859739029219539498726697452080761, -0.8864155270044010342131543419821967550873, 0.8864155270044010342131543419821967550873, -0.9382745520027327585236490017087214496548, 0.9382745520027327585236490017087214496548, -0.9747285559713094981983919930081690617411, 0.9747285559713094981983919930081690617411, -0.9951872199970213601799974097007368118745, 0.9951872199970213601799974097007368118745],\n          // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n          Cvalues: [0.1279381953467521569740561652246953718517, 0.1279381953467521569740561652246953718517, 0.1258374563468282961213753825111836887264, 0.1258374563468282961213753825111836887264, 0.1216704729278033912044631534762624256070, 0.1216704729278033912044631534762624256070, 0.1155056680537256013533444839067835598622, 0.1155056680537256013533444839067835598622, 0.1074442701159656347825773424466062227946, 0.1074442701159656347825773424466062227946, 0.0976186521041138882698806644642471544279, 0.0976186521041138882698806644642471544279, 0.0861901615319532759171852029837426671850, 0.0861901615319532759171852029837426671850, 0.0733464814110803057340336152531165181193, 0.0733464814110803057340336152531165181193, 0.0592985849154367807463677585001085845412, 0.0592985849154367807463677585001085845412, 0.0442774388174198061686027482113382288593, 0.0442774388174198061686027482113382288593, 0.0285313886289336631813078159518782864491, 0.0285313886289336631813078159518782864491, 0.0123412297999871995468056670700372915759, 0.0123412297999871995468056670700372915759],\n          arcfn: function arcfn(t, derivativeFn) {\n            var d = derivativeFn(t);\n            var l = d.x * d.x + d.y * d.y;\n\n            if (typeof d.z !== \"undefined\") {\n              l += d.z * d.z;\n            }\n\n            return sqrt(l);\n          },\n          length: function length(derivativeFn) {\n            var z = 0.5,\n                sum = 0,\n                len = this.Tvalues.length,\n                i,\n                t;\n\n            for (i = 0; i < len; i++) {\n              t = z * this.Tvalues[i] + z;\n              sum += this.Cvalues[i] * this.arcfn(t, derivativeFn);\n            }\n\n            return z * sum;\n          },\n          angle: function angle(o, v1, v2) {\n            var dx1 = v1.x - o.x,\n                dy1 = v1.y - o.y,\n                dx2 = v2.x - o.x,\n                dy2 = v2.y - o.y,\n                cross = dx1 * dy2 - dy1 * dx2,\n                m1 = sqrt(dx1 * dx1 + dy1 * dy1),\n                m2 = sqrt(dx2 * dx2 + dy2 * dy2),\n                dot;\n            dx1 /= m1;\n            dy1 /= m1;\n            dx2 /= m2;\n            dy2 /= m2;\n            dot = dx1 * dx2 + dy1 * dy2;\n            return atan2(cross, dot);\n          },\n          dist: function dist(p1, p2) {\n            var dx = p1.x - p2.x,\n                dy = p1.y - p2.y;\n            return sqrt(dx * dx + dy * dy);\n          },\n          align: function align(points, line) {\n            var tx = line.p1.x,\n                ty = line.p1.y,\n                a = -atan2(line.p2.y - ty, line.p2.x - tx),\n                d = function d(v) {\n              return {\n                x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n                y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)\n              };\n            };\n\n            return points.map(d);\n          }\n        };\n        /**\n         * Bezier curve constructor. The constructor argument can be one of three things:\n         *\n         * 1. array/4 of {x:..., y:..., z:...}, z optional\n         * 2. numerical array/8 ordered x1,y1,x2,y2,x3,y3,x4,y4\n         * 3. numerical array/12 ordered x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4\n         *\n         */\n\n        var Bezier = function Bezier(coords) {\n          var args = coords && coords.forEach ? coords : arguments;\n\n          if (_typeof(args[0]) === \"object\") {\n            args = [];\n\n            for (var i = 0; i < coords.length; i++) {\n              ['x', 'y', 'z'].forEach(function (d) {\n                if (typeof coords[i][d] !== \"undefined\") {\n                  args.push(coords[i][d]);\n                }\n              });\n            }\n          }\n\n          var len = args.length;\n\n          if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n            console.log(coords);\n            throw new Error(\"This Bezier curve library only supports quadratic and cubic curves (in 2d and 3d)\");\n          }\n\n          var _3d = len === 9 || len === 12;\n\n          this._3d = _3d;\n          var points = [];\n\n          for (var idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n            var point = {\n              x: args[idx],\n              y: args[idx + 1]\n            };\n\n            if (_3d) {\n              point.z = args[idx + 2];\n            }\n\n            ;\n            points.push(point);\n          }\n\n          this.order = points.length - 1;\n          this.points = points;\n          var dims = ['x', 'y'];\n          if (_3d) dims.push('z');\n          this.dims = dims;\n          this.dimlen = dims.length;\n\n          (function (curve) {\n            var a = utils.align(points, {\n              p1: points[0],\n              p2: points[curve.order]\n            });\n\n            for (var i = 0; i < a.length; i++) {\n              if (abs(a[i].y) > 0.0001) {\n                curve._linear = false;\n                return;\n              }\n            }\n\n            curve._linear = true;\n          })(this);\n\n          this._t1 = 0;\n          this._t2 = 1;\n          this.update();\n        };\n\n        Bezier.utils = utils;\n        Bezier.prototype = {\n          update: function update() {\n            // one-time compute derivative coordinates\n            this.dpoints = [];\n\n            for (var p = this.points, d = p.length, c = d - 1; d > 1; d--, c--) {\n              var list = [];\n\n              for (var j = 0, dpt; j < c; j++) {\n                dpt = {\n                  x: c * (p[j + 1].x - p[j].x),\n                  y: c * (p[j + 1].y - p[j].y)\n                };\n\n                if (this._3d) {\n                  dpt.z = c * (p[j + 1].z - p[j].z);\n                }\n\n                list.push(dpt);\n              }\n\n              this.dpoints.push(list);\n              p = list;\n            }\n\n            ;\n            this.computedirection();\n          },\n          computedirection: function computedirection() {\n            var points = this.points;\n            var angle = utils.angle(points[0], points[this.order], points[1]);\n            this.clockwise = angle > 0;\n          },\n          length: function length() {\n            return utils.length(this.derivative.bind(this));\n          },\n          get: function get(t) {\n            return this.compute(t);\n          },\n          compute: function compute(t) {\n            // shortcuts\n            if (t === 0) {\n              return this.points[0];\n            }\n\n            if (t === 1) {\n              return this.points[this.order];\n            } // plain computation\n\n\n            var mt = 1 - t,\n                mt2 = mt * mt,\n                t2 = t * t,\n                a,\n                b,\n                c,\n                d = 0,\n                p = this.points;\n\n            if (this.order === 2) {\n              p = [p[0], p[1], p[2], ZERO];\n              a = mt2;\n              b = mt * t * 2;\n              c = t2;\n            }\n\n            if (this.order === 3) {\n              a = mt2 * mt;\n              b = mt2 * t * 3;\n              c = mt * t2 * 3;\n              d = t * t2;\n            }\n\n            var ret = {\n              x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n              y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y\n            };\n\n            if (this._3d) {\n              ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n            }\n\n            return ret;\n          },\n          derivative: function derivative(t) {\n            var mt = 1 - t,\n                a,\n                b,\n                c = 0,\n                p = this.dpoints[0];\n\n            if (this.order === 2) {\n              p = [p[0], p[1], ZERO];\n              a = mt;\n              b = t;\n            }\n\n            if (this.order === 3) {\n              a = mt * mt;\n              b = mt * t * 2;\n              c = t * t;\n            }\n\n            var ret = {\n              x: a * p[0].x + b * p[1].x + c * p[2].x,\n              y: a * p[0].y + b * p[1].y + c * p[2].y\n            };\n\n            if (this._3d) {\n              ret.z = a * p[0].z + b * p[1].z + c * p[2].z;\n            }\n\n            return ret;\n          }\n        };\n        module.exports = Bezier;\n      })();\n    }, {}],\n    115: [function (require, module, exports) {\n      // This code was adapted from the brilliant color lib by MoOx\n      // See more here: https://github.com/MoOx/color\n      var colorConvert = require('color-convert');\n\n      var Color = function Color(a, b, c, d, e) {\n        this.values = {\n          rgb: [0, 0, 0],\n          hsl: [0, 0, 0],\n          hsv: [0, 0, 0],\n          hwb: [0, 0, 0],\n          cmyk: [0, 0, 0, 0],\n          alpha: 1 // COLOR\n\n        };\n\n        if (a instanceof Color) {\n          return a;\n        } // HSB\n        else if (a == 'hsv') {\n            this.setValues('hsv', {\n              h: b % 360,\n              s: c,\n              v: d\n            });\n            if (e) this.setValues('alpha', e);\n          } // HEX\n          else if (typeof a === 'string') {\n              // convert HEX to RGB\n              var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);\n\n              if (result) {\n                this.setValues('rgb', [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]);\n              } else {\n                throw new Error(\"Unable to parse color from string \\\"\" + a + \"\\\"\");\n              }\n\n              if (b) this.setValues('alpha', b);\n            } // GRAYSCALE\n            else if (typeof c === 'undefined') {\n                this.setValues('rgb', {\n                  r: a,\n                  g: a,\n                  b: a\n                });\n                if (b) this.setValues('alpha', b);\n              } // RGB\n              else if (typeof a !== 'undefined') {\n                  this.setValues('rgb', {\n                    r: a,\n                    g: b,\n                    b: c\n                  });\n                  if (d) this.setValues('alpha', d);\n                }\n      };\n\n      Color.prototype = {\n        type: \"color\",\n        rgb: function rgb(vals) {\n          return this.setSpace(\"rgb\", arguments);\n        },\n        hsl: function hsl(vals) {\n          return this.setSpace(\"hsl\", arguments);\n        },\n        hsv: function hsv(vals) {\n          return this.setSpace(\"hsv\", arguments);\n        },\n        hwb: function hwb(vals) {\n          return this.setSpace(\"hwb\", arguments);\n        },\n        cmyk: function cmyk(vals) {\n          return this.setSpace(\"cmyk\", arguments);\n        },\n        rgbArray: function rgbArray() {\n          return this.values.rgb;\n        },\n        hslArray: function hslArray() {\n          return this.values.hsl;\n        },\n        hsvArray: function hsvArray() {\n          return this.values.hsv;\n        },\n        hwbArray: function hwbArray() {\n          if (this.values.alpha !== 1) {\n            return this.values.hwb.concat([this.values.alpha]);\n          }\n\n          return this.values.hwb;\n        },\n        cmykArray: function cmykArray() {\n          return this.values.cmyk;\n        },\n        rgbaArray: function rgbaArray() {\n          var rgb = this.values.rgb;\n          return rgb.concat([this.values.alpha]);\n        },\n        hslaArray: function hslaArray() {\n          var hsl = this.values.hsl;\n          return hsl.concat([this.values.alpha]);\n        },\n        alpha: function alpha(val) {\n          if (val === undefined) {\n            return this.values.alpha;\n          }\n\n          this.setValues(\"alpha\", val);\n          return this;\n        },\n        red: function red(val) {\n          return this.setChannel(\"rgb\", 0, val);\n        },\n        green: function green(val) {\n          return this.setChannel(\"rgb\", 1, val);\n        },\n        blue: function blue(val) {\n          return this.setChannel(\"rgb\", 2, val);\n        },\n        hue: function hue(val) {\n          return this.setChannel(\"hsl\", 0, val);\n        },\n        saturation: function saturation(val) {\n          return this.setChannel(\"hsl\", 1, val);\n        },\n        lightness: function lightness(val) {\n          return this.setChannel(\"hsl\", 2, val);\n        },\n        saturationv: function saturationv(val) {\n          return this.setChannel(\"hsv\", 1, val);\n        },\n        whiteness: function whiteness(val) {\n          return this.setChannel(\"hwb\", 1, val);\n        },\n        blackness: function blackness(val) {\n          return this.setChannel(\"hwb\", 2, val);\n        },\n        value: function value(val) {\n          return this.setChannel(\"hsv\", 2, val);\n        },\n        cyan: function cyan(val) {\n          return this.setChannel(\"cmyk\", 0, val);\n        },\n        magenta: function magenta(val) {\n          return this.setChannel(\"cmyk\", 1, val);\n        },\n        yellow: function yellow(val) {\n          return this.setChannel(\"cmyk\", 2, val);\n        },\n        black: function black(val) {\n          return this.setChannel(\"cmyk\", 3, val);\n        },\n        luminosity: function luminosity() {\n          // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n          var rgb = this.values.rgb;\n          var lum = [];\n\n          for (var i = 0; i < rgb.length; i++) {\n            var chan = rgb[i] / 255;\n            lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n          }\n\n          return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n        },\n        contrast: function contrast(color2) {\n          // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n          var lum1 = this.luminosity();\n          var lum2 = color2.luminosity();\n\n          if (lum1 > lum2) {\n            return (lum1 + 0.05) / (lum2 + 0.05);\n          }\n\n          ;\n          return (lum2 + 0.05) / (lum1 + 0.05);\n        },\n        level: function level(color2) {\n          var contrastRatio = this.contrast(color2);\n          return contrastRatio >= 7.1 ? 'AAA' : contrastRatio >= 4.5 ? 'AA' : '';\n        },\n        dark: function dark() {\n          // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n          var rgb = this.values.rgb,\n              yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n          return yiq < 128;\n        },\n        light: function light() {\n          return !this.dark();\n        },\n        negate: function negate() {\n          var rgb = [];\n\n          for (var i = 0; i < 3; i++) {\n            rgb[i] = 255 - this.values.rgb[i];\n          }\n\n          this.setValues(\"rgb\", rgb);\n          return this;\n        },\n        lighten: function lighten(ratio) {\n          this.values.hsl[2] += this.values.hsl[2] * ratio;\n          this.setValues(\"hsl\", this.values.hsl);\n          return this;\n        },\n        darken: function darken(ratio) {\n          this.values.hsl[2] -= this.values.hsl[2] * ratio;\n          this.setValues(\"hsl\", this.values.hsl);\n          return this;\n        },\n        saturate: function saturate(ratio) {\n          this.values.hsl[1] += this.values.hsl[1] * ratio;\n          this.setValues(\"hsl\", this.values.hsl);\n          return this;\n        },\n        desaturate: function desaturate(ratio) {\n          this.values.hsl[1] -= this.values.hsl[1] * ratio;\n          this.setValues(\"hsl\", this.values.hsl);\n          return this;\n        },\n        whiten: function whiten(ratio) {\n          this.values.hwb[1] += this.values.hwb[1] * ratio;\n          this.setValues(\"hwb\", this.values.hwb);\n          return this;\n        },\n        blacken: function blacken(ratio) {\n          this.values.hwb[2] += this.values.hwb[2] * ratio;\n          this.setValues(\"hwb\", this.values.hwb);\n          return this;\n        },\n        greyscale: function greyscale() {\n          var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n          var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n          this.setValues(\"rgb\", [val, val, val]);\n          return this;\n        },\n        clearer: function clearer(ratio) {\n          this.setValues(\"alpha\", this.values.alpha - this.values.alpha * ratio);\n          return this;\n        },\n        opaquer: function opaquer(ratio) {\n          this.setValues(\"alpha\", this.values.alpha + this.values.alpha * ratio);\n          return this;\n        },\n        rotate: function rotate(degrees) {\n          var hue = this.values.hsl[0];\n          hue = (hue + degrees) % 360;\n          hue = hue < 0 ? 360 + hue : hue;\n          this.values.hsl[0] = hue;\n          this.setValues(\"hsl\", this.values.hsl);\n          return this;\n        },\n\n        /**\n         * Ported from sass implementation in C\n         * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n         */\n        mix: function mix(mixinColor, weight) {\n          var color1 = this;\n          var color2 = mixinColor;\n          var p = weight !== undefined ? weight : 0.5;\n          var w = 2 * p - 1;\n          var a = color1.alpha() - color2.alpha();\n          var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n          var w2 = 1 - w1;\n          return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n        },\n        toJSON: function toJSON() {\n          return this.rgb();\n        },\n        copy: function copy() {\n          return new Color().rgb(this.rgb());\n        },\n        getValues: function getValues(space) {\n          var vals = {};\n\n          for (var i = 0; i < space.length; i++) {\n            vals[space.charAt(i)] = this.values[space][i];\n          }\n\n          if (this.values.alpha != 1) {\n            vals[\"a\"] = this.values.alpha;\n          } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n          return vals;\n        },\n        setValues: function setValues(space, vals) {\n          var spaces = {\n            \"rgb\": [\"red\", \"green\", \"blue\"],\n            \"hsl\": [\"hue\", \"saturation\", \"lightness\"],\n            \"hsv\": [\"hue\", \"saturation\", \"value\"],\n            \"hwb\": [\"hue\", \"whiteness\", \"blackness\"],\n            \"cmyk\": [\"cyan\", \"magenta\", \"yellow\", \"black\"]\n          };\n          var maxes = {\n            \"rgb\": [255, 255, 255],\n            \"hsl\": [360, 100, 100],\n            \"hsv\": [360, 100, 100],\n            \"hwb\": [360, 100, 100],\n            \"cmyk\": [100, 100, 100, 100]\n          };\n          var alpha = 1;\n\n          if (space == \"alpha\") {\n            alpha = vals;\n          } else if (vals.length) {\n            // [10, 10, 10]\n            this.values[space] = vals.slice(0, space.length);\n            alpha = vals[space.length];\n          } else if (vals[space.charAt(0)] !== undefined) {\n            // {r: 10, g: 10, b: 10}\n            for (var i = 0; i < space.length; i++) {\n              this.values[space][i] = vals[space.charAt(i)];\n            }\n\n            alpha = vals.a;\n          } else if (vals[spaces[space][0]] !== undefined) {\n            // {red: 10, green: 10, blue: 10}\n            var chans = spaces[space];\n\n            for (var i = 0; i < space.length; i++) {\n              this.values[space][i] = vals[chans[i]];\n            }\n\n            alpha = vals.alpha;\n          }\n\n          this.values.alpha = Math.max(0, Math.min(1, alpha !== undefined ? alpha : this.values.alpha));\n\n          if (space == \"alpha\") {\n            return;\n          } // cap values of the space prior converting all values\n\n\n          for (var i = 0; i < space.length; i++) {\n            var capped = Math.max(0, Math.min(maxes[space][i], this.values[space][i]));\n            this.values[space][i] = Math.round(capped);\n          } // convert to all the other color spaces\n\n\n          for (var sname in spaces) {\n            if (sname != space) {\n              this.values[sname] = colorConvert[space][sname](this.values[space]);\n            } // cap values\n\n\n            for (var i = 0; i < sname.length; i++) {\n              var capped = Math.max(0, Math.min(maxes[sname][i], this.values[sname][i]));\n              this.values[sname][i] = Math.round(capped);\n            }\n          }\n\n          return true;\n        },\n        setSpace: function setSpace(space, args) {\n          var vals = args[0];\n\n          if (vals === undefined) {\n            // color.rgb()\n            return this.getValues(space);\n          } // color.rgb(10, 10, 10)\n\n\n          if (typeof vals == \"number\") {\n            vals = Array.prototype.slice.call(args);\n          }\n\n          this.setValues(space, vals);\n          return this;\n        },\n        setChannel: function setChannel(space, index, val) {\n          if (val === undefined) {\n            // color.red()\n            return this.values[space][index];\n          } // color.red(100)\n\n\n          this.values[space][index] = val;\n          this.setValues(space, this.values[space]);\n          return this;\n        } // Modules should be accessible through Color\n\n      };\n      Color.Convert = colorConvert;\n      module.exports = Color;\n    }, {\n      \"color-convert\": 3\n    }],\n    116: [function (require, module, exports) {\n      var Events = {\n        on: function on(name, callback) {\n          if (!this._events) this._events = {};\n          this._events[name] = this._events[name] || [];\n\n          this._events[name].push(callback);\n\n          return this;\n        },\n        off: function off(name, callback) {\n          if (this._events[name] && !callback) {\n            delete this._events[name];\n          } else if (this._events[name]) {\n            name = this._events[name];\n            var i = name.length;\n\n            while (i--) {\n              if (name[i] === callback) name.splice(i - 1, 1);\n            }\n          } else if (arguments.length === 0) {\n            this._events = {};\n          }\n\n          return this;\n        },\n        trigger: function trigger(name) {\n          if (this._events && this._events[name]) {\n            var theseEvents = this._events[name];\n            var args = arguments.length > 1 ? [arguments[1]] : [];\n            var i = theseEvents.length;\n\n            while (i--) {\n              theseEvents[i].apply(this, args);\n            }\n          }\n\n          return this;\n        }\n      };\n      module.exports = Events;\n    }, {}],\n    117: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var defaults = require(\"lodash/object/defaults\");\n\n      var Moveable = require(\"./mixins/moveable\");\n\n      var Group = require('./group');\n\n      var Grid = function Grid(options) {\n        this.moveable();\n        this.modules = [];\n        var req = defaults(options || {}, {\n          x: 0,\n          y: 0,\n          columns: 10,\n          rows: 1,\n          gutterWidth: 0,\n          gutterHeight: 0,\n          moduleWidth: 50,\n          moduleHeight: 500\n        }); // if gutter is set, override gutterWidth and gutterHeight\n\n        if (typeof req.gutter !== 'undefined') {\n          req.gutterWidth = req.gutter;\n          req.gutterHeight = req.gutter;\n        } // if width is set, override moduleWidth\n\n\n        if (typeof req.width !== 'undefined') {\n          req.moduleWidth = (req.width - (req.columns - 1) * req.gutterWidth) / req.columns;\n        } else {\n          req.width = req.moduleWidth * req.columns + req.gutterWidth * (req.columns - 1);\n        } // if height is set, override moduleWidth\n\n\n        if (typeof req.height !== 'undefined') {\n          req.moduleHeight = (req.height - (req.rows - 1) * req.gutterHeight) / req.rows;\n        } else {\n          req.height = req.moduleHeight * req.rows + req.gutterHeight * (req.rows - 1);\n        }\n\n        assign(this.vars, req);\n        this.computeGrid();\n      };\n\n      Grid.prototype = {\n        add: function add(child, column, row) {\n          if (!column) column = 1;\n          if (!row) row = 1; // index is x + (y * width)\n\n          var index = column - 1 + (row - 1) * this.vars.columns;\n          if (this.modules[index]) this.modules[index].add(child);else throw new Error(\"Column or row does not exist\");\n        },\n        getModule: function getModule(column, row) {\n          // index is x + (y * width)\n          var index = column - 1 + (row - 1) * this.vars.columns;\n          if (this.modules[index]) return this.modules[index];else return undefined;\n        },\n        computeGrid: function computeGrid() {\n          this.modules = [];\n\n          for (var y = 0; y < this.vars.rows; y++) {\n            for (var x = 0; x < this.vars.columns; x++) {\n              var groupX = x * this.vars.moduleWidth + x * this.vars.gutterWidth;\n              var groupY = y * this.vars.moduleHeight + y * this.vars.gutterHeight;\n              this.modules.push(new Group(groupX, groupY));\n            }\n          }\n        }\n      };\n      assign(Grid.prototype, Moveable, {\n        type: \"grid\"\n      });\n      module.exports = Grid;\n    }, {\n      \"./group\": 118,\n      \"./mixins/moveable\": 119,\n      \"lodash/object/assign\": 70,\n      \"lodash/object/defaults\": 71\n    }],\n    118: [function (require, module, exports) {\n      var without = require(\"lodash/array/without\");\n\n      var assign = require(\"lodash/object/assign\");\n\n      var each = require(\"lodash/collection/each\");\n\n      var Moveable = require(\"./mixins/moveable\");\n\n      var VectorsAcceptable = require(\"./mixins/vectors_acceptable\");\n\n      var Utils = require('./utils');\n\n      var Vector = require('./vector');\n\n      var Group = function Group(x, y) {\n        this.moveable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Group.prototype = {\n        init: function init(x, y) {\n          this.children = [];\n          if (typeof x !== 'undefined') this.vars.x = x;\n          if (typeof y !== 'undefined') this.vars.y = y;\n        },\n        add: function add(child) {\n          if (child.parent) child.parent.remove(child);\n          this.children.push(child);\n          child.parent = this;\n        },\n        remove: function remove(child) {\n          this.children = without(this.children, child);\n          child.parent = false;\n        },\n        copy: function copy(parent) {\n          var copy = new Group();\n\n          for (var i = 0; i < this.children.length; i++) {\n            this.children[i].copy(copy);\n          }\n\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          each(this.children, function (child) {\n            child.vars.x *= scalar;\n            child.vars.y *= scalar;\n            child.scale(scalar);\n          });\n          return this;\n        } // Should we figure out a better way to do mixins for ES6?\n\n      };\n      assign(Group.prototype, Moveable, VectorsAcceptable, {\n        type: \"group\"\n      });\n      module.exports = Group;\n    }, {\n      \"./mixins/moveable\": 119,\n      \"./mixins/vectors_acceptable\": 122,\n      \"./utils\": 134,\n      \"./vector\": 135,\n      \"lodash/array/without\": 6,\n      \"lodash/collection/each\": 7,\n      \"lodash/object/assign\": 70\n    }],\n    119: [function (require, module, exports) {\n      var Vector = require('../vector');\n\n      var Moveable = {\n        moveable: function moveable(copy) {\n          this.vars = this.vars || {};\n          this.vars.x = copy ? copy.vars.x : 0;\n          this.vars.y = copy ? copy.vars.y : 0;\n          this.vars.rotation = copy ? copy.vars.rotation : 0;\n          this.vars.rotationX = copy ? copy.vars.rotationX : 0;\n          this.vars.rotationY = copy ? copy.vars.rotationY : 0;\n        },\n        move: function move(x, y, relative) {\n          this.vars.x = relative ? this.vars.x + x : x;\n          this.vars.y = relative ? this.vars.y + y : y;\n          return this;\n        },\n        rotate: function rotate(deg, x, y, relative) {\n          this.vars.rotation = deg;\n\n          if (x || y) {\n            this.vars.rotationX = x || 0;\n            this.vars.rotationY = y || 0;\n          }\n\n          if (relative) {\n            this.vars.rotationX += this.vars.x;\n            this.vars.rotationY += this.vars.y;\n          }\n\n          return this;\n        },\n        addParent: function addParent(group) {\n          group.add(this);\n          return this;\n        },\n        removeParent: function removeParent() {\n          if (this.parent) this.parent.remove(this);\n          return this;\n        },\n        stagepos: function stagepos() {\n          var vec = new Vector(this.vars.x, this.vars.y);\n\n          if (this.parent) {\n            vec = vec.add(this.parent.stagepos());\n          }\n\n          return vec;\n        }\n      };\n      module.exports = Moveable;\n    }, {\n      \"../vector\": 135\n    }],\n    120: [function (require, module, exports) {\n      var Sizeable = {\n        sizeable: function sizeable(copy) {\n          this.vars = this.vars || {};\n          this.vars.width = copy ? copy.vars.width : 0;\n          this.vars.height = copy ? copy.vars.height : 0;\n        },\n        scaleSizeable: function scaleSizeable(scalar) {\n          this.vars.width *= scalar;\n          this.vars.height *= scalar;\n        }\n      };\n      module.exports = Sizeable;\n    }, {}],\n    121: [function (require, module, exports) {\n      var Color = require('../color');\n\n      var Styleable = {\n        styleable: function styleable(copy) {\n          this.vars = this.vars || {};\n          this.vars.fill = new Color(128);\n          this.vars.stroke = new Color(0);\n\n          if (copy) {\n            if (copy.vars.fill === false) this.vars.fill = false;else if (copy.vars.fill) this.vars.fill = copy.vars.fill.copy();\n            if (copy.vars.stroke === false) this.vars.stroke = false;else if (copy.vars.stroke) this.vars.stroke = copy.vars.stroke.copy();\n            if (copy.vars.strokeWidth) this.vars.strokeWidth = copy.vars.strokeWidth;\n            if (copy.vars.strokeCap) this.vars.strokeCap = copy.vars.strokeCap;\n            if (copy.vars.strokeJoin) this.vars.strokeJoin = copy.vars.strokeJoin;\n            if (copy.vars.strokeMiterlimit) this.vars.strokeMiterlimit = copy.vars.strokeMiterlimit;\n            if (copy.vars.strokeDash) this.vars.strokeDash = copy.vars.strokeDash;\n            if (copy.vars.strokeDashOffset) this.vars.strokeDashOffset = copy.vars.strokeDashOffset;\n          }\n        },\n        fill: function fill(a, b, c, d, e) {\n          if (a === false) this.vars.fill = false;else this.vars.fill = new Color(a, b, c, d, e);\n          return this;\n        },\n        stroke: function stroke(a, b, c, d, e) {\n          if (a === false) this.vars.stroke = false;else this.vars.stroke = new Color(a, b, c, d, e);\n          return this;\n        },\n        strokeWidth: function strokeWidth(val) {\n          this.vars.strokeWidth = val;\n          return this;\n        },\n        strokeCap: function strokeCap(val) {\n          this.vars.strokeCap = val;\n          return this;\n        },\n        strokeJoin: function strokeJoin(val) {\n          this.vars.strokeJoin = val;\n          return this;\n        },\n        strokeMiterlimit: function strokeMiterlimit(val) {\n          this.vars.strokeMiterlimit = val;\n          return this;\n        },\n        strokeDash: function strokeDash(val) {\n          this.vars.strokeDash = val;\n          return this;\n        },\n        strokeDashOffset: function strokeDashOffset(val) {\n          this.vars.strokeDashOffset = val;\n          return this;\n        },\n        scaleStyleable: function scaleStyleable(scalar) {\n          if (this.vars.strokeWidth) {\n            this.vars.strokeWidth *= scalar;\n          } else {\n            this.vars.strokeWidth = scalar;\n          }\n        }\n      };\n      module.exports = Styleable;\n    }, {\n      \"../color\": 115\n    }],\n    122: [function (require, module, exports) {\n      var Utils = require('../utils');\n\n      var VectorsAcceptable = {\n        vectorsAcceptable: function vectorsAcceptable(argsObject) {\n          var args = Utils.expandVectorArguments(argsObject);\n\n          if (this.init) {\n            this.init.apply(this, args);\n          } else {\n            throw new Error(\"init() function does not exist for initializing from vectors\");\n          }\n        }\n      };\n      module.exports = VectorsAcceptable;\n    }, {\n      \"../utils\": 134\n    }],\n    123: [function (require, module, exports) {\n      var flatten = require(\"lodash/array/flatten\");\n\n      var each = require(\"lodash/collection/each\");\n\n      var map = require(\"lodash/collection/map\");\n\n      var Circle = require('./shapes/circle');\n\n      var Rectangle = require('./shapes/rectangle');\n\n      var Line = require('./shapes/line');\n\n      var h = require('virtual-dom/h');\n\n      var diff = require('virtual-dom/diff');\n\n      var patch = require('virtual-dom/patch');\n\n      var createElement = require('virtual-dom/create-element');\n\n      var svg = require('virtual-dom/virtual-hyperscript/svg');\n\n      var Render = function Render(params) {\n        this.params = params;\n        this.tree = svg('svg', {\n          xmlns: 'http://www.w3.org/2000/svg',\n          'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n          width: this.s(params.width),\n          height: this.s(params.height)\n        });\n        this.el = createElement(this.tree);\n      };\n\n      Render.prototype = {\n        render: function render(stage, opts) {\n          var newTree = svg('svg', {\n            width: this.s(this.params.width),\n            height: this.s(this.params.height)\n          }, [this.objectsToSVG(stage.children, opts)]);\n          var diffTree = diff(this.tree, newTree);\n          this.el = patch(this.el, diffTree);\n          this.tree = newTree;\n        },\n        // Shape converters\n        // --------------------------------------------------\n        objectToSVG: function objectToSVG(object, opts) {\n          if (this[object.type + \"ToSVG\"]) return this[object.type + \"ToSVG\"](object, opts);else console.error(\"Rune.Render: Object not recognized\", object);\n        },\n        objectsToSVG: function objectsToSVG(objects, opts) {\n          var newObjects = [];\n\n          for (var i = 0; i < objects.length; i++) {\n            newObjects.push(this.objectToSVG(objects[i], opts));\n          }\n\n          return flatten(newObjects, true);\n        },\n        rectangleToSVG: function rectangleToSVG(rect) {\n          var attr = {\n            x: this.s(rect.vars.x),\n            y: this.s(rect.vars.y),\n            width: this.s(rect.vars.width),\n            height: this.s(rect.vars.height)\n          };\n          if (rect.vars.rx) attr.rx = this.s(rect.vars.rx);\n          if (rect.vars.ry) attr.ry = this.s(rect.vars.ry);\n          this.transformAttribute(attr, rect);\n          this.styleableAttributes(rect, attr);\n          return svg('rect', attr);\n        },\n        ellipseToSVG: function ellipseToSVG(ellipse) {\n          var attr = {\n            cx: this.s(ellipse.vars.x),\n            cy: this.s(ellipse.vars.y),\n            rx: this.s(ellipse.vars.width / 2),\n            ry: this.s(ellipse.vars.height / 2)\n          };\n          this.transformAttribute(attr, ellipse);\n          this.styleableAttributes(ellipse, attr);\n          return svg('ellipse', attr);\n        },\n        circleToSVG: function circleToSVG(circle) {\n          var attr = {\n            cx: this.s(circle.vars.x),\n            cy: this.s(circle.vars.y),\n            r: this.s(circle.vars.radius)\n          };\n          this.transformAttribute(attr, circle);\n          this.styleableAttributes(circle, attr);\n          return svg('circle', attr);\n        },\n        lineToSVG: function lineToSVG(line) {\n          var attr = {\n            x1: this.s(line.vars.x),\n            y1: this.s(line.vars.y),\n            x2: this.s(line.vars.x2),\n            y2: this.s(line.vars.y2)\n          };\n          this.transformAttribute(attr, line);\n          this.styleableAttributes(line, attr);\n          return svg('line', attr);\n        },\n        triangleToSVG: function triangleToSVG(tri) {\n          var attr = {\n            points: '0 0 ' + tri.vars.x2 + ' ' + tri.vars.y2 + ' ' + tri.vars.x3 + ' ' + tri.vars.y3\n          };\n          this.transformAttribute(attr, tri);\n          this.styleableAttributes(tri, attr);\n          return svg('polygon', attr);\n        },\n        polygonToSVG: function polygonToSVG(polygon) {\n          var attr = {\n            points: map(polygon.vars.vectors, function (vec) {\n              return vec.x + \" \" + vec.y;\n            }).join(\" \")\n          };\n          this.transformAttribute(attr, polygon);\n          this.styleableAttributes(polygon, attr);\n          return svg('polygon', attr);\n        },\n        pathToSVG: function pathToSVG(path, opts) {\n          var attr = {};\n          this.dAttribute(path, attr);\n          this.transformAttribute(attr, path);\n          this.styleableAttributes(path, attr);\n          this.optionalAttributes(path, attr, {\n            \"fillRule\": \"fill-rule\"\n          });\n          var els = [svg('path', attr)];\n          if (opts && opts.debug) els = els.concat(this.debugPathToSVG(path));\n          return els;\n        },\n        textToSVG: function textToSVG(text, opts) {\n          var attr = {\n            x: this.s(text.vars.x),\n            y: this.s(text.vars.y)\n          };\n          this.transformAttribute(attr, text);\n          this.styleableAttributes(text, attr); // attributes that need specific handling\n\n          if (text.vars.textAlign) {\n            var translate = {\n              \"left\": \"start\",\n              \"center\": \"middle\",\n              \"right\": \"end\"\n            };\n            attr[\"text-anchor\"] = translate[text.vars.textAlign];\n          }\n\n          this.optionalAttributes(text, attr, {\n            \"fontFamily\": \"font-family\",\n            \"textAlign\": \"text-align\",\n            \"fontStyle\": \"font-style\",\n            \"fontWeight\": \"font-weight\",\n            \"fontSize\": \"font-size\",\n            \"letterSpacing\": \"letter-spacing\",\n            \"textDecoration\": \"text-decoration\"\n          });\n\n          if (text.vars.textAlign) {\n            var translate = {\n              \"left\": \"start\",\n              \"center\": \"middle\",\n              \"right\": \"end\"\n            };\n            attr[\"text-anchor\"] = translate[text.vars.textAlign];\n          }\n\n          return svg('text', attr, text.vars.text);\n        },\n        imageToSVG: function imageToSVG(img) {\n          var attr = {\n            \"xlink:href\": this.s(img.vars.url),\n            x: this.s(img.vars.x),\n            y: this.s(img.vars.y)\n          };\n          this.optionalAttributes(img, attr, {\n            \"width\": \"width\",\n            \"height\": \"height\"\n          });\n          this.transformAttribute(attr, img);\n          return svg('image', attr);\n        },\n        groupToSVG: function groupToSVG(group, opts) {\n          if (!group.children || group.children.length == 0) return;\n          var attr = {};\n          this.transformAttribute(attr, group);\n          return svg('g', attr, this.objectsToSVG(group.children, opts));\n        },\n        gridToSVG: function gridToSVG(grid, opts) {\n          var attr = {};\n          this.transformAttribute(attr, grid);\n          var groups = this.objectsToSVG(grid.modules);\n          if (opts && opts.debug) groups = groups.concat(this.debugGridToSVG(grid));\n          return svg('g', attr, flatten(groups, true));\n        },\n        // Multiple attributes\n        // --------------------------------------------------\n        optionalAttributes: function optionalAttributes(object, attr, keys) {\n          each(keys, function (attribute, variable) {\n            if (object.vars[variable]) {\n              attr[attribute] = this.s(object.vars[variable]);\n            }\n          }, this);\n        },\n        sizeableAttributes: function sizeableAttributes(object, attr) {\n          attr.width = this.s(object.vars.width);\n          attr.height = this.s(object.vars.height);\n        },\n        styleableAttributes: function styleableAttributes(object, attr) {\n          if (object.vars.fill === false) attr.fill = \"none\";else if (object.vars.fill) {\n            attr.fill = \"rgb(\" + object.vars.fill.values.rgb[0] + \", \" + object.vars.fill.values.rgb[1] + \", \" + object.vars.fill.values.rgb[2] + \")\";\n            var alpha = object.vars.fill.values.alpha;\n            if (alpha < 1) attr[\"fill-opacity\"] = this.s(alpha);\n          }\n          if (object.vars.stroke === false) attr.stroke = \"none\";else if (object.vars.stroke) {\n            attr.stroke = \"rgb(\" + object.vars.stroke.values.rgb[0] + \", \" + object.vars.stroke.values.rgb[1] + \", \" + object.vars.stroke.values.rgb[2] + \")\";\n            var alpha = object.vars.stroke.values.alpha;\n            if (alpha < 1) attr[\"stroke-opacity\"] = this.s(alpha);\n          }\n          if (object.vars.strokeWidth) attr[\"stroke-width\"] = this.s(object.vars.strokeWidth);\n          if (object.vars.strokeCap) attr[\"stroke-linecap\"] = object.vars.strokeCap;\n          if (object.vars.strokeJoin) attr[\"stroke-linejoin\"] = object.vars.strokeJoin;\n          if (object.vars.strokeMiterlimit) attr[\"stroke-miterlimit\"] = this.s(object.vars.strokeMiterlimit);\n          if (object.vars.strokeDash) attr[\"stroke-dasharray\"] = object.vars.strokeDash;\n          if (object.vars.strokeDashOffset) attr[\"stroke-dashoffset\"] = this.s(object.vars.strokeDashOffset);\n        },\n        // Single attributes\n        // --------------------------------------------------\n        transformAttribute: function transformAttribute(attr, shape) {\n          var vars = shape.vars;\n          var strings = [];\n\n          if (vars.rotation) {\n            var rot = \"rotate(\" + vars.rotation;\n            if (vars.rotationX || vars.rotationY) rot += \" \" + vars.rotationX + \" \" + vars.rotationY;\n            strings.push(rot + \")\");\n          }\n\n          if ((shape.type == \"group\" || shape.type == \"path\" || shape.type == \"polygon\" || shape.type == \"grid\" || shape.type == \"triangle\") && (vars.x || vars.y)) {\n            strings.push(\"translate(\" + vars.x + \" \" + vars.y + \")\");\n          }\n\n          if (strings.length > 0) attr.transform = strings.join(\" \").trim();\n        },\n        dAttribute: function dAttribute(object, attr) {\n          attr.d = map(object.vars.anchors, function (a) {\n            if (a.command == 'move') {\n              return \"M \" + a.vec1.x + \" \" + a.vec1.y;\n            } else if (a.command == 'line') {\n              return \"L \" + a.vec1.x + \" \" + a.vec1.y;\n            } else if (a.command == 'cubic') {\n              return \"C \" + a.vec1.x + \" \" + a.vec1.y + \" \" + a.vec2.x + \" \" + a.vec2.y + \" \" + a.vec3.x + \" \" + a.vec3.y;\n            } else if (a.command == 'quad' && typeof a.vec2 !== 'undefined') {\n              return \"Q \" + a.vec1.x + \" \" + a.vec1.y + \" \" + a.vec2.x + \" \" + a.vec2.y;\n            } else if (a.command == 'quad') {\n              return \"T \" + a.vec1.x + \" \" + a.vec1.y;\n            } else if (a.command == 'close') {\n              return \"Z\";\n            }\n          }).join(\" \").trim();\n        },\n        // Debug\n        // --------------------------------------------------\n        debugPathToSVG: function debugPathToSVG(path) {\n          var t = this;\n          var els = [];\n          each(path.vars.anchors, function (a, i) {\n            if (a.command == 'cubic') {\n              els.push(t.debugLine(path.vars.x + a.vec1.x, path.vars.y + a.vec1.y, path.vars.x + a.vec3.x, path.vars.y + a.vec3.y));\n              els.push(t.debugLine(path.vars.x + a.vec2.x, path.vars.y + a.vec2.y, path.vars.x + a.vec3.x, path.vars.y + a.vec3.y));\n\n              for (var i = 1; i < 4; i++) {\n                els.push(t.debugCircle(path.vars.x + a[\"vec\" + i].x, path.vars.y + a[\"vec\" + i].y));\n              }\n            } else if (a.command == 'quad' && typeof a.vec2 !== 'undefined') {\n              els.push(t.debugLine(path.vars.x + a.vec1.x, path.vars.y + a.vec1.y, path.vars.x + a.vec2.x, path.vars.y + a.vec2.y));\n\n              for (var i = 1; i < 3; i++) {\n                els.push(t.debugCircle(path.vars.x + a[\"vec\" + i].x, path.vars.y + a[\"vec\" + i].y));\n              }\n            }\n          });\n          return els;\n        },\n        debugGridToSVG: function debugGridToSVG(grid) {\n          var t = this;\n          var els = []; // draw container rect\n\n          els.push(this.debugRect(0, 0, grid.vars.width, grid.vars.height)); // draw lines for columns\n\n          var x = 0;\n\n          for (var i = 0; i < grid.vars.columns - 1; i++) {\n            x += grid.vars.moduleWidth;\n            els.push(this.debugLine(x, 0, x, grid.vars.height));\n            x += grid.vars.gutterWidth;\n            els.push(this.debugLine(x, 0, x, grid.vars.height));\n          } // draw lines for rows\n\n\n          var y = 0;\n\n          for (var i = 0; i < grid.vars.rows - 1; i++) {\n            y += grid.vars.moduleHeight;\n            els.push(this.debugLine(0, y, grid.vars.width, y));\n            y += grid.vars.gutterHeight;\n            els.push(this.debugLine(0, y, grid.vars.width, y));\n          }\n\n          return els;\n        },\n        debugCircle: function debugCircle(x, y) {\n          var c = new Circle(x, y, 4).fill(212, 18, 229).stroke(false);\n          return this.circleToSVG(c);\n        },\n        debugRect: function debugRect(x, y, width, height) {\n          var r = new Rectangle(x, y, width, height).stroke(212, 18, 229).fill(false);\n          return this.rectangleToSVG(r);\n        },\n        debugLine: function debugLine(x1, y1, x2, y2) {\n          var l = new Line(x1, y1, x2, y2).stroke(212, 18, 229);\n          return this.lineToSVG(l);\n        },\n        // Helpers\n        // --------------------------------------------------\n        // function to turn any non-string into a string. We need\n        // this when running server-side node.\n        s: function s(val) {\n          if (typeof val !== 'string' && typeof val.toString !== 'undefined') return val.toString();\n          return val;\n        }\n      };\n      module.exports = Render;\n    }, {\n      \"./shapes/circle\": 125,\n      \"./shapes/line\": 128,\n      \"./shapes/rectangle\": 131,\n      \"lodash/array/flatten\": 4,\n      \"lodash/collection/each\": 7,\n      \"lodash/collection/map\": 9,\n      \"virtual-dom/create-element\": 77,\n      \"virtual-dom/diff\": 78,\n      \"virtual-dom/h\": 79,\n      \"virtual-dom/patch\": 87,\n      \"virtual-dom/virtual-hyperscript/svg\": 100\n    }],\n    124: [function (require, module, exports) {\n      var defaults = require('lodash/object/defaults');\n\n      var assign = require(\"lodash/object/assign\");\n\n      var each = require(\"lodash/collection/each\");\n\n      var Vector = require(\"./vector\");\n\n      var Anchor = require(\"./anchor\");\n\n      var Color = require(\"./color\");\n\n      var Group = require(\"./group\");\n\n      var Grid = require(\"./grid\");\n\n      var Utils = require(\"./utils\");\n\n      var Events = require(\"./events\");\n\n      var Render = require(\"./render\");\n\n      var Circle = require(\"./shapes/circle\");\n\n      var Ellipse = require(\"./shapes/ellipse\");\n\n      var Line = require(\"./shapes/line\");\n\n      var Triangle = require(\"./shapes/triangle\");\n\n      var Path = require(\"./shapes/path\");\n\n      var Polygon = require(\"./shapes/polygon\");\n\n      var Rectangle = require(\"./shapes/rectangle\");\n\n      var Text = require(\"./shapes/text\");\n\n      var Image = require(\"./shapes/image\");\n\n      var Sizeable = require('./mixins/sizeable');\n\n      var Moveable = require('./mixins/moveable');\n\n      var Styleable = require('./mixins/styleable'); // Constructor\n      // --------------------------------------------------\n\n\n      var Rune = function Rune(options) {\n        var params = defaults(options || {}, {\n          width: 640,\n          height: 480,\n          debug: false,\n          frameRate: 60\n        });\n        this.width = params.width;\n        this.height = params.height;\n        this.renderer = new Render(params);\n        this.stage = new Group();\n        this.debug = params.debug;\n        this.frameCount = 1;\n        this.frameRate = params.frameRate;\n\n        if (params.container && typeof window !== 'undefined') {\n          if (typeof params.container === 'string') {\n            params.container = document.querySelector(params.container);\n          }\n\n          if (params.container) {\n            this.appendTo(params.container);\n          } else {\n            console.error(\"Container element not found\");\n          }\n        }\n\n        this.initEvents();\n      };\n\n      Rune.prototype = {\n        // Events\n        // --------------------------------------------------\n        initEvents: function initEvents() {\n          // Specific browser events\n          if (typeof window !== 'undefined') {\n            this.initMouseEvents();\n          }\n        },\n        relativePos: function relativePos(pageX, pageY) {\n          var bounds = this.renderer.el.getBoundingClientRect();\n          var relX = pageX - bounds.left;\n          var relY = pageY - bounds.top;\n          return {\n            x: relX,\n            y: relY\n          };\n        },\n        initMouseEvents: function initMouseEvents() {\n          var mouseEvents = ['mousemove', 'mousedown', 'mouseup', 'click'];\n          each(mouseEvents, function (mouseEvent) {\n            var that = this;\n            this.renderer.el.addEventListener(mouseEvent, function (e) {\n              var rel = that.relativePos(e.pageX, e.pageY);\n              that.trigger(mouseEvent, {\n                x: rel.x,\n                y: rel.y\n              });\n            });\n          }, this);\n        },\n        // Shape functions\n        // --------------------------------------------------\n        group: function group(x, y, parent) {\n          var g = Utils.invokeConstructor(Group, arguments);\n          Utils.groupLogic(g, this.stage, arguments[arguments.length - 1]);\n          return g;\n        },\n        triangle: function triangle(x, y, x2, y2, x3, y3, parent) {\n          var t = Utils.invokeConstructor(Triangle, arguments);\n          Utils.groupLogic(t, this.stage, arguments[arguments.length - 1]);\n          return t;\n        },\n        rect: function rect(x, y, width, height, parent) {\n          var r = Utils.invokeConstructor(Rectangle, arguments);\n          Utils.groupLogic(r, this.stage, arguments[arguments.length - 1]);\n          return r;\n        },\n        ellipse: function ellipse(x, y, width, height, parent) {\n          var e = Utils.invokeConstructor(Ellipse, arguments);\n          Utils.groupLogic(e, this.stage, arguments[arguments.length - 1]);\n          return e;\n        },\n        circle: function circle(x, y, radius, parent) {\n          var c = Utils.invokeConstructor(Circle, arguments);\n          Utils.groupLogic(c, this.stage, arguments[arguments.length - 1]);\n          return c;\n        },\n        line: function line(x1, y1, x2, y2, parent) {\n          var l = Utils.invokeConstructor(Line, arguments);\n          Utils.groupLogic(l, this.stage, arguments[arguments.length - 1]);\n          return l;\n        },\n        polygon: function polygon(x, y, parent) {\n          var p = Utils.invokeConstructor(Polygon, arguments);\n          Utils.groupLogic(p, this.stage, arguments[arguments.length - 1]);\n          return p;\n        },\n        path: function path(x, y, parent) {\n          var p = Utils.invokeConstructor(Path, arguments);\n          Utils.groupLogic(p, this.stage, arguments[arguments.length - 1]);\n          return p;\n        },\n        text: function text(textString, x, y, parent) {\n          var t = Utils.invokeConstructor(Text, arguments);\n          Utils.groupLogic(t, this.stage, arguments[arguments.length - 1]);\n          return t;\n        },\n        image: function image(url, x, y, width, height, parent) {\n          var i = Utils.invokeConstructor(Image, arguments);\n          Utils.groupLogic(i, this.stage, arguments[arguments.length - 1]);\n          return i;\n        },\n        grid: function grid(options, parent) {\n          var g = new Grid(options);\n          Utils.groupLogic(g, this.stage, parent);\n          return g;\n        },\n        // Playhead\n        // --------------------------------------------------\n        // This function is a proxy function that is run on every frame\n        // It has a check that delays the frame with a setTimeout if\n        // the framerate is lower than 60 fps.\n        play: function play() {\n          if (this.pauseNext) {\n            this.pauseNext = false;\n            return;\n          }\n\n          if (this.frameRate >= 60) {\n            this.playNow();\n          } else {\n            var that = this;\n            setTimeout(function () {\n              that.playNow();\n            }, 1000 / this.frameRate);\n          }\n        },\n        playNow: function playNow() {\n          var that = this;\n          this.trigger('draw', {\n            frameCount: this.frameCount\n          });\n          this.animationFrame = requestAnimationFrame(function () {\n            that.play();\n          });\n          this.draw();\n        },\n        pause: function pause() {\n          this.pauseNext = true;\n        },\n        // Render functions\n        // --------------------------------------------------\n        getEl: function getEl() {\n          return this.renderer.el;\n        },\n        appendTo: function appendTo(container) {\n          container.appendChild(this.renderer.el);\n          return this;\n        },\n        draw: function draw() {\n          this.renderer.render(this.stage, {\n            debug: this.debug\n          });\n          this.frameCount += 1;\n        }\n      };\n      assign(Rune, Utils);\n      assign(Rune.prototype, Utils);\n      assign(Rune.prototype, Events); // Modules should be accessible through Rune\n\n      Rune.Vector = Vector;\n      Rune.Anchor = Anchor;\n      Rune.Color = Color;\n      Rune.Group = Group;\n      Rune.Grid = Grid;\n      Rune.Circle = Circle;\n      Rune.Ellipse = Ellipse;\n      Rune.Line = Line;\n      Rune.Triangle = Triangle;\n      Rune.Path = Path;\n      Rune.Polygon = Polygon;\n      Rune.Rectangle = Rectangle;\n      Rune.Text = Text;\n      Rune.Image = Image; // Right now I need these for mixin tests.\n      // Rewrite so we don't need them.\n\n      Rune.Moveable = Moveable;\n      Rune.Styleable = Styleable;\n      Rune.Sizeable = Sizeable;\n      module.exports = Rune;\n    }, {\n      \"./anchor\": 113,\n      \"./color\": 115,\n      \"./events\": 116,\n      \"./grid\": 117,\n      \"./group\": 118,\n      \"./mixins/moveable\": 119,\n      \"./mixins/sizeable\": 120,\n      \"./mixins/styleable\": 121,\n      \"./render\": 123,\n      \"./shapes/circle\": 125,\n      \"./shapes/ellipse\": 126,\n      \"./shapes/image\": 127,\n      \"./shapes/line\": 128,\n      \"./shapes/path\": 129,\n      \"./shapes/polygon\": 130,\n      \"./shapes/rectangle\": 131,\n      \"./shapes/text\": 132,\n      \"./shapes/triangle\": 133,\n      \"./utils\": 134,\n      \"./vector\": 135,\n      \"lodash/collection/each\": 7,\n      \"lodash/object/assign\": 70,\n      \"lodash/object/defaults\": 71\n    }],\n    125: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Ellipse = require(\"./ellipse\");\n\n      var Utils = require('../utils');\n\n      var Circle = function Circle(x, y, radius) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Circle.prototype = {\n        init: function init(x, y, radius) {\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.radius = radius;\n        },\n        toPolygon: function toPolygon(opts, parent) {\n          var ellipse = new Ellipse(this.vars.x, this.vars.y, this.vars.radius * 2, this.vars.radius * 2);\n          var poly = ellipse.toPolygon(opts, false);\n          Utils.copyMixinVars(this, poly);\n          Utils.groupLogic(poly, this.parent, parent);\n          return poly;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          this.vars.radius *= scalar;\n          return this;\n        },\n        copy: function copy(parent) {\n          var copy = new Circle();\n          copy.vars.radius = this.vars.radius;\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        }\n      };\n      assign(Circle.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"circle\"\n      });\n      module.exports = Circle;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"./ellipse\": 126,\n      \"lodash/object/assign\": 70\n    }],\n    126: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Sizeable = require(\"../mixins/sizeable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Polygon = require('./polygon');\n\n      var Utils = require('../utils');\n\n      var Ellipse = function Ellipse(x, y, width, height) {\n        this.moveable();\n        this.sizeable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Ellipse.prototype = {\n        init: function init(x, y, width, height) {\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.width = width;\n          this.vars.height = height;\n        },\n        toPolygon: function toPolygon(opts, parent) {\n          var numVectors = 16; // if we're calculating the number of vectors based on spacing\n          // find circumference and divide by spacing.\n\n          if (opts && opts.spacing) {\n            var circumference = Math.PI * (this.vars.width + this.vars.height);\n            numVectors = circumference / opts.spacing;\n          }\n\n          var vectorAngle = 360 / numVectors;\n          var poly = new Polygon(this.vars.x, this.vars.y);\n\n          for (var i = 0; i < numVectors; i++) {\n            var x = Math.cos(Utils.radians(i * vectorAngle)) * this.vars.width;\n            var y = Math.sin(Utils.radians(i * vectorAngle)) * this.vars.height;\n            poly.lineTo(x, y);\n          }\n\n          Utils.copyMixinVars(this, poly);\n          Utils.groupLogic(poly, this.parent, parent);\n          return poly;\n        },\n        scale: function scale(scalar) {\n          this.scaleSizeable(scalar);\n          this.scaleStyleable(scalar);\n          return this;\n        },\n        copy: function copy(parent) {\n          var copy = new Ellipse();\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        }\n      };\n      assign(Ellipse.prototype, Moveable, Sizeable, Styleable, VectorsAcceptable, {\n        type: \"ellipse\"\n      });\n      module.exports = Ellipse;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/sizeable\": 120,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"./polygon\": 130,\n      \"lodash/object/assign\": 70\n    }],\n    127: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var Sizeable = require(\"../mixins/sizeable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Utils = require('../utils');\n\n      var Image = function Image(url, x, y, width, height) {\n        this.moveable();\n        this.sizeable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Image.prototype = {\n        init: function init(url, x, y, width, height) {\n          this.vars.url = url;\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.width = width;\n          this.vars.height = height;\n        },\n        scale: function scale(scalar) {\n          this.scaleSizeable(scalar);\n          return this;\n        },\n        copy: function copy(parent) {\n          var copy = new Image();\n          copy.vars.url = this.vars.url;\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        }\n      };\n      assign(Image.prototype, Moveable, Sizeable, VectorsAcceptable, {\n        type: \"image\"\n      });\n      module.exports = Image;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/sizeable\": 120,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"lodash/object/assign\": 70\n    }],\n    128: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Vector = require('../vector');\n\n      var Utils = require('../utils');\n\n      var Line = function Line(x, y, x2, y2) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Line.prototype = {\n        init: function init(x, y, x2, y2) {\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.x2 = x2;\n          this.vars.y2 = y2;\n        },\n        copy: function copy(parent) {\n          var copy = new Line();\n          copy.vars.x2 = this.vars.x2;\n          copy.vars.y2 = this.vars.y2;\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          var start = new Vector(this.vars.x, this.vars.y);\n          var end = new Vector(this.vars.x2, this.vars.y2);\n          var vec = end.sub(start).multiply(scalar).add(start);\n          this.vars.x2 = vec.x;\n          this.vars.y2 = vec.y;\n          return this;\n        }\n      };\n      assign(Line.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"line\"\n      });\n      module.exports = Line;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"../vector\": 135,\n      \"lodash/object/assign\": 70\n    }],\n    129: [function (require, module, exports) {\n      var each = require(\"lodash/collection/each\");\n\n      var map = require(\"lodash/collection/map\");\n\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Anchor = require('../anchor');\n\n      var Vector = require('../vector');\n\n      var Polygon = require('./polygon');\n\n      var Utils = require('../utils');\n\n      var Path = function Path(x, y) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Path.prototype = {\n        init: function init(x, y) {\n          this.vars.anchors = [];\n          if (typeof x !== 'undefined') this.vars.x = x;\n          if (typeof y !== 'undefined') this.vars.y = y;\n        },\n        moveTo: function moveTo(x, y) {\n          this.vars.anchors.push(new Anchor().setMove(x, y));\n          return this;\n        },\n        lineTo: function lineTo(x, y) {\n          this.checkStartMove();\n          this.vars.anchors.push(new Anchor().setLine(x, y));\n          return this;\n        },\n        curveTo: function curveTo(a, b, c, d, e, f) {\n          this.checkStartMove();\n          this.vars.anchors.push(new Anchor().setCurve(a, b, c, d, e, f));\n          return this;\n        },\n        closePath: function closePath() {\n          this.checkStartMove();\n          this.vars.anchors.push(new Anchor().setClose());\n          return this;\n        },\n        startVector: function startVector() {\n          return this.vars.anchors[0] && this.vars.anchors[0].command == 'move' ? this.vars.anchors[0].vec1.copy() : new Vector(0, 0);\n        },\n        subpaths: function subpaths(parent) {\n          var subs = [];\n          var lastSplit = 0;\n          each(this.vars.anchors, function (anchor, i) {\n            var isMove = anchor.command == 'move';\n            var isAfterClose = this.vars.anchors[i - 1] && this.vars.anchors[i - 1].command == 'close';\n            var isLast = i == this.vars.anchors.length - 1;\n\n            if (i > lastSplit && (isMove || isAfterClose || isLast)) {\n              if (isLast) i++;\n              var sub = this.copy(parent);\n              sub.vars.anchors = sub.vars.anchors.slice(lastSplit, i);\n              subs.push(sub);\n              lastSplit = i;\n            }\n          }, this);\n          return subs;\n        },\n        length: function length() {\n          var len = 0;\n          var paths = this.subpaths(false);\n\n          for (var p = 0; p < paths.length; p++) {\n            var anchors = paths[p].vars.anchors; // find length of all anchors in subpath.\n            // if last stop is close, use beginning\n\n            for (var i = 0; i < anchors.length - 1; i++) {\n              var start = anchors[i];\n              var startVec = start.vec3 || start.vec2 || start.vec1;\n              var stop = anchors[i + 1]; // if stop is a close command, replace close anchor\n              // with vector of first point in path.\n\n              if (stop.command == 'close') {\n                stop = paths[p].startVector();\n              }\n\n              var rel = stop.sub(startVec);\n              len += rel.length();\n            }\n          }\n\n          return len;\n        },\n        vectorAtLength: function vectorAtLength(len) {\n          var tmpLen = 0;\n          var paths = this.subpaths(false);\n\n          for (var p = 0; p < paths.length; p++) {\n            var anchors = paths[p].vars.anchors; // find length of all anchors in subpath.\n            // if last stop is close, use beginning\n\n            for (var i = 0; i < anchors.length - 1; i++) {\n              var start = anchors[i];\n              var startVec = start.vec3 || start.vec2 || start.vec1;\n              var stop = anchors[i + 1]; // if stop is a close command, replace close anchor\n              // with vector of first point in path.\n\n              if (stop.command == 'close') {\n                var beginning = paths[p].startVector();\n                stop = new Anchor().setLine(beginning.x, beginning.y);\n              }\n\n              var vec = stop.sub(startVec);\n              var veclen = vec.length();\n\n              if (tmpLen + veclen > len) {\n                var remaining = len - tmpLen;\n                return startVec.add(vec.vectorAt(remaining / veclen));\n              }\n\n              tmpLen += veclen;\n            }\n          }\n\n          return this.startVector();\n        },\n        vectorAt: function vectorAt(scalar) {\n          return this.vectorAtLength(this.length() * scalar);\n        },\n        toPolygons: function toPolygons(opts, parent) {\n          var paths = this.subpaths(false);\n          var polys = []; // if splitting the path into vectors with equal spacing\n\n          if (opts && opts.spacing) {\n            each(paths, function (path) {\n              var poly = new Polygon(path.vars.x, path.vars.y);\n              var len = path.length();\n              var num = len / opts.spacing;\n\n              for (var i = 0; i < num; i++) {\n                var vec = path.vectorAtLength(i * opts.spacing);\n                poly.lineTo(vec.x, vec.y);\n              }\n\n              Utils.copyMixinVars(this, poly);\n              Utils.groupLogic(poly, this.parent, parent);\n              polys.push(poly);\n            }, this);\n          }\n\n          return polys;\n        },\n        copy: function copy(parent) {\n          var copy = new Path();\n          copy.vars.anchors = map(this.vars.anchors, function (a) {\n            return a.copy();\n          });\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          this.vars.anchors = map(this.vars.anchors, function (anchor) {\n            return anchor.multiply(scalar);\n          });\n          return this;\n        },\n        fillRule: function fillRule(val) {\n          this.vars.fillRule = val;\n          return this;\n        },\n        // Paths must start with a moveTo. This function is checks if\n        // there is a moveTo at the beginning, and adds one if not.\n        checkStartMove: function checkStartMove() {\n          if (this.vars.anchors.length == 0) {\n            this.moveTo(0, 0);\n          }\n        }\n      };\n      assign(Path.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"path\"\n      });\n      module.exports = Path;\n    }, {\n      \"../anchor\": 113,\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"../vector\": 135,\n      \"./polygon\": 130,\n      \"lodash/collection/each\": 7,\n      \"lodash/collection/map\": 9,\n      \"lodash/object/assign\": 70\n    }],\n    130: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var each = require(\"lodash/collection/each\");\n\n      var map = require(\"lodash/collection/map\");\n\n      var flatten = require(\"lodash/array/flatten\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Vector = require('../vector');\n\n      var Utils = require('../utils');\n\n      var Polygon = function Polygon(x, y) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Polygon.prototype = {\n        init: function init(x, y) {\n          this.vars.vectors = [];\n          if (typeof x !== 'undefined') this.vars.x = x;\n          if (typeof y !== 'undefined') this.vars.y = y;\n        },\n        lineTo: function lineTo(x, y) {\n          if (x instanceof Vector) {\n            this.vars.vectors.push(x);\n          } else {\n            this.vars.vectors.push(new Vector(x, y));\n          }\n\n          return this;\n        },\n        length: function length() {\n          var len = 0;\n\n          for (var i = 0; i < this.vars.vectors.length; i++) {\n            var start = this.vars.vectors[i];\n            var stop = this.vars.vectors[(i + 1) % this.vars.vectors.length];\n            len += stop.sub(start).length();\n          }\n\n          return len;\n        },\n        vectorAtLength: function vectorAtLength(len) {\n          var tmpLen = 0;\n\n          for (var i = 0; i < this.vars.vectors.length; i++) {\n            var start = this.vars.vectors[i];\n            var stop = this.vars.vectors[(i + 1) % this.vars.vectors.length];\n            var vec = stop.sub(start);\n            var veclen = vec.length();\n\n            if (tmpLen + veclen > len) {\n              var remaining = len - tmpLen;\n              return start.add(vec.normalize().multiply(remaining));\n            }\n\n            tmpLen += veclen;\n          }\n\n          return this.vars.vectors[0].copy();\n        },\n        vectorAt: function vectorAt(scalar) {\n          return this.vectorAtLength(this.length() * scalar);\n        },\n        area: function area() {\n          var area = 0;\n\n          for (var i = 0; i < this.vars.vectors.length - 1; i++) {\n            area += this.vars.vectors[i].x * this.vars.vectors[i + 1].y - this.vars.vectors[i + 1].x * this.vars.vectors[i].y;\n          }\n\n          area /= 2;\n          return Math.abs(area);\n        },\n        bounds: function bounds() {\n          var xmax = undefined;\n          var ymax = undefined;\n          var xmin = undefined;\n          var ymin = undefined;\n          each(this.vars.vectors, function (vec) {\n            if (typeof xmin === 'undefined' || vec.x < xmin) xmin = vec.x;\n            if (typeof xmax === 'undefined' || vec.x > xmax) xmax = vec.x;\n            if (typeof ymin === 'undefined' || vec.y < ymin) ymin = vec.y;\n            if (typeof ymax === 'undefined' || vec.y > ymax) ymax = vec.y;\n          });\n          return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n          };\n        },\n        centroid: function centroid() {\n          var areaAcc = 0.0;\n          var xAcc = 0.0;\n          var yAcc = 0.0;\n\n          for (var i = 0; i < this.vars.vectors.length; i++) {\n            var start = this.vars.vectors[i];\n            var stop = this.vars.vectors[(i + 1) % this.vars.vectors.length];\n            areaAcc += start.x * stop.y - stop.x * start.y;\n            xAcc += (start.x + stop.x) * (start.x * stop.y - stop.x * start.y);\n            yAcc += (start.y + stop.y) * (start.x * stop.y - stop.x * start.y);\n          }\n\n          areaAcc /= 2.0;\n          var x = xAcc / (6.0 * areaAcc);\n          var y = yAcc / (6.0 * areaAcc);\n          return new Vector(x, y);\n        },\n        toPolygon: function toPolygon(opts, parent) {\n          if (opts && opts.spacing) {\n            var poly = new Polygon(this.vars.x, this.vars.y);\n            var len = this.length();\n            var num = len / opts.spacing;\n\n            for (var i = 0; i < num; i++) {\n              var vec = this.vectorAtLength(i * opts.spacing);\n              poly.lineTo(vec.x, vec.y);\n            }\n\n            Utils.copyMixinVars(this, poly);\n            Utils.groupLogic(poly, this.parent, parent);\n            return poly;\n          }\n\n          return this;\n        },\n        copy: function copy(parent) {\n          var copy = new Polygon();\n          copy.vars.vectors = map(this.vars.vectors, function (v) {\n            return v.copy();\n          });\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        // Code from ContainsPoint function here:\n        // http://polyk.ivank.net\n        contains: function contains(x, y) {\n          // get stage position\n          var addPos = this.stagepos(); // map array of vectors to flat array of xy numbers\n          // This might be slow, so let's rewrite this at some point.\n\n          var p = flatten(map(this.vars.vectors, function (vector) {\n            return [addPos.x + vector.x, addPos.y + vector.y];\n          }, this));\n          var n = p.length >> 1;\n          var ax,\n              ay = p[2 * n - 3] - y,\n              bx = p[2 * n - 2] - x,\n              by = p[2 * n - 1] - y;\n          var lup;\n\n          for (var i = 0; i < n; i++) {\n            ax = bx;\n            ay = by;\n            bx = p[2 * i] - x;\n            by = p[2 * i + 1] - y;\n            if (ay == by) continue;\n            lup = by > ay;\n          }\n\n          var depth = 0;\n\n          for (var i = 0; i < n; i++) {\n            ax = bx;\n            ay = by;\n            bx = p[2 * i] - x;\n            by = p[2 * i + 1] - y;\n            if (ay < 0 && by < 0) continue; // both \"up\" or both \"down\"\n\n            if (ay > 0 && by > 0) continue; // both \"up\" or both \"down\"\n\n            if (ax < 0 && bx < 0) continue; // both points on the left\n\n            if (ay == by && Math.min(ax, bx) <= 0) return true;\n            if (ay == by) continue;\n            var lx = ax + (bx - ax) * -ay / (by - ay);\n            if (lx == 0) return true; // point on edge\n\n            if (lx > 0) depth++;\n            if (ay == 0 && lup && by > ay) depth--; // hit vertex, both up\n\n            if (ay == 0 && !lup && by < ay) depth--; // hit vertex, both down\n\n            lup = by > ay;\n          }\n\n          return (depth & 1) == 1;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          this.vars.vectors = map(this.vars.vectors, function (vec) {\n            return vec.multiply(scalar);\n          });\n          return this;\n        }\n      };\n      assign(Polygon.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"polygon\"\n      });\n      module.exports = Polygon;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"../vector\": 135,\n      \"lodash/array/flatten\": 4,\n      \"lodash/collection/each\": 7,\n      \"lodash/collection/map\": 9,\n      \"lodash/object/assign\": 70\n    }],\n    131: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var Sizeable = require(\"../mixins/sizeable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Polygon = require('./polygon');\n\n      var Utils = require('../utils');\n\n      var Rectangle = function Rectangle(x, y, width, height) {\n        this.moveable();\n        this.sizeable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Rectangle.prototype = {\n        init: function init(x, y, width, height) {\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.width = width;\n          this.vars.height = height;\n        },\n        round: function round(rx, ry) {\n          if (!ry) ry = rx;\n          this.vars.rx = rx;\n          this.vars.ry = ry;\n        },\n        toPolygon: function toPolygon(opts, parent) {\n          var poly = new Polygon(this.vars.x, this.vars.y).lineTo(0, 0).lineTo(this.vars.width, 0).lineTo(this.vars.width, this.vars.height).lineTo(0, this.vars.height);\n          if (opts) poly = poly.toPolygon(opts, false);\n          Utils.copyMixinVars(this, poly);\n          Utils.groupLogic(poly, this.parent, parent);\n          return poly;\n        },\n        copy: function copy(parent) {\n          var copy = new Rectangle();\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          this.scaleSizeable(scalar);\n          this.scaleStyleable(scalar);\n          return this;\n        }\n      };\n      assign(Rectangle.prototype, Moveable, Sizeable, Styleable, VectorsAcceptable, {\n        type: \"rectangle\"\n      });\n      module.exports = Rectangle;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/sizeable\": 120,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"./polygon\": 130,\n      \"lodash/object/assign\": 70\n    }],\n    132: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Utils = require('../utils');\n\n      var Text = function Text(text, x, y) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Text.prototype = {\n        init: function init(text, x, y) {\n          this.vars.text = text;\n          this.vars.x = x;\n          this.vars.y = y;\n          this.vars.fontSize = 16;\n        },\n        toPolygon: function toPolygon() {\n          throw new Error(\"You need the Rune.Font plugin to convert text to polygon\");\n        },\n        textAlign: function textAlign(_textAlign) {\n          this.vars.textAlign = _textAlign;\n          return this;\n        },\n        fontFamily: function fontFamily(_fontFamily) {\n          this.vars.fontFamily = _fontFamily;\n          return this;\n        },\n        fontStyle: function fontStyle(_fontStyle) {\n          this.vars.fontStyle = _fontStyle;\n          return this;\n        },\n        fontWeight: function fontWeight(_fontWeight) {\n          this.vars.fontWeight = _fontWeight;\n          return this;\n        },\n        fontSize: function fontSize(_fontSize) {\n          this.vars.fontSize = _fontSize;\n          return this;\n        },\n        letterSpacing: function letterSpacing(_letterSpacing) {\n          this.vars.letterSpacing = _letterSpacing;\n          return this;\n        },\n        textDecoration: function textDecoration(_textDecoration) {\n          this.vars.textDecoration = _textDecoration;\n          return this;\n        },\n        copy: function copy(parent) {\n          var copy = new Text();\n          copy.vars.text = this.vars.text;\n          copy.vars.textAlign = this.vars.textAlign;\n          copy.vars.fontFamily = this.vars.fontFamily;\n          copy.vars.fontStyle = this.vars.fontStyle;\n          copy.vars.fontWeight = this.vars.fontWeight;\n          copy.vars.fontSize = this.vars.fontSize;\n          copy.vars.letterSpacing = this.vars.letterSpacing;\n          copy.vars.textDecoration = this.vars.textDecoration;\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          this.vars.fontSize *= scalar;\n          return this;\n        }\n      };\n      assign(Text.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"text\"\n      });\n      module.exports = Text;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"lodash/object/assign\": 70\n    }],\n    133: [function (require, module, exports) {\n      var assign = require(\"lodash/object/assign\");\n\n      var Moveable = require(\"../mixins/moveable\");\n\n      var Styleable = require(\"../mixins/styleable\");\n\n      var VectorsAcceptable = require(\"../mixins/vectors_acceptable\");\n\n      var Utils = require('../utils');\n\n      var Triangle = function Triangle(x, y, x2, y2, x3, y3) {\n        this.moveable();\n        this.styleable();\n        this.vectorsAcceptable(arguments);\n      };\n\n      Triangle.prototype = {\n        init: function init(x, y, x2, y2, x3, y3) {\n          this.vars.x = x;\n          this.vars.y = y; // Make variables relative to 0,0 as\n          // x,y will be used in transform\n\n          this.vars.x2 = x2 - x;\n          this.vars.y2 = y2 - y;\n          this.vars.x3 = x3 - x;\n          this.vars.y3 = y3 - y;\n        },\n        copy: function copy(parent) {\n          var copy = new Triangle();\n          copy.vars.x2 = this.vars.x2;\n          copy.vars.y2 = this.vars.y2;\n          copy.vars.x3 = this.vars.x3;\n          copy.vars.y3 = this.vars.y3;\n          Utils.copyMixinVars(this, copy);\n          Utils.groupLogic(copy, this.parent, parent);\n          return copy;\n        },\n        scale: function scale(scalar) {\n          this.scaleStyleable(scalar);\n          this.vars.x2 *= scalar;\n          this.vars.y2 *= scalar;\n          this.vars.x3 *= scalar;\n          this.vars.y3 *= scalar;\n          return this;\n        }\n      };\n      assign(Triangle.prototype, Moveable, Styleable, VectorsAcceptable, {\n        type: \"triangle\"\n      });\n      module.exports = Triangle;\n    }, {\n      \"../mixins/moveable\": 119,\n      \"../mixins/styleable\": 121,\n      \"../mixins/vectors_acceptable\": 122,\n      \"../utils\": 134,\n      \"lodash/object/assign\": 70\n    }],\n    134: [function (require, module, exports) {\n      var Utils = {\n        random: function random(a, b) {\n          if (typeof b === 'undefined') {\n            b = a;\n            a = 0;\n          }\n\n          return a + Math.random() * (b - a);\n        },\n        degrees: function degrees(radians) {\n          return radians * (180 / Math.PI);\n        },\n        radians: function radians(degrees) {\n          return degrees * (Math.PI / 180);\n        },\n        groupLogic: function groupLogic(child, fallback, group) {\n          if (group && group.type == \"group\") {\n            group.add(child);\n          } else if (group !== false && fallback && fallback.type == \"group\") {\n            fallback.add(child);\n          }\n        },\n        copyMixinVars: function copyMixinVars(a, b) {\n          if (a.moveable && b.moveable) b.moveable(a);\n          if (a.sizeable && b.sizeable) b.sizeable(a);\n          if (a.styleable && b.styleable) b.styleable(a);\n        },\n        round: function round(value, decimals) {\n          return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n        },\n        argumentsToArray: function argumentsToArray(argObject) {\n          return Array.prototype.slice.call(argObject);\n        },\n        invokeConstructor: function invokeConstructor(constructor, argsObject) {\n          var argArray = this.argumentsToArray(argsObject);\n          var args = [null].concat(argArray);\n          var factoryFunction = constructor.bind.apply(constructor, args);\n          return new factoryFunction();\n        },\n        expandVectorArguments: function expandVectorArguments(argObject) {\n          var args = this.argumentsToArray(argObject);\n\n          for (var i = 0; i < args.length; i++) {\n            if (args[i] && args[i].type == 'vector') {\n              var vec = args[i];\n              args.splice(i, 1);\n              args.splice(i, 0, vec.y);\n              args.splice(i, 0, vec.x);\n            }\n          }\n\n          return args;\n        }\n      };\n      module.exports = Utils;\n    }, {}],\n    135: [function (require, module, exports) {\n      var Utils = require('./utils');\n\n      var ROUND_PRECISION = 9;\n\n      var Vector = function Vector(x, y) {\n        this.x = x || 0;\n        this.y = y || 0;\n      };\n\n      Vector.prototype = {\n        type: \"vector\",\n        set: function set(x, y) {\n          this.x = x;\n          this.y = y;\n        },\n        add: function add(vec) {\n          return new Vector(this.x + vec.x, this.y + vec.y);\n        },\n        sub: function sub(vec) {\n          return new Vector(this.x - vec.x, this.y - vec.y);\n        },\n        multiply: function multiply(scalar) {\n          return new Vector(this.x * scalar, this.y * scalar);\n        },\n        divide: function divide(scalar) {\n          var vec = new Vector(0, 0);\n\n          if (scalar) {\n            vec.x = this.x / scalar;\n            vec.y = this.y / scalar;\n          }\n\n          return vec;\n        },\n        distance: function distance(vec) {\n          return Math.sqrt(this.distanceSquared(vec));\n        },\n        distanceSquared: function distanceSquared(vec) {\n          var dx = this.x - vec.x;\n          var dy = this.y - vec.y;\n          return dx * dx + dy * dy;\n        },\n        lerp: function lerp(vec, scalar) {\n          var x = (vec.x - this.x) * scalar + this.x;\n          var y = (vec.y - this.y) * scalar + this.y;\n          return new Vector(x, y);\n        },\n        dot: function dot(vec) {\n          return this.x * vec.x + this.y * vec.y;\n        },\n        length: function length() {\n          return Math.sqrt(this.lengthSquared());\n        },\n        lengthSquared: function lengthSquared() {\n          return this.x * this.x + this.y * this.y;\n        },\n        normalize: function normalize() {\n          return this.divide(this.length());\n        },\n        rotation: function rotation() {\n          return Utils.degrees(Math.atan2(this.y, this.x));\n        },\n        rotate: function rotate(degrees) {\n          var rad = Utils.radians(this.rotation() + degrees);\n          var len = this.length();\n          var x = Utils.round(Math.cos(rad) * len, ROUND_PRECISION);\n          var y = Utils.round(Math.sin(rad) * len, ROUND_PRECISION);\n          return new Vector(x, y);\n        },\n        copy: function copy() {\n          return new Vector(this.x, this.y);\n        },\n        toString: function toString() {\n          return \"(x: \" + this.x + \", y: \" + this.y + \")\";\n        }\n      };\n      module.exports = Vector;\n    }, {\n      \"./utils\": 134\n    }]\n  }, {}, [124])(124);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./js/rune.js?");

/***/ })

}]);